% $ biblatex auxiliary file $
% $ biblatex bbl format version 2.5 $
% Do not modify the above lines!
%
% This is an auxiliary file used by the 'biblatex' package.
% This file may safely be deleted. It will be recreated by
% biber as required.
%
\begingroup
\makeatletter
\@ifundefined{ver@biblatex.sty}
  {\@latex@error
     {Missing 'biblatex' package}
     {The bibliography requires the 'biblatex' package.}
      \aftergroup\endinput}
  {}
\endgroup


\refsection{0}
  \sortlist{nty}{nty}
    \entry{Adam2008}{inproceedings}{}
      \name{author}{2}{}{%
        {{hash=5b918bd7a619d0729779d4025efc8878}{Adam}{A\bibinitperiod}{Sebastian}{S\bibinitperiod}{}{}{}{}}%
        {{hash=5de65c47850c79a02d044240a92d7641}{Doerr}{D\bibinitperiod}{Joerg}{J\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{081da75bd51ec4cc17a9ae8bfac6a566}
      \strng{fullhash}{081da75bd51ec4cc17a9ae8bfac6a566}
      \field{sortinit}{A}
      \field{sortinithash}{b685c7856330eaee22789815b49de9bb}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Business Process Management (BPM) and Service Oriented Architectures (SOA) are considered as a powerful combination for supporting enterprise's success. While BPM addresses the (goal-driven) design, deployment, and continuous evaluation of business processes, SOA promises a supporting IT paradigm to make process applications and thus enterprises more agile and flexible. Nevertheless, there is still a gap between business and IT, as the services provided by an SOA cannot - until now - support the business processes immediately. In this paper, we focus on the transition between the design and the deployment of business processes and present our ideas on how this transition could be streamlined by a better alignment of BPM and SOA. Based on systems engineering and product line experience, we identify solution principles and discuss related questions.}
      \field{booktitle}{CEUR Workshop Proceedings}
      \field{issn}{16130073}
      \field{title}{{How to better align BPM {\&} SOA - Ideas on improving the transition between process design and deployment}}
      \field{volume}{335}
      \field{year}{2008}
      \field{pages}{49\bibrangedash 55}
      \range{pages}{7}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Adam, Doerr - 2008 - How to better align BPM {\&} SOA - Ideas on improving the transition between process design and deployment.pdf:pdf
      \endverb
      \verb{url}
      \verb http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.143.870%7B%5C&%7Drep=rep1%7B%5C&%7Dtype=pdf
      \endverb
      \keyw{Business IT alignment,Business Process Management,Product line engineering,Service-oriented architecture}
    \endentry
    \entry{Adya2002}{article}{}
      \name{author}{3}{}{%
        {{hash=41f9ed5c57b91ca8a1b3c3fd7cbf2595}{Adya}{A\bibinitperiod}{A}{A\bibinitperiod}{}{}{}{}}%
        {{hash=f3e0771e4501fb3315c5614dbf7ebc78}{Howell}{H\bibinitperiod}{J}{J\bibinitperiod}{}{}{}{}}%
        {{hash=20bd8489c068122c7fccc827be90043a}{Theimer}{T\bibinitperiod}{M}{M\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{5656d6494d18a34a98d0817ae188937a}
      \strng{fullhash}{5656d6494d18a34a98d0817ae188937a}
      \field{sortinit}{A}
      \field{sortinithash}{b685c7856330eaee22789815b49de9bb}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{USENIX Annual Technical Conference}
      \field{title}{{Cooperative Task Management Without Manual Stack Management.}}
      \field{year}{2002}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Adya, Howell, Theimer - 2002 - Cooperative Task Management Without Manual Stack Management.pdf:pdf
      \endverb
      \verb{url}
      \verb http://static.usenix.org/publications/library/proceedings/usenix02/full%7B%5C_%7Dpapers/adyahowell/adyahowell%7B%5C_%7Dhtml/
      \endverb
    \endentry
    \entry{Ajima2015}{inproceedings}{}
      \name{author}{5}{}{%
        {{hash=661422d115b48838089db698ec92fb30}{Ajima}{A\bibinitperiod}{Yuichiro}{Y\bibinitperiod}{}{}{}{}}%
        {{hash=9dc2c1ef202acb4243349d0ee0984abf}{Nose}{N\bibinitperiod}{Takafumi}{T\bibinitperiod}{}{}{}{}}%
        {{hash=bc4ce4b42c3d25b04bdcdaaf5476f111}{Saga}{S\bibinitperiod}{Kazushige}{K\bibinitperiod}{}{}{}{}}%
        {{hash=76f912d9cfcc981650c7f788528580fb}{Shida}{S\bibinitperiod}{Naoyuki}{N\bibinitperiod}{}{}{}{}}%
        {{hash=090e8edb73b248ecd894dc2167535ade}{Sumimoto}{S\bibinitperiod}{Shinji}{S\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {New York, New York, USA}%
      }
      \list{publisher}{1}{%
        {ACM Press}%
      }
      \strng{namehash}{ec108e50ab16978a143b15b3b8472a2b}
      \strng{fullhash}{a13826731f5df26bcc994ad8f479823f}
      \field{sortinit}{A}
      \field{sortinithash}{b685c7856330eaee22789815b49de9bb}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{Proceedings of the First International Workshop on Extreme Scale Programming Models and Middleware - ESPM '15}
      \field{isbn}{9781450339964}
      \field{month}{11}
      \field{title}{{ACPdl}}
      \field{year}{2015}
      \field{pages}{11\bibrangedash 18}
      \range{pages}{8}
      \verb{doi}
      \verb 10.1145/2832241.2832242
      \endverb
      \verb{file}
      \verb :home/etn/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Ajima et al. - 2015 - ACPdl.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=2832241.2832242
      \endverb
      \keyw{PGAS,communication library,data structure,global memory allocator}
    \endentry
    \entry{Akidau2013}{article}{}
      \name{author}{2}{}{%
        {{hash=9b03535781b5c447925402c3ac5aec0f}{Akidau}{A\bibinitperiod}{T}{T\bibinitperiod}{}{}{}{}}%
        {{hash=b1dd2d63a817c9591bd3533ccbd5fdef}{Balikov}{B\bibinitperiod}{A}{A\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{2275261dda800fb6b33cdbd8bb8d7b51}
      \strng{fullhash}{2275261dda800fb6b33cdbd8bb8d7b51}
      \field{sortinit}{A}
      \field{sortinithash}{b685c7856330eaee22789815b49de9bb}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{Proceedings of the VLDB Endowment 6.11}
      \field{title}{{MillWheel: Fault-Tolerant Stream Processing at Internet Scale}}
      \field{year}{2013}
      \verb{url}
      \verb http://research.google.com/pubs/archive/41378.pdf
      \endverb
    \endentry
    \entry{Allen1970}{article}{}
      \name{author}{1}{}{%
        {{hash=9824cba256f4dfe261f27da856d4960e}{Allen}{A\bibinitperiod}{Frances\bibnamedelima E.}{F\bibinitperiod\bibinitdelim E\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {ACM}%
      }
      \strng{namehash}{9824cba256f4dfe261f27da856d4960e}
      \strng{fullhash}{9824cba256f4dfe261f27da856d4960e}
      \field{sortinit}{A}
      \field{sortinithash}{b685c7856330eaee22789815b49de9bb}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{issn}{03621340}
      \field{journaltitle}{ACM SIGPLAN Notices}
      \field{month}{07}
      \field{number}{7}
      \field{title}{{Control flow analysis}}
      \field{volume}{5}
      \field{year}{1970}
      \field{pages}{1\bibrangedash 19}
      \range{pages}{19}
      \verb{doi}
      \verb 10.1145/390013.808479
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=390013.808479
      \endverb
    \endentry
    \entry{Amarasinghe1995}{article}{}
      \name{author}{4}{}{%
        {{hash=4772ca039f95fb67f2c1db8045281cd6}{Amarasinghe}{A\bibinitperiod}{SP}{S\bibinitperiod}{}{}{}{}}%
        {{hash=d69a8a1b081d696f4e25b94d25396dd6}{Anderson}{A\bibinitperiod}{JAM}{J\bibinitperiod}{}{}{}{}}%
        {{hash=63dddf6a6ccde8c3c9fd17b6ed18011c}{Lam}{L\bibinitperiod}{MS}{M\bibinitperiod}{}{}{}{}}%
        {{hash=cb9dde428d522c5c6aae230389d8f6fd}{Tseng}{T\bibinitperiod}{CW}{C\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{2584264ec7c7af1c0c73bf8aa6affbd3}
      \strng{fullhash}{5e8130cc688f50852f29f91d8836f9c5}
      \field{sortinit}{A}
      \field{sortinithash}{b685c7856330eaee22789815b49de9bb}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{PPSC}
      \field{title}{{An Overview of the SUIF Compiler for Scalable Parallel Machines.}}
      \field{year}{1995}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Amarasinghe et al. - 1995 - An Overview of the SUIF Compiler for Scalable Parallel Machines.pdf:pdf
      \endverb
      \verb{url}
      \verb http://www.researchgate.net/publication/2646829%7B%5C_%7DChapter%7B%5C_%7D1%7B%5C_%7DAn%7B%5C_%7DOverview%7B%5C_%7Dof%7B%5C_%7Dthe%7B%5C_%7DSUIF%7B%5C_%7DCompiler%7B%5C_%7Dfor%7B%5C_%7DScalable%7B%5C_%7DParallel%7B%5C_%7DMachines/file/60b7d5193bc4fef52b.pdf
      \endverb
    \endentry
    \entry{Amdahl1967}{inproceedings}{}
      \name{author}{1}{}{%
        {{hash=bc683e6c79d089d18b4bccd4d5a804d9}{Amdahl}{A\bibinitperiod}{Gene\bibnamedelima M.}{G\bibinitperiod\bibinitdelim M\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{bc683e6c79d089d18b4bccd4d5a804d9}
      \strng{fullhash}{bc683e6c79d089d18b4bccd4d5a804d9}
      \field{sortinit}{A}
      \field{sortinithash}{b685c7856330eaee22789815b49de9bb}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{For over a decade prophets have voiced the contention that the organization of a single computer has reached its limits and that truly significant advances can be made only by interconnection of a multiplicity of computers in such a manner as to permit cooperative solution. Variously the proper direction has been pointed out as general purpose computers with a generalized interconnection of memories, or as specialized computers with geometrically related memory interconnections and controlled by one or more instruction streams.}
      \field{booktitle}{AFIPS Spring Joint Computer Conference, 1967. AFIPS '67 (Spring). Proceedings of the}
      \field{isbn}{1558605398}
      \field{issn}{18816096}
      \field{title}{{Validity of the Single Processor Approach to Achieving Large Scale Computing Capabilities}}
      \field{volume}{30}
      \field{year}{1967}
      \field{pages}{483\bibrangedash 485}
      \range{pages}{3}
      \verb{doi}
      \verb doi: 10.1145/1465482.1465560
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Amdahl - 1967 - Validity of the Single Processor Approach to Achieving Large Scale Computing Capabilities.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=1465560%20http://delivery.acm.org/10.1145/1470000/1465560/p483-amdahl.pdf?ip=202.189.127.238%7B%5C&%7Did=1465560%7B%5C&%7Dacc=ACTIVE%20SERVICE%7B%5C&%7Dkey=CDD1E79C27AC4E65.DE0A32330AE3471B.4D4702B0C3E38B35.4D4702B0C3E38B35%7B%5C&%7DCFID=646862329%7B%5C&%7DCFTOKEN=33418
      \endverb
      \keyw{parallel-computing}
    \endentry
    \entry{Andersen1994}{article}{}
      \name{author}{1}{}{%
        {{hash=e39313d22d067cf16e14c783b765b4fa}{Andersen}{A\bibinitperiod}{LO}{L\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{e39313d22d067cf16e14c783b765b4fa}
      \strng{fullhash}{e39313d22d067cf16e14c783b765b4fa}
      \field{sortinit}{A}
      \field{sortinithash}{b685c7856330eaee22789815b49de9bb}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{title}{{Program analysis and specialization for the C programming language}}
      \field{year}{1994}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Andersen - 1994 - Program analysis and specialization for the C programming language.pdf:pdf
      \endverb
      \verb{url}
      \verb http://www-ti.informatik.uni-tuebingen.de/%7B~%7Dbehrend/PaperSeminar/Program%20Analysis%20and%20SpecializationPhD.pdf
      \endverb
    \endentry
    \entry{Anderson1990}{misc}{}
      \name{author}{2}{}{%
        {{hash=af858acfe74a311936fe0dce54bdc92d}{Anderson}{A\bibinitperiod}{James\bibnamedelima H.}{J\bibinitperiod\bibinitdelim H\bibinitperiod}{}{}{}{}}%
        {{hash=b35edec677b7232791677ab6ed0827a2}{Gouda}{G\bibinitperiod}{Mohamed\bibnamedelima G.}{M\bibinitperiod\bibinitdelim G\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{ec125d604b58afca7e1f11174d510e09}
      \strng{fullhash}{ec125d604b58afca7e1f11174d510e09}
      \field{sortinit}{A}
      \field{sortinithash}{b685c7856330eaee22789815b49de9bb}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{title}{{The virtue of Patience: Concurrent Programming With And Without Waiting}}
      \field{year}{1990}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Anderson, Gouda - 1990 - The virtue of Patience Concurrent Programming With And Without Waiting.pdf:pdf
      \endverb
      \verb{url}
      \verb http://www.cs.utexas.edu/ftp/techreports/tr90-23.pdf
      \endverb
    \endentry
    \entry{Armstrong2014}{book}{}
      \name{author}{1}{}{%
        {{hash=e9a00852e213280e28c2aeef1d167186}{Armstrong}{A\bibinitperiod}{Joe}{J\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {Pragmatic Programmers}%
      }
      \strng{namehash}{e9a00852e213280e28c2aeef1d167186}
      \strng{fullhash}{e9a00852e213280e28c2aeef1d167186}
      \field{sortinit}{A}
      \field{sortinithash}{b685c7856330eaee22789815b49de9bb}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Erlang solves one of the most pressing problems facing developers today: how to write reliable, concurrent, high-performance systems. It's used worldwide by companies who need to produce reliable, efficient, and scalable applications. Invest in learning Erlang now. Moore's Law is the observation that the amount you can do on a single chip doubles every two years. But Moore's Law is taking a detour. Rather than producing faster and faster processors, companies such as Intel and AMD are producing multi-core devices: single chips containing two, four, or more processors. If your programs aren't concurrent, they'll only run on a single processor at a time. Your users will think that your code is slow. Erlang is a programming language designed for building highly parallel, distributed, fault-tolerant systems. It has been used commercially for many years to build massive fault-tolerated systems that run for years with minimal failures. Erlang programs run seamlessly on multi-core computers: this means your Erlang program should run a lot faster on a 4 core processor than on a single core processor, all without you having to change a line of code. Erlang combines ideas from the world of functional programming with techniques for building fault-tolerant systems to make a powerful language for building the massively parallel, networked applications of the future. This book presents Erlang and functional programming in the familiar Pragmatic style. And it's written by Joe Armstrong, one of the creators of Erlang. It includes example code you'll be able to build upon. In addition, the book contains the full source code for two interesting applications: - A SHOUTcast server which you can use to stream music to every computer in your house, and - a full-text indexing and search engine that can index gigabytes of data. Learn how to write programs that run on dozens or even hundreds of local and remote processors. See how to write robust applications that run even in the face of network and hardware failure, using the Erlang programming language.}
      \field{booktitle}{North}
      \field{isbn}{9781934356005}
      \field{issn}{09567968}
      \field{title}{{Programming Erlang}}
      \field{year}{2007}
      \field{pages}{519}
      \range{pages}{1}
      \verb{doi}
      \verb 10.1017/S0956796809007163
      \endverb
      \verb{url}
      \verb http://cds.cern.ch/record/1970203
      \endverb
    \endentry
    \entry{Armstrong1993}{book}{}
      \name{author}{4}{}{%
        {{hash=e9a00852e213280e28c2aeef1d167186}{Armstrong}{A\bibinitperiod}{Joe}{J\bibinitperiod}{}{}{}{}}%
        {{hash=12b8ab3e33bfc8b4bb73d2a9445e354a}{Virding}{V\bibinitperiod}{Robert}{R\bibinitperiod}{}{}{}{}}%
        {{hash=cee622491b4fd006feb61450323ff459}{Wikstrom}{W\bibinitperiod}{Claes}{C\bibinitperiod}{}{}{}{}}%
        {{hash=d377302743e0ca21850cb290b55f165c}{Williams}{W\bibinitperiod}{Mike}{M\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{c246894484fd6bbee731e31213075f72}
      \strng{fullhash}{faf98537b8aa17810074f5f840b9f581}
      \field{sortinit}{A}
      \field{sortinithash}{b685c7856330eaee22789815b49de9bb}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{title}{{Concurrent Programming in ERLANG}}
      \field{year}{1993}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Armstrong et al. - 1993 - Concurrent Programming in ERLANG.pdf:pdf
      \endverb
      \verb{url}
      \verb http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.33.6333
      \endverb
    \endentry
    \entry{Auguin1983}{inproceedings}{}
      \name{author}{2}{}{%
        {{hash=f84129612a193e49dfc81ff6075af47f}{Auguin}{A\bibinitperiod}{Michel}{M\bibinitperiod}{}{}{}{}}%
        {{hash=f87a33c03ec63e10bc4f8f92950985bb}{Larbey}{L\bibinitperiod}{Francois}{F\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{ec5fe549af6b6b73d01eab426b56846b}
      \strng{fullhash}{ec5fe549af6b6b73d01eab426b56846b}
      \field{sortinit}{A}
      \field{sortinithash}{b685c7856330eaee22789815b49de9bb}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{Microcomputers: developments in industry, business, and education}
      \field{title}{{OPSILA: an advanced SIMD for numerical analysis and signal processing}}
      \field{year}{1983}
      \field{pages}{311\bibrangedash 318}
      \range{pages}{8}
      \verb{url}
      \verb https://scholar.google.com/scholar?q=OPSILA%20%7B%%7D3A%20an%20advanced%20SIMD%20for%20numerical%20analysis%20and%20signal%20processing%7B%5C&%7DbtnG=Search%7B%5C&%7Das%7B%5C_%7Dsdt=800000000001%7B%5C&%7Das%7B%5C_%7Dsdtp=on%7B%5C#%7D0
      \endverb
      \keyw{SPMD}
    \endentry
    \entry{Banerjee2013}{book}{}
      \name{author}{1}{}{%
        {{hash=dd61d6c0cd18ba94c6044484b2c7536d}{Banerjee}{B\bibinitperiod}{U}{U\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{dd61d6c0cd18ba94c6044484b2c7536d}
      \strng{fullhash}{dd61d6c0cd18ba94c6044484b2c7536d}
      \field{sortinit}{B}
      \field{sortinithash}{4ecbea03efd0532989d3836d1a048c32}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{title}{{Loop parallelization}}
      \field{year}{2013}
      \verb{url}
      \verb https://books.google.com/books?hl=en%7B%5C&%7Dlr=%7B%5C&%7Did=9xXrBwAAQBAJ%7B%5C&%7Doi=fnd%7B%5C&%7Dpg=PR13%7B%5C&%7Ddq=loop+parallelization%7B%5C&%7Dots=flLbnvNcCM%7B%5C&%7Dsig=a1VFNFLS3%7B%5C_%7DTRjBVdpPr8mrH-0DE
      \endverb
    \endentry
    \entry{Bastoul2004}{article}{}
      \name{author}{5}{}{%
        {{hash=73dad79a1ae262d0e4fcbebc7b4a0e80}{Bastoul}{B\bibinitperiod}{Cédric}{C\bibinitperiod}{}{}{}{}}%
        {{hash=172a9e8d07a17bf85f8736265ac88aae}{Cohen}{C\bibinitperiod}{Albert}{A\bibinitperiod}{}{}{}{}}%
        {{hash=8dbf2fd22ee4b7397a105ddf18a4dc2a}{Girbal}{G\bibinitperiod}{Sylvain}{S\bibinitperiod}{}{}{}{}}%
        {{hash=6aeef312cb41697230dc1429bfdeea53}{Sharma}{S\bibinitperiod}{Saurabh}{S\bibinitperiod}{}{}{}{}}%
        {{hash=d9ff79867ff8e573205244b2b0f8e531}{Temam}{T\bibinitperiod}{Olivier}{O\bibinitperiod}{}{}{}{}}%
      }
      \name{editor}{1}{}{%
        {{hash=9e38320db8c37531be4854f8fe907033}{Rauchwerger}{R\bibinitperiod}{Lawrence}{L\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {Berlin, Heidelberg}%
      }
      \list{publisher}{1}{%
        {Springer Berlin Heidelberg}%
      }
      \strng{namehash}{43fe89bd754b769f9dfe4f1ac72060cc}
      \strng{fullhash}{2d6a09ace641f51a09b424bcb8a3efbf}
      \field{sortinit}{B}
      \field{sortinithash}{4ecbea03efd0532989d3836d1a048c32}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Abstract. We seek to extend the scope and efficiency of iterative com- pilation techniques by searching not only for program transformation parameters but for the most appropriate transformations themselves. For that purpose, we need a generic way to express program transforma- ...}
      \field{isbn}{9783540211990}
      \field{issn}{978-3-540-21199-0}
      \field{journaltitle}{LCPC '04 Languages and Compilers for Parallel Computing}
      \field{number}{Chapter 14}
      \field{series}{Lecture Notes in Computer Science}
      \field{title}{{Putting Polyhedral Loop Transformations to Work}}
      \field{volume}{2958}
      \field{year}{2004}
      \field{pages}{209\bibrangedash 225}
      \range{pages}{17}
      \verb{doi}
      \verb 10.1007/b95707
      \endverb
      \verb{url}
      \verb http://link.springer.com/10.1007/b95707%20http://www.springerlink.com/index/10.1007/978-3-540-24644-2%7B%5C_%7D14$%5Cbackslash$npapers2://publication/doi/10.1007/978-3-540-24644-2%7B%5C_%7D14
      \endverb
    \endentry
    \entry{Bauer2012}{article}{}
      \name{author}{4}{}{%
        {{hash=e3aaf99037fdbf7a9ce99497cd543989}{Bauer}{B\bibinitperiod}{Michael}{M\bibinitperiod}{}{}{}{}}%
        {{hash=63f01523432d1dc0b061f6fee6d7e9cb}{Treichler}{T\bibinitperiod}{Sean}{S\bibinitperiod}{}{}{}{}}%
        {{hash=bf56b91f48eefc569354c6e8628206c9}{Slaughter}{S\bibinitperiod}{Elliott}{E\bibinitperiod}{}{}{}{}}%
        {{hash=7b4be770da7d4fe41717b6d75f1fa596}{Aiken}{A\bibinitperiod}{Alex}{A\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {IEEE Computer Society Press}%
      }
      \strng{namehash}{d8d2e28a8adb14dccb32f1de55f837f0}
      \strng{fullhash}{03e269ce9335b04013969ab3a5f32a03}
      \field{sortinit}{B}
      \field{sortinithash}{4ecbea03efd0532989d3836d1a048c32}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Modern parallel architectures have both heterogeneous processors and deep, complex memory hierarchies. We present Legion, a programming model and runtime system for achieving high performance on these machines. Legion is organized around logical regions, which express both locality and independence of program data, and tasks, functions that perform computations on regions. We describe a runtime system that dynamically extracts parallelism from Legion programs, using a distributed, parallel scheduling algorithm that identifies both independent tasks and nested parallelism. Legion also enables explicit, programmer controlled movement of data through the memory hierarchy and placement of tasks based on locality information via a novel mapping interface. We evaluate our Legion implementation on three applications: fluid-flow on a regular grid, a three-level AMR code solving a heat diffusion equation, and a circuit simulation.}
      \field{isbn}{9781467308069}
      \field{issn}{21674329}
      \field{journaltitle}{Proceedings of the International Conference on High Performance Computing Networking Storage and Analysis SC 12}
      \field{month}{11}
      \field{title}{{Legion: Expressing Locality and Independence with Logical Regions}}
      \field{year}{2012}
      \field{pages}{1\bibrangedash 11}
      \range{pages}{11}
      \verb{doi}
      \verb 10.1109/SC.2012.71
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Bauer et al. - 2012 - Legion Expressing Locality and Independence with Logical Regions.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=2388996.2389086
      \endverb
    \endentry
    \entry{Beck1991}{article}{}
      \name{author}{3}{}{%
        {{hash=f2bf020c60232cf3d1f10ea617955d04}{Beck}{B\bibinitperiod}{Micah}{M\bibinitperiod}{}{}{}{}}%
        {{hash=7a9ba474ac2382b84360926290f8dbf4}{Johnson}{J\bibinitperiod}{Richard}{R\bibinitperiod}{}{}{}{}}%
        {{hash=e7f2014846734dae8a242e557fdafb65}{Pingali}{P\bibinitperiod}{Keshav}{K\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{b2a23781426f5c152e418647ffebff9d}
      \strng{fullhash}{b2a23781426f5c152e418647ffebff9d}
      \field{sortinit}{B}
      \field{sortinithash}{4ecbea03efd0532989d3836d1a048c32}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{issn}{07437315}
      \field{journaltitle}{Journal of Parallel and Distributed Computing}
      \field{number}{2}
      \field{title}{{From control flow to dataflow}}
      \field{volume}{12}
      \field{year}{1991}
      \field{pages}{118\bibrangedash 129}
      \range{pages}{12}
      \verb{doi}
      \verb 10.1016/0743-7315(91)90016-3
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Beck, Johnson, Pingali - 1991 - From control flow to dataflow.ps$\backslash$;jsessionid=D4194E1CBD3276E264A2D1FD1507F780:ps;jsessionid=D4194E1CBD3276E264A2D1FD1507F780
      \endverb
    \endentry
    \entry{Behren2003}{article}{}
      \name{author}{3}{}{%
        {{hash=38093a741e8ce0655e0362782355fc49}{Behren}{B\bibinitperiod}{JR}{J\bibinitperiod}{von}{v\bibinitperiod}{}{}}%
        {{hash=677d1c1e533a11a0b587d3e118f5c79e}{Condit}{C\bibinitperiod}{J}{J\bibinitperiod}{}{}{}{}}%
        {{hash=cd5068320ccb2fcf7795d66b28a6f8b5}{Brewer}{B\bibinitperiod}{EA}{E\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{ab61f3d95c8965b343306fb1a3f65ad3}
      \strng{fullhash}{ab61f3d95c8965b343306fb1a3f65ad3}
      \field{sortinit}{B}
      \field{sortinithash}{4ecbea03efd0532989d3836d1a048c32}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{HotOS}
      \field{title}{{Why Events Are a Bad Idea (for High-Concurrency Servers).}}
      \field{year}{2003}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Behren, Condit, Brewer - 2003 - Why Events Are a Bad Idea (for High-Concurrency Servers).pdf:pdf
      \endverb
      \verb{url}
      \verb http://static.usenix.org/publications/library/proceedings/hotos03/tech/full%7B%5C_%7Dpapers/vonbehren/vonbehren%7B%5C_%7Dhtml/
      \endverb
    \endentry
    \entry{Behren2003a}{article}{}
      \name{author}{5}{}{%
        {{hash=5761293410df6537e565fcf1da8fb505}{Behren}{B\bibinitperiod}{Rob}{R\bibinitperiod}{von}{v\bibinitperiod}{}{}}%
        {{hash=f91fe8125e3191f832708c73a70e6f67}{Condit}{C\bibinitperiod}{Jeremy}{J\bibinitperiod}{}{}{}{}}%
        {{hash=66d3c3089bcd7bce5ea942512ee9f7a2}{Zhou}{Z\bibinitperiod}{Feng}{F\bibinitperiod}{}{}{}{}}%
        {{hash=c8385ced4e43e7209fcd4b717ea314ab}{Necula}{N\bibinitperiod}{George\bibnamedelima C.}{G\bibinitperiod\bibinitdelim C\bibinitperiod}{}{}{}{}}%
        {{hash=781eec3551b6a48285790e48b277e991}{Brewer}{B\bibinitperiod}{Eric}{E\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{34e9104a86aff92e4063726014dbc824}
      \strng{fullhash}{b44126e01ad9599ef2fd8ee83cf7d246}
      \field{sortinit}{B}
      \field{sortinithash}{4ecbea03efd0532989d3836d1a048c32}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{This paper presents Capriccio, a scalable thread package for use with high-concurrency servers. While recent work has advocated event-based systems, we believe that thread-based systems can provide a simpler programming model that achieves equivalent or superior performance.By implementing Capriccio as a user-level thread package, we have decoupled the thread package implementation from the underlying operating system. As a result, we can take advantage of cooperative threading, new asynchronous I/O mechanisms, and compiler support. Using this approach, we are able to provide three key features: (1) scalability to 100,000 threads, (2) efficient stack management, and (3) resource-aware scheduling.We introduce linked stack management, which minimizes the amount of wasted stack space by providing safe, small, and non-contiguous stacks that can grow or shrink at run time. A compiler analysis makes our stack implementation efficient and sound. We also present resource-aware scheduling, which allows thread scheduling and admission control to adapt to the system's current resource usage. This technique uses a blocking graph that is automatically derived from the application to describe the flow of control between blocking points in a cooperative thread package. We have applied our techniques to the Apache 2.0.44 web server, demonstrating that we can achieve high performance and scalability despite using a simple threaded programming model.}
      \field{isbn}{1581137575}
      \field{issn}{01635980}
      \field{journaltitle}{ACM SIGOPS}
      \field{number}{5}
      \field{title}{{Capriccio: Scalable Threads for Internet Services}}
      \field{volume}{37}
      \field{year}{2003}
      \field{pages}{268}
      \range{pages}{1}
      \verb{doi}
      \verb 10.1145/1165389.945471
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Behren, Condit, Zhou - 2003 - Capriccio scalable threads for internet services.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=945471
      \endverb
      \keyw{Capriccio,Thread,blocking graph,dynamic stack,dynamic stack growth,ever-increasing scalability,growth,linked stack management,resource-aware scheduling,s internet services have,today,user-level threads}
    \endentry
    \entry{Bodin2014}{article}{}
      \name{author}{2}{}{%
        {{hash=4d8defb5e3d0b5926983c9d5764e9990}{Bodin}{B\bibinitperiod}{M}{M\bibinitperiod}{}{}{}{}}%
        {{hash=1c85e2ae338c7a8d125c468acf7a6078}{Charguéraud}{C\bibinitperiod}{A}{A\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{c6a829b7657ab4ee8f524b65daed59c2}
      \strng{fullhash}{c6a829b7657ab4ee8f524b65daed59c2}
      \field{sortinit}{B}
      \field{sortinithash}{4ecbea03efd0532989d3836d1a048c32}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{Proceedings of the 41st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages}
      \field{title}{{A trusted mechanised JavaSript specification}}
      \field{year}{2014}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Bodin, Charguéraud - 2014 - A trusted mechanised JavaSript specification.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=2535876
      \endverb
    \endentry
    \entry{Brodu2015}{article}{}
      \name{author}{3}{}{%
        {{hash=e62610f1613142128c563758ab844d8f}{Brodu}{B\bibinitperiod}{E}{E\bibinitperiod}{}{}{}{}}%
        {{hash=38c6428be6dbaf7b3bac7c8d45857637}{Frénot}{F\bibinitperiod}{S}{S\bibinitperiod}{}{}{}{}}%
        {{hash=753d82425f5cd0797afd19423b504871}{Oblé}{O\bibinitperiod}{F}{F\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{6faf65ee851ce9123f637e2da3afc115}
      \strng{fullhash}{6faf65ee851ce9123f637e2da3afc115}
      \field{sortinit}{B}
      \field{sortinithash}{4ecbea03efd0532989d3836d1a048c32}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{AWeS}
      \field{title}{{Toward automatic update from callbacks to Promises}}
      \field{year}{2015}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Brodu, Frénot, Oblé - 2015 - Toward automatic update from callbacks to Promises.pdf:pdf
      \endverb
      \verb{url}
      \verb https://hal.archives-ouvertes.fr/hal-01132776/
      \endverb
    \endentry
    \entry{Brodu2014}{inproceedings}{}
      \name{author}{4}{}{%
        {{hash=02f75523b376ff5082fb02e95ad09645}{Brodu}{B\bibinitperiod}{Etienne}{E\bibinitperiod}{}{}{}{}}%
        {{hash=05b786a658f736f129e2780d4cd1e919}{Frénot}{F\bibinitperiod}{Stéphane}{S\bibinitperiod}{}{}{}{}}%
        {{hash=5bbed292cd2434197797e1cad2fbe957}{Cellier}{C\bibinitperiod}{Fabien}{F\bibinitperiod}{}{}{}{}}%
        {{hash=bd2b4b3496e8b5e7e8733082a6225cea}{Oblé}{O\bibinitperiod}{Frédéric}{F\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {New York, New York, USA}%
      }
      \list{publisher}{1}{%
        {ACM Press}%
      }
      \strng{namehash}{5c7b9105f04be911119eeb7fa4abc6ab}
      \strng{fullhash}{e527eb16d6550c912a7c4e99482368d0}
      \field{sortinit}{B}
      \field{sortinithash}{4ecbea03efd0532989d3836d1a048c32}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{Proceedings of the Posters {\&} Demos Session on - Middleware Posters and Demos '14}
      \field{isbn}{9781450332200}
      \field{month}{12}
      \field{title}{{A compiler providing incremental scalability for web applications}}
      \field{year}{2014}
      \field{pages}{35\bibrangedash 36}
      \range{pages}{2}
      \verb{doi}
      \verb 10.1145/2678508.2678526
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=2678508.2678526
      \endverb
      \keyw{Javascript,compilation,flow programming,web}
    \endentry
    \entry{Brodu2015a}{article}{}
      \name{author}{3}{}{%
        {{hash=02f75523b376ff5082fb02e95ad09645}{Brodu}{B\bibinitperiod}{Etienne}{E\bibinitperiod}{}{}{}{}}%
        {{hash=05b786a658f736f129e2780d4cd1e919}{Frénot}{F\bibinitperiod}{Stéphane}{S\bibinitperiod}{}{}{}{}}%
        {{hash=bd2b4b3496e8b5e7e8733082a6225cea}{Oblé}{O\bibinitperiod}{Frédéric}{F\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{bf788475f5170ed07b6fed2e7e1bce26}
      \strng{fullhash}{bf788475f5170ed07b6fed2e7e1bce26}
      \field{sortinit}{B}
      \field{sortinithash}{4ecbea03efd0532989d3836d1a048c32}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{The development of a real-time web application often starts with a feature-driven approach allowing to quickly react to users feedbacks. However, this approach poorly scales in performance. Yet, the user-base can increase by an order of magnitude in a matter of hours. This first approach is unable to deal with the highest connections spikes. It leads the development team to shift to a scalable approach often linked to new development paradigm such as dataflow programming. This shift of technology is disruptive and continuity-threatening. To avoid it, we propose to abstract the feature-driven development into a more scalable high-level language. Indeed, reasoning on this high-level language allows to dynamically cope with user-base size evolutions. We propose a compilation approach that transforms a Javascript, single-threaded real-time web application into a network of small independent parts communicating by message streams. We named these parts fluxions, by contraction between a flow (flux in french) and a function. The independence of these parts allows their execution to be parallel, and to organize an application on several processors to cope with its load, in a similar way network routers do with IP traffic. We test this approach by applying the compiler to a real web application. We transform this application to parallelize the execution of an independent part and present the result.}
      \field{eprinttype}{arXiv}
      \field{journaltitle}{Symposium on Applied Computing, track Practical Aspect of Parallel Programming}
      \field{month}{12}
      \field{title}{{Transforming Javascript Event-Loop Into a Pipeline}}
      \field{year}{2015}
      \verb{doi}
      \verb 10.1145/2851613.2851745
      \endverb
      \verb{eprint}
      \verb 1512.07067
      \endverb
      \verb{file}
      \verb ::
      \endverb
      \verb{url}
      \verb http://arxiv.org/abs/1512.07067
      \endverb
    \endentry
    \entry{Brookes1984}{article}{}
      \name{author}{3}{}{%
        {{hash=4647906f0d0b5ee93255735ca32fac2f}{Brookes}{B\bibinitperiod}{S.\bibnamedelimi D.}{S\bibinitperiod\bibinitdelim D\bibinitperiod}{}{}{}{}}%
        {{hash=28fcf7e7d2cd56febbad02b0c8dd0354}{Hoare}{H\bibinitperiod}{C.\bibnamedelimi A.\bibnamedelimi R.}{C\bibinitperiod\bibinitdelim A\bibinitperiod\bibinitdelim R\bibinitperiod}{}{}{}{}}%
        {{hash=85b56cb99188c6c00a872360d7a8ea8f}{Roscoe}{R\bibinitperiod}{A.\bibnamedelimi W.}{A\bibinitperiod\bibinitdelim W\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {ACM}%
      }
      \strng{namehash}{c940e512ea0bf6a7e6cb2ba8c5997159}
      \strng{fullhash}{c940e512ea0bf6a7e6cb2ba8c5997159}
      \field{sortinit}{B}
      \field{sortinithash}{4ecbea03efd0532989d3836d1a048c32}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{issn}{00045411}
      \field{journaltitle}{Journal of the ACM}
      \field{month}{06}
      \field{number}{3}
      \field{title}{{A Theory of Communicating Sequential Processes}}
      \field{volume}{31}
      \field{year}{1984}
      \field{pages}{560\bibrangedash 599}
      \range{pages}{40}
      \verb{doi}
      \verb 10.1145/828.833
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Brookes, Hoare, Roscoe - 1984 - A Theory of Communicating Sequential Processes.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=828.833
      \endverb
    \endentry
    \entry{Buck2004}{article}{}
      \name{author}{3}{}{%
        {{hash=4071448db6a7f1ce0f5347313c865d35}{Buck}{B\bibinitperiod}{I}{I\bibinitperiod}{}{}{}{}}%
        {{hash=d348d7d8d40e6b864f4ce136d97a291d}{Foley}{F\bibinitperiod}{T}{T\bibinitperiod}{}{}{}{}}%
        {{hash=3d25280644450a7282dca8cd1daee849}{Horn}{H\bibinitperiod}{D}{D\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{7d234f71bf199a51874d110a10830d1c}
      \strng{fullhash}{7d234f71bf199a51874d110a10830d1c}
      \field{sortinit}{B}
      \field{sortinithash}{4ecbea03efd0532989d3836d1a048c32}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{{\ldots} on Graphics (TOG)}
      \field{title}{{Brook for GPUs: stream computing on graphics hardware}}
      \field{year}{2004}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Buck, Foley, Horn - 2004 - Brook for GPUs stream computing on graphics hardware.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=1015800
      \endverb
    \endentry
    \entry{Buddhika2016}{article}{}
      \name{author}{2}{}{%
        {{hash=82c518adbe876349f7968b3a46ec90aa}{Buddhika}{B\bibinitperiod}{T}{T\bibinitperiod}{}{}{}{}}%
        {{hash=ef3cee7598dc4185348a02a595810621}{Pallickara}{P\bibinitperiod}{S}{S\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{b375eec5744f35cd2fac61d8c898e50b}
      \strng{fullhash}{b375eec5744f35cd2fac61d8c898e50b}
      \field{sortinit}{B}
      \field{sortinithash}{4ecbea03efd0532989d3836d1a048c32}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{granules.cs.colostate.edu}
      \field{title}{{NEPTUNE: Real Time Stream Processing for Internet of Things and Sensing Environments}}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Buddhika, Pallickara - Unknown - NEPTUNE Real Time Stream Processing for Internet of Things and Sensing Environments.pdf:pdf
      \endverb
      \verb{url}
      \verb http://granules.cs.colostate.edu/papers/Neptune-IPDPS-2016.pdf
      \endverb
    \endentry
    \entry{Cataldo2006}{inproceedings}{}
      \name{author}{4}{}{%
        {{hash=df5571d95ff6a5fed682b9501ed44a6a}{Cataldo}{C\bibinitperiod}{Marcelo}{M\bibinitperiod}{}{}{}{}}%
        {{hash=164d9b4e86abdb3a9eb8bf27cd770890}{Wagstrom}{W\bibinitperiod}{Patrick\bibnamedelima A.}{P\bibinitperiod\bibinitdelim A\bibinitperiod}{}{}{}{}}%
        {{hash=0bc853054833462ebf02f030078f4544}{Herbsleb}{H\bibinitperiod}{James\bibnamedelima D.}{J\bibinitperiod\bibinitdelim D\bibinitperiod}{}{}{}{}}%
        {{hash=cdd58995b8e1c61e1a8d1e10ab36adad}{Carley}{C\bibinitperiod}{Kathleen\bibnamedelima M.}{K\bibinitperiod\bibinitdelim M\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {New York, New York, USA}%
      }
      \list{publisher}{1}{%
        {ACM Press}%
      }
      \strng{namehash}{42c6376b6cd3b14afa3c95f949b6f824}
      \strng{fullhash}{942bd958ea25d3fd4e319c3a0bf53373}
      \field{sortinit}{C}
      \field{sortinithash}{59f25d509f3381b07695554a9f35ecb2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{Proceedings of the 2006 20th anniversary conference on Computer supported cooperative work - CSCW '06}
      \field{isbn}{1595932496}
      \field{month}{11}
      \field{title}{{Identification of coordination requirements}}
      \field{year}{2006}
      \field{pages}{353}
      \range{pages}{1}
      \verb{doi}
      \verb 10.1145/1180875.1180929
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Cataldo et al. - 2006 - Identification of coordination requirements.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=1180875.1180929
      \endverb
      \keyw{collaboration tools,coordination,dynamic network analysis,task awareness tools}
    \endentry
    \entry{Catanzaro2009}{article}{}
      \name{author}{3}{}{%
        {{hash=3c8bbc381484f2cfbbd08866be36590e}{Catanzaro}{C\bibinitperiod}{Bryan}{B\bibinitperiod}{}{}{}{}}%
        {{hash=804f70e575015a1bc78123759a08dde4}{Kamil}{K\bibinitperiod}{Shoaib}{S\bibinitperiod}{}{}{}{}}%
        {{hash=1a6464ffca8dce3c13915a2dd7bc4841}{Lee}{L\bibinitperiod}{Yunsup}{Y\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{87b727b698386ff670954b421de7bcb1}
      \strng{fullhash}{87b727b698386ff670954b421de7bcb1}
      \field{sortinit}{C}
      \field{sortinithash}{59f25d509f3381b07695554a9f35ecb2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Parallel programming must be accessible to domain experts without requiring them to become experts in parallel hardware architecture. While domain experts today prefer to use high-level “productivity” scripting languages with domain-appropriate abstractions, achieving high performance still requires expertise in lower-level “efficiency” lan- guages (CUDA, CILK, C with OpenMP) that expose hardware-level programming models directly. We bridge this gap through the use of embedded just-in-time specialization: domain experts write in high-level scripting languages, but at runtime, we specialize (generate, compile, and execute efficiency-language source code for) an application-specific and platform-specific subset of the productivity language. This enables invisible and selective optimization of only those application-level abstractions that enjoy a large performance advantage when expressed in an efficiency lan- guage on the available hardware and will be executed many times, amortizing the overhead of specialization. Because the specialization machinery is implemented in the productivity language, efficiency programmers can easily extend our system by adding new specializers for specific additional domain abstractions or new hardware, transparently to the productivity-language programmers. Our approach results in competitive performance on real applications with a fraction of the programming effort on the part of the domain expert. We argue that the separation of concerns enabled by embedded JIT specialization allows research to proceed in parallel on both the productivity and efficiency layers, and is therefore uniquely suited to the problem of making different parallel hardware architectures more accessible to domain-expert programmers with a fraction of the programmer time and effort.}
      \field{isbn}{9780982544235}
      \field{journaltitle}{Programming Models for Emerging Architectures}
      \field{title}{{SEJITS: Getting productivity and performance with selective embedded JIT specialization}}
      \field{year}{2009}
      \field{pages}{1\bibrangedash 10}
      \range{pages}{10}
      \verb{doi}
      \verb 10.1.1.212.6088
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Catanzaro, Kamil, Lee - 2009 - SEJITS Getting productivity and performance with selective embedded JIT specialization.pdf:pdf
      \endverb
      \verb{url}
      \verb http://www.eecs.berkeley.edu/%7B~%7Dkrste/papers/SEJITS-pmea2009.pdf%20http://citeseerx.ist.psu.edu/viewdoc/download?rep=rep1%7B%5C&%7Dtype=pdf%7B%5C&%7Ddoi=10.1.1.212.6088$%5Cbackslash$nhttp://www.eecs.berkeley.edu/Pubs/TechRpts/2010/EECS-2010-23.pdf%20http://www.eecs.berkeley.edu/%7B~%7Dkrste/papers
      \endverb
    \endentry
    \entry{Chamberlain2007}{article}{}
      \name{author}{3}{}{%
        {{hash=e2131ede1155d02a689c244bcfe2f7f6}{Chamberlain}{C\bibinitperiod}{B.L.}{B\bibinitperiod}{}{}{}{}}%
        {{hash=d906fa7ae622b5b4679f3d0f07d3fcea}{Callahan}{C\bibinitperiod}{D.}{D\bibinitperiod}{}{}{}{}}%
        {{hash=03ed11e04ac8b7392e490953e0afc367}{Zima}{Z\bibinitperiod}{H.P.}{H\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{091cf60c310ba261abf32eb4ea43426b}
      \strng{fullhash}{091cf60c310ba261abf32eb4ea43426b}
      \field{sortinit}{C}
      \field{sortinithash}{59f25d509f3381b07695554a9f35ecb2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{In this paper we consider productivity challenges for parallel programmers and explore ways that parallel language design might help improve end-user productivity. We offer a candidate list of desirable qualities for a parallel programming language, and describe how these qualities are addressed in the design of the Chapel language. In doing so, we provide an overview of Chapel's features and how they help address parallel productivity. We also survey current techniques for parallel programming and describe ways in which we consider them to fall short of our idealized productive programming model.}
      \field{issn}{1094-3420}
      \field{journaltitle}{International Journal of High Performance Computing Applications}
      \field{month}{08}
      \field{number}{3}
      \field{title}{{Parallel Programmability and the Chapel Language}}
      \field{volume}{21}
      \field{year}{2007}
      \field{pages}{291\bibrangedash 312}
      \range{pages}{22}
      \verb{doi}
      \verb 10.1177/1094342007078442
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Chamberlain, Callahan, Zima - 2007 - Parallel Programmability and the Chapel Language.pdf:pdf
      \endverb
      \verb{url}
      \verb http://hpc.sagepub.com/content/21/3/291.short
      \endverb
    \endentry
    \entry{Chan2004}{article}{}
      \name{author}{4}{}{%
        {{hash=3626493b8db6ac667d6f0df2d999352b}{Chan}{C\bibinitperiod}{F}{F\bibinitperiod}{}{}{}{}}%
        {{hash=2ef87295ca2f64f591acee8f55dd50d5}{Cao}{C\bibinitperiod}{J\bibnamedelima N}{J\bibinitperiod\bibinitdelim N\bibinitperiod}{}{}{}{}}%
        {{hash=e0bdaa7048cf781d8ca2413483f75b4d}{Chan}{C\bibinitperiod}{A\bibnamedelima T\bibnamedelima S}{A\bibinitperiod\bibinitdelim T\bibinitperiod\bibinitdelim S\bibinitperiod}{}{}{}{}}%
        {{hash=a370900d188c23519970bf17f9adedac}{Guo}{G\bibinitperiod}{M\bibnamedelima Y}{M\bibinitperiod\bibinitdelim Y\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{df2a99428741cb493251fd33e5954a43}
      \strng{fullhash}{2a06c26ee9ad9250f8b7bbdc43b73ffb}
      \field{sortinit}{C}
      \field{sortinithash}{59f25d509f3381b07695554a9f35ecb2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Many parallel applications involve different independent tasks$\backslash$nwith their own data. Using the MPMD model, programmers can have$\backslash$na modular view and simplified structure of the parallel$\backslash$nprograms. Although MPI supports both SPMD and MPMD models for$\backslash$nprogramming, MPI libraries do not provide an efficient way for$\backslash$ntask communication for the MPMD model. We have developed a$\backslash$nprogramming environment, called ClusterGOP, for building and$\backslash$ndeveloping parallel applications. Based on the graph-oriented$\backslash$nprogramming (GOP) model, ClusterGOPprovides higher-level$\backslash$nabstractions for message-passing parallel programming with the$\backslash$nsupport of software tools for developing and running parallel$\backslash$napplications. In this paper, we describe how ClusterGOP supports$\backslash$nprogramming of MPMD parallel applications on top of MPI. We$\backslash$ndiscuss the issues of implementing the MPMD model in ClusterGOP$\backslash$nusing MPI and evaluate the performanceby using example$\backslash$napplications.}
      \field{journaltitle}{IEICE Transactions on Information and Systems}
      \field{number}{7}
      \field{title}{{Programming support for MPMD parallel computing in ClusterGOP}}
      \field{volume}{E87D}
      \field{year}{2004}
      \field{pages}{1693\bibrangedash 1702}
      \range{pages}{10}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Chan et al. - 2004 - Programming support for MPMD parallel computing in ClusterGOP.pdf:pdf
      \endverb
      \verb{url}
      \verb http://www.cs.sjtu.edu.cn/%7B~%7Dguo-my/PDF/Journals/J43.pdf
      \endverb
    \endentry
    \entry{K.ManiChandy2005}{incollection}{}
      \name{author}{2}{}{%
        {{hash=410bdff6360ea60d39a6eb39fe79835b}{Chandy}{C\bibinitperiod}{K.\bibnamedelimi Mani}{K\bibinitperiod\bibinitdelim M\bibinitperiod}{}{}{}{}}%
        {{hash=5bfec4c02577e5f42b9a44b0fd808e64}{Kesselman}{K\bibinitperiod}{Carl}{C\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{0048effc2a80004b394f5151552bba15}
      \strng{fullhash}{0048effc2a80004b394f5151552bba15}
      \field{sortinit}{C}
      \field{sortinithash}{59f25d509f3381b07695554a9f35ecb2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{There is a class of sparse matrix computations, such as direct solvers of systems of linear equations, that change the fill-in (nonzero entries) of the coefficient matrix, and involve row and column operations (pivoting). This paper addresses the problem of the parallelization of these sparse computations from the point of view of the parallel language and the compiler. Dynamic data structures for sparse matrix storage are analyzed, permitting to efficiently deal with fill-in and pivoting issues. Any of the data representations considered enforces the handling of indirections for data accesses, pointer referencing and dynamic data creation. All of these elements go beyond current data-parallel compilation technology. We propose a small set of new extensions to HPF-2 to parallelize these codes, supporting part of the new capabilities on a runtime library. This approach has been evaluated on a Cray T3E, implementing, in particular, the sparse LU factorization.}
      \field{booktitle}{Languages and Compilers for Parallel Computing}
      \field{isbn}{9783540664260}
      \field{issn}{0302-9743}
      \field{title}{{Compositional C++: Compositional parallel programming}}
      \field{volume}{757}
      \field{year}{2005}
      \field{pages}{124\bibrangedash 144}
      \range{pages}{21}
      \verb{doi}
      \verb 10.1007/3-540-48319-5
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Chandy, Kesselman - 2005 - Compositional C Compositional parallel programming.pdf:pdf
      \endverb
      \verb{url}
      \verb http://authors.library.caltech.edu/26756/2/92-13.pdf%20http://www.springerlink.com/content/dd8uk1lp4pvmclta
      \endverb
    \endentry
    \entry{Chang1997}{article}{}
      \name{author}{4}{}{%
        {{hash=ec6e740ccea4472125ccd977f9a7bebd}{Chang}{C\bibinitperiod}{Chi-Chao}{C\bibinithyphendelim C\bibinitperiod}{}{}{}{}}%
        {{hash=a6dda3b0741bdc0877b8b6e64a3adc09}{Czajkowski}{C\bibinitperiod}{G.}{G\bibinitperiod}{}{}{}{}}%
        {{hash=010955027cf49d88c637dff6889d5c32}{Eicken}{E\bibinitperiod}{T.\bibnamedelimi Von}{T\bibinitperiod\bibinitdelim V\bibinitperiod}{}{}{}{}}%
        {{hash=7e382da1d0d5dbeefc29f427500a395a}{Kesselman}{K\bibinitperiod}{C.}{C\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{68da95338731c8664d8228751dc2eade}
      \strng{fullhash}{03f356df2f1608a7387c1e119fe4a232}
      \field{sortinit}{C}
      \field{sortinithash}{59f25d509f3381b07695554a9f35ecb2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{The MPMD approach for parallel computing is attractive for programmers who seek fast development cycles, high code re-use, and modular programming, or whose applications exhibit irregular computation loads and communication patterns. RPC is widely adopted as the communication abstraction for crossing address space boundaries. However, the communication overheads of existing RPC-based systems are usually an order of magnitude higher than those found in highly tuned SPMD systems. This problem has thus far limited the appeal of high-level programming languages based on MPMD models in the parallel computing community. This paper investigates the fundamental limitations of MPMD communication using a case study of two parallel programming languages, Compositional C++ (CC++) and Split-C, that provide support for a global name space. To establish a common comparison basis, our implementation of CC++ was developed to use MRPC, a RPC system optimized for MPMD parallel computing and based on Active Messages. Basic RPC performance in CC++ is within a factor of two from those of Split-C and other messaging layers. CC++ applications perform within a factor of two to six from comparable Split-C versions, which represent an order of magnitude improvement over previous CC++ implementations. The results suggest that RPC-based communication can be used effectively in many high-performance MPMD parallel applications.}
      \field{isbn}{0897919858}
      \field{journaltitle}{ACM/IEEE SC 1997 Conference (SC'97)}
      \field{title}{{Evaluating the Performance Limitations of MPMD Communication}}
      \field{year}{1997}
      \field{pages}{1\bibrangedash 10}
      \range{pages}{10}
      \verb{doi}
      \verb 10.1109/SC.1997.10040
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Chang et al. - 1997 - Evaluating the Performance Limitations of MPMD Communication.pdf:pdf
      \endverb
      \verb{url}
      \verb http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.129.8068%7B%5C&%7Drep=rep1%7B%5C&%7Dtype=pdf
      \endverb
    \endentry
    \entry{Chapman2010}{inproceedings}{}
      \name{author}{7}{}{%
        {{hash=1d1936f50a3cca2db751787cc3b9c710}{Chapman}{C\bibinitperiod}{Barbara}{B\bibinitperiod}{}{}{}{}}%
        {{hash=12422737d42060e8bb35c023fb8f9124}{Curtis}{C\bibinitperiod}{Tony}{T\bibinitperiod}{}{}{}{}}%
        {{hash=9652e1fdad4715b65558db66fec53801}{Pophale}{P\bibinitperiod}{Swaroop}{S\bibinitperiod}{}{}{}{}}%
        {{hash=3b6b316429ea9bdeb0be4b31904d3436}{Poole}{P\bibinitperiod}{Stephen}{S\bibinitperiod}{}{}{}{}}%
        {{hash=87b0616561078f248d86c55aa45c3c78}{Kuehn}{K\bibinitperiod}{Jeff}{J\bibinitperiod}{}{}{}{}}%
        {{hash=1d0b223d7a580ba2f5d3ac4c4f3a54f9}{Koelbel}{K\bibinitperiod}{Chuck}{C\bibinitperiod}{}{}{}{}}%
        {{hash=eca6e66e77da0b126886cd7930a0af7f}{Smith}{S\bibinitperiod}{Lauren}{L\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {New York, New York, USA}%
      }
      \list{publisher}{1}{%
        {ACM Press}%
      }
      \strng{namehash}{57c19c21a0b0e0c1699b63966d4d0b6b}
      \strng{fullhash}{b8fbd72c015120d6c0665a80d48a27cb}
      \field{sortinit}{C}
      \field{sortinithash}{59f25d509f3381b07695554a9f35ecb2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{Proceedings of the Fourth Conference on Partitioned Global Address Space Programming Model - PGAS '10}
      \field{isbn}{9781450304610}
      \field{month}{10}
      \field{title}{{Introducing OpenSHMEM}}
      \field{year}{2010}
      \field{pages}{1\bibrangedash 3}
      \range{pages}{3}
      \verb{doi}
      \verb 10.1145/2020373.2020375
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Chapman et al. - 2010 - Introducing OpenSHMEM.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=2020373.2020375
      \endverb
      \keyw{ACM proceedings,OpenSHMEM,PGAS,SHMEM}
    \endentry
    \entry{Charles2005}{inproceedings}{}
      \name{author}{8}{}{%
        {{hash=0c7e9d7cafc4ef24fbd14357ca5fd34a}{Charles}{C\bibinitperiod}{Philippe}{P\bibinitperiod}{}{}{}{}}%
        {{hash=3192c436d38b8838cf2d39d52fc9320a}{Grothoff}{G\bibinitperiod}{Christian}{C\bibinitperiod}{}{}{}{}}%
        {{hash=bbd47ba039c3d10fc68d871d73d00390}{Saraswat}{S\bibinitperiod}{Vijay}{V\bibinitperiod}{}{}{}{}}%
        {{hash=69a8b93856a535859ba6e2a9d5762dd2}{Donawa}{D\bibinitperiod}{Christopher}{C\bibinitperiod}{}{}{}{}}%
        {{hash=ffaff2a928d76af0a653c2cd0b59467c}{Kielstra}{K\bibinitperiod}{Allan}{A\bibinitperiod}{}{}{}{}}%
        {{hash=9188db228746d37c98246584b581eeab}{Ebcioglu}{E\bibinitperiod}{Kemal}{K\bibinitperiod}{}{}{}{}}%
        {{hash=5b17e0ed63fbd132011a55c978f8f4a4}{Praun}{P\bibinitperiod}{Christoph}{C\bibinitperiod}{von}{v\bibinitperiod}{}{}}%
        {{hash=694b6a2cda85144b301a8f45936cf9bb}{Sarkar}{S\bibinitperiod}{Vivek}{V\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {New York, New York, USA}%
      }
      \list{publisher}{1}{%
        {ACM Press}%
      }
      \strng{namehash}{0e70cc652b9933037c3271afa7287890}
      \strng{fullhash}{b7f83de92a33361bbfae442d112cbebf}
      \field{sortinit}{C}
      \field{sortinithash}{59f25d509f3381b07695554a9f35ecb2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{Proceedings of the 20th annual ACM SIGPLAN conference on Object oriented programming systems languages and applications - OOPSLA '05}
      \field{isbn}{1595930310}
      \field{issn}{0362-1340}
      \field{month}{10}
      \field{number}{10}
      \field{title}{{X10}}
      \field{volume}{40}
      \field{year}{2005}
      \field{pages}{519}
      \range{pages}{1}
      \verb{doi}
      \verb 10.1145/1094811.1094852
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Charles et al. - 2005 - X10.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=1094811.1094852
      \endverb
      \keyw{Java,X10,atomic blocks,clocks,data distribution,multithreading,non-uniform cluster computing (NUCC),partitioned global address space (PGAS),places,productivity,scalability}
    \endentry
    \entry{Chen2008}{article}{}
      \name{author}{3}{}{%
        {{hash=4e4b72d446c103d25655b62922e530d7}{Chen}{C\bibinitperiod}{Chun}{C\bibinitperiod}{}{}{}{}}%
        {{hash=b2ab43c980d2654564b1b5b1131dc203}{Chame}{C\bibinitperiod}{Jacqueline}{J\bibinitperiod}{}{}{}{}}%
        {{hash=424b3b2fd9eac067217aa07bf20f8a18}{Hall}{H\bibinitperiod}{Mary}{M\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{f7d9b6f22ff97e9564f62c9bfa0d9e06}
      \strng{fullhash}{f7d9b6f22ff97e9564f62c9bfa0d9e06}
      \field{sortinit}{C}
      \field{sortinithash}{59f25d509f3381b07695554a9f35ecb2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{This paper describes a general and robust loop transformation framework that enables compilers to generate efficient code on complex loop nests. Despite two decades of prior research on loop optimization, performance of compiler-generated code often falls short of manually optimized versions, even for some well-studied BLAS kernels. There are two primary reasons for this. First, today's compilers employ fixed transformation strategies, making it difficult to adapt to different optimization requirements for different application codes. Second, code transformations are treated in isolation, not taking into account the interactions between different transformations. This paper addresses such limitations in a unified framework that supports a broad collection of transformations, (permutation, tiling, unroll-and-jam, data copying, iteration space splitting, fusion, distribution and others), which go beyond existing polyhedral transformation models. This framework is a key element of a compiler we are developing which performs empirical op- timization to evaluate a collection of alternative optimized variants of a code segment. A script interface to code generation and empirical search permits transformation parameters to be adjusted independently and tested; alterna- tive scripts are used to represent different code variants. By applying this framework to example codes,we showperformance results on automatically- generated code for the PentiumM and MIPS R10000 that are comparable to the best hand-tuned codes, and significantly better (up to a 14x speedup) than the native compilers.}
      \field{issn}{00039942}
      \field{journaltitle}{U. of Southern California, Tech. Rep}
      \field{title}{{CHiLL: A framework for composing high-level loop transformations}}
      \field{year}{2008}
      \field{pages}{1\bibrangedash 28}
      \range{pages}{28}
      \verb{doi}
      \verb 10.1001/archneur.64.6.785
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Chen, Chame, Hall - 2008 - CHiLL A framework for composing high-level loop transformations.pdf:pdf
      \endverb
      \verb{url}
      \verb http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.214.8396%7B%5C&%7Drep=rep1%7B%5C&%7Dtype=pdf%20http://scholar.google.com/scholar?hl=en%7B%5C&%7DbtnG=Search%7B%5C&%7Dq=intitle:CHiLL+:+A+Framework+for+Composing+High-Level+Loop+Transformations%7B%5C#%7D0
      \endverb
    \endentry
    \entry{Chudnov2015}{article}{}
      \name{author}{2}{}{%
        {{hash=0b7fe25efc07dd97bf16d0686755c64b}{Chudnov}{C\bibinitperiod}{Andrey}{A\bibinitperiod}{}{}{}{}}%
        {{hash=117b965d79611e7424f06510e5601b8c}{Naumann}{N\bibinitperiod}{David\bibnamedelima A.}{D\bibinitperiod\bibinitdelim A\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {ACM}%
      }
      \strng{namehash}{12efa70488324273ed22771700aee5af}
      \strng{fullhash}{12efa70488324273ed22771700aee5af}
      \field{sortinit}{C}
      \field{sortinithash}{59f25d509f3381b07695554a9f35ecb2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{isbn}{9781450338325}
      \field{journaltitle}{Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security}
      \field{month}{10}
      \field{title}{{Inlined Information Flow Monitoring for JavaScript}}
      \field{year}{2015}
      \field{pages}{629\bibrangedash 643}
      \range{pages}{15}
      \verb{doi}
      \verb 10.1145/2810103.2813684
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=2810103.2813684
      \endverb
      \keyw{inlined monitoring,javascript,run-time monitoring,web applications}
    \endentry
    \entry{Clements2013a}{inproceedings}{}
      \name{author}{5}{}{%
        {{hash=1c860cfe50f5e73f32b693398a661394}{Clements}{C\bibinitperiod}{Austin\bibnamedelima T.}{A\bibinitperiod\bibinitdelim T\bibinitperiod}{}{}{}{}}%
        {{hash=c4e9f8e102c2895559ca5b01cc81e396}{Kaashoek}{K\bibinitperiod}{M.\bibnamedelimi Frans}{M\bibinitperiod\bibinitdelim F\bibinitperiod}{}{}{}{}}%
        {{hash=2dc9857d6c0665433be9d19a7c0e7b5b}{Zeldovich}{Z\bibinitperiod}{Nickolai}{N\bibinitperiod}{}{}{}{}}%
        {{hash=e15a1d1ee432a8ed8c2c88c6fa7e69de}{Morris}{M\bibinitperiod}{Robert\bibnamedelima T.}{R\bibinitperiod\bibinitdelim T\bibinitperiod}{}{}{}{}}%
        {{hash=a507ddee007a80459a7eb35cd825c25e}{Kohler}{K\bibinitperiod}{Eddie}{E\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {New York, New York, USA}%
      }
      \list{publisher}{1}{%
        {ACM Press}%
      }
      \strng{namehash}{28069a1149b742b28249d4f1f65263d0}
      \strng{fullhash}{14705c331e32e8787c34f34f09feb64d}
      \field{sortinit}{C}
      \field{sortinithash}{59f25d509f3381b07695554a9f35ecb2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{Proceedings of the Twenty-Fourth ACM Symposium on Operating Systems Principles - SOSP '13}
      \field{isbn}{9781450323888}
      \field{month}{11}
      \field{title}{{The scalable commutativity rule}}
      \field{year}{2013}
      \field{pages}{1\bibrangedash 17}
      \range{pages}{17}
      \verb{doi}
      \verb 10.1145/2517349.2522712
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Clements et al. - 2013 - The scalable commutativity rule.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=2517349.2522712
      \endverb
    \endentry
    \entry{Clinger1981}{article}{}
      \name{author}{1}{}{%
        {{hash=290db87fc4686509dad9fbcb9d5d56db}{Clinger}{C\bibinitperiod}{William\bibnamedelima Douglas}{W\bibinitperiod\bibinitdelim D\bibinitperiod}{}{}{}{}}%
      }
      \list{language}{1}{%
        {eng}%
      }
      \strng{namehash}{290db87fc4686509dad9fbcb9d5d56db}
      \strng{fullhash}{290db87fc4686509dad9fbcb9d5d56db}
      \field{sortinit}{C}
      \field{sortinithash}{59f25d509f3381b07695554a9f35ecb2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{month}{05}
      \field{title}{{Foundations of Actor Semantics}}
      \field{year}{1981}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Clinger - 1981 - Foundations of Actor Semantics.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dspace.mit.edu/handle/1721.1/6935
      \endverb
    \endentry
    \entry{Cole1988}{misc}{}
      \name{author}{1}{}{%
        {{hash=eae268cfc1f9409f44d4eb9e4ab67624}{Cole}{C\bibinitperiod}{M.\bibnamedelimi I.}{M\bibinitperiod\bibinitdelim I\bibinitperiod}{}{}{}{}}%
      }
      \list{language}{1}{%
        {eng}%
      }
      \list{publisher}{1}{%
        {University of Edinburgh}%
      }
      \strng{namehash}{eae268cfc1f9409f44d4eb9e4ab67624}
      \strng{fullhash}{eae268cfc1f9409f44d4eb9e4ab67624}
      \field{sortinit}{C}
      \field{sortinithash}{59f25d509f3381b07695554a9f35ecb2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{title}{{Algorithmic skeletons : A structured approach to the management of parallel computation}}
      \field{year}{1988}
      \verb{url}
      \verb http://ethos.bl.uk/OrderDetails.do?uin=uk.bl.ethos.384168
      \endverb
      \keyw{Programming parellel computers Computer software A}
    \endentry
    \entry{Consel2003}{article}{}
      \name{author}{6}{}{%
        {{hash=e8b4f099dfe90f1b939423eedf7b0688}{Consel}{C\bibinitperiod}{Charles}{C\bibinitperiod}{}{}{}{}}%
        {{hash=4705c2ca009a92baf4e6cd1db709840b}{Hamdi}{H\bibinitperiod}{Hedi}{H\bibinitperiod}{}{}{}{}}%
        {{hash=716af9ebbc6cc20b38b5d56760f3119d}{Réveillère}{R\bibinitperiod}{Laurent}{L\bibinitperiod}{}{}{}{}}%
        {{hash=4bfaf35f18693ef454d44f44a6258fad}{Singaravelu}{S\bibinitperiod}{Lenin}{L\bibinitperiod}{}{}{}{}}%
        {{hash=6e6e4d6e11f24159a5b2b2a6ad86843a}{Yu}{Y\bibinitperiod}{Haiyan}{H\bibinitperiod}{}{}{}{}}%
        {{hash=10ca8a887c5327fcb621a49ea0455d79}{Pu}{P\bibinitperiod}{Calton}{C\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{4cdb6fa328c6e1e04475f5e9c5e81a27}
      \strng{fullhash}{e47f6819ecc1c0f86b0068f3baac9b11}
      \field{sortinit}{C}
      \field{sortinithash}{59f25d509f3381b07695554a9f35ecb2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Multimedia stream processing is a rapidly evolving domain which requires much software development and expects high performance. Developing a streaming application often involves low-level programming, critical memory management, and finely tuned scheduling of processing steps.To address these problems, we present a domain-specific language (DSL) named Spidle, for specifying streaming applications. Spidle offers high-level and declarative constructs; compared to general-purpose languages (GPL), it improves robustness by enabling a variety of verifications to be performed.To assess the expressiveness of Spidle in practice, we have used it to specify a number of standardized and special-purpose streaming applications. These specifications are up to 2 times smaller than equivalent programs written in a GPL such as C.We have implemented a compiler for Spidle. Preliminary results show that compiled Spidle programs are roughly as efficient as the compiled, equivalent C programs.}
      \field{isbn}{3540201025}
      \field{issn}{03029743}
      \field{journaltitle}{Proceedings of the 2nd international conference on Generative programming and component engineering - GPCE '03}
      \field{title}{{Spidle: a DSL approach to specifying streaming applications}}
      \field{year}{2003}
      \field{pages}{1\bibrangedash 17}
      \range{pages}{17}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Consel et al. - 2003 - Spidle a DSL approach to specifying streaming applications.pdf:pdf
      \endverb
      \verb{url}
      \verb http://link.springer.com/chapter/10.1007/978-3-540-39815-8%7B%5C_%7D1%20http://dl.acm.org/citation.cfm?id=954186.954187
      \endverb
    \endentry
    \entry{Conway1963}{article}{}
      \name{author}{1}{}{%
        {{hash=b1370e0dd2e3bd37326d5afee7f9bc53}{Conway}{C\bibinitperiod}{Melvin\bibnamedelima E.}{M\bibinitperiod\bibinitdelim E\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {ACM}%
      }
      \strng{namehash}{b1370e0dd2e3bd37326d5afee7f9bc53}
      \strng{fullhash}{b1370e0dd2e3bd37326d5afee7f9bc53}
      \field{sortinit}{C}
      \field{sortinithash}{59f25d509f3381b07695554a9f35ecb2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{issn}{00010782}
      \field{journaltitle}{Communications of the ACM}
      \field{month}{07}
      \field{number}{7}
      \field{title}{{Design of a separable transition-diagram compiler}}
      \field{volume}{6}
      \field{year}{1963}
      \field{pages}{396\bibrangedash 408}
      \range{pages}{13}
      \verb{doi}
      \verb 10.1145/366663.366704
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Conway - 1963 - Design of a separable transition-diagram compiler.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=366663.366704
      \endverb
    \endentry
    \entry{Culler}{article}{}
      \name{author}{7}{}{%
        {{hash=f3dd15171e3c58bb35683098e27e53ba}{Culler}{C\bibinitperiod}{David\bibnamedelima E.}{D\bibinitperiod\bibinitdelim E\bibinitperiod}{}{}{}{}}%
        {{hash=c0483a34fd7a593c961a824f10f4b358}{Dusseau}{D\bibinitperiod}{A.}{A\bibinitperiod}{}{}{}{}}%
        {{hash=d89651c3c3ed18b8bc3fc0b1987cca7f}{Goldstein}{G\bibinitperiod}{Seth\bibnamedelima Copen}{S\bibinitperiod\bibinitdelim C\bibinitperiod}{}{}{}{}}%
        {{hash=04f860aabbcc66922143c48686ffbd89}{Krishnamurthy}{K\bibinitperiod}{Arvind}{A\bibinitperiod}{}{}{}{}}%
        {{hash=8a4d823699bc8a81353e71be681bed58}{Lumetta}{L\bibinitperiod}{Steven}{S\bibinitperiod}{}{}{}{}}%
        {{hash=37b75db07255c1ffd8206590a501151d}{{Von\bibnamedelimb Eicken}}{V\bibinitperiod}{Thorsten}{T\bibinitperiod}{}{}{}{}}%
        {{hash=25640d959d1bf65555c260fb1f07c09c}{Yelick}{Y\bibinitperiod}{Katherine}{K\bibinitperiod}{}{}{}{}}%
      }
      \list{language}{1}{%
        {English}%
      }
      \list{publisher}{1}{%
        {IEEE}%
      }
      \strng{namehash}{90bad93476f47a7a976502567167f189}
      \strng{fullhash}{5beb3ba62b85467d10bd582953411229}
      \field{sortinit}{C}
      \field{sortinithash}{59f25d509f3381b07695554a9f35ecb2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{isbn}{0818643404}
      \field{issn}{1063-9535}
      \field{title}{{Parallel programming in Split-C}}
      \field{pages}{262\bibrangedash 273}
      \range{pages}{12}
      \verb{doi}
      \verb 10.1109/SUPERC.1993.1263470
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Culler et al. - Unknown - Parallel programming in Split-C.pdf:pdf
      \endverb
      \verb{url}
      \verb http://ieeexplore.ieee.org/articleDetails.jsp?arnumber=1263470
      \endverb
      \keyw{C language,Computer languages,Computer science,Cost function,Frequency,Message passing,Parallel processing,Parallel programming,Predictive models,Program processors,Signal processing,Split-C language,assignment operators,data parallel programming,distributed memory multiprocessors,global address space,high performance programming,language concepts,locality,message passing,parallel extension,parallel languages,parallel programming,performance results,program optimization,remote access,shared memory,software performance evaluation}
    \endentry
    \entry{Dabek2002}{article}{}
      \name{author}{2}{}{%
        {{hash=a86867a939ed2e915233f5e4d031239d}{Dabek}{D\bibinitperiod}{Frank}{F\bibinitperiod}{}{}{}{}}%
        {{hash=2dc9857d6c0665433be9d19a7c0e7b5b}{Zeldovich}{Z\bibinitperiod}{Nickolai}{N\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {New York, New York, USA}%
      }
      \list{publisher}{1}{%
        {ACM Press}%
      }
      \strng{namehash}{73b80b55256d70d62dfe4f77183ce8a4}
      \strng{fullhash}{73b80b55256d70d62dfe4f77183ce8a4}
      \field{sortinit}{D}
      \field{sortinithash}{78f7c4753a2004675f316a80bdb31742}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Events are a better means of managing I/O concurrency in server software than threads: events help avoid bugs caused by the unnecessary CPU concurrency introduced by threads. Event-based programs also tend to have more sta- ble performance under heavy load than threaded programs. We argue that our libasync non-blocking I/O library makes event-based programming convenient and evaluate exten- sions to the library that allow event-based programs to take advantage of multi-processors. We conclude that events pro- vide all the benefits of threads, with substantially less com- plexity; the result is more robust software.}
      \field{journaltitle}{Proceedings of the 10th workshop on ACM SIGOPS European workshopn workshop}
      \field{month}{07}
      \field{title}{{Event-driven programming for robust software}}
      \field{year}{2002}
      \field{pages}{186\bibrangedash 189}
      \range{pages}{4}
      \verb{doi}
      \verb 10.1145/1133373.1133410
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Dabek, Zeldovich - 2002 - Event-driven programming for robust software.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=1133373.1133410%20http://dl.acm.org/citation.cfm?id=1133410
      \endverb
    \endentry
    \entry{Dagum1998}{article}{}
      \name{author}{2}{}{%
        {{hash=20c23fe2e9a9947390db262616050795}{Dagum}{D\bibinitperiod}{L.}{L\bibinitperiod}{}{}{}{}}%
        {{hash=ead6916b1eafff3fb04e16881e177f7b}{Menon}{M\bibinitperiod}{R.}{R\bibinitperiod}{}{}{}{}}%
      }
      \list{language}{1}{%
        {English}%
      }
      \list{publisher}{1}{%
        {IEEE}%
      }
      \strng{namehash}{7e1aee793b1070dca131bfeebeeccdd8}
      \strng{fullhash}{7e1aee793b1070dca131bfeebeeccdd8}
      \field{sortinit}{D}
      \field{sortinithash}{78f7c4753a2004675f316a80bdb31742}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{At its most elemental level, OpenMP is a set of compiler$\backslash$ndirectives and callable runtime library routines that extend Fortran$\backslash$n(and separately, C and C++ to express shared memory parallelism. It$\backslash$nleaves the base language unspecified, and vendors can implement OpenMP$\backslash$nin any Fortran compiler. Naturally, to support pointers and$\backslash$nallocatables, Fortran 90 and Fortran 95 require the OpenMP$\backslash$nimplementation to include additional semantics over Fortran 77. OpenMP$\backslash$nleverages many of the X3H5 concepts while extending them to support$\backslash$ncoarse grain parallelism. The standard also includes a callable runtime$\backslash$nlibrary with accompanying environment variables}
      \field{isbn}{1070-9924 VO - 5}
      \field{issn}{1070-9924}
      \field{journaltitle}{IEEE Computational Science and Engineering}
      \field{number}{1}
      \field{title}{{OpenMP: an industry standard API for shared-memory programming}}
      \field{volume}{5}
      \field{year}{1998}
      \field{pages}{46\bibrangedash 55}
      \range{pages}{10}
      \verb{doi}
      \verb 10.1109/99.660313
      \endverb
      \verb{url}
      \verb http://ieeexplore.ieee.org/articleDetails.jsp?arnumber=660313
      \endverb
      \keyw{ANSI standards,Coherence,Computer architecture,Fortran,Fortran 90,Fortran 95,Fortran compiler,Hardware,Message passing,OpenMP,Parallel processing,Parallel programming,Power system modeling,Scalability,Software systems,X3H5 concepts,allocatables,application program interfaces,callable runtime library,callable runtime library routines,coarse grain parallelism,compiler directives,environment variables,industry standard API,parallel programming,pointers,shared memory parallelism,shared memory programming,shared memory systems,software portability,software reviews,software standards}
    \endentry
    \entry{Darema1988}{article}{}
      \name{author}{4}{}{%
        {{hash=72a14b0eec540b0dcc375b6979a268eb}{Darema}{D\bibinitperiod}{F.}{F\bibinitperiod}{}{}{}{}}%
        {{hash=8ab082feed06dfe1bea51cc6ff1c3e5f}{George}{G\bibinitperiod}{D.A.}{D\bibinitperiod}{}{}{}{}}%
        {{hash=046f42cd0770d993d44c50c9c64cf0c9}{Norton}{N\bibinitperiod}{V.A.}{V\bibinitperiod}{}{}{}{}}%
        {{hash=b30b4985d9772acafc63ea7951e8c3bf}{Pfister}{P\bibinitperiod}{G.F.}{G\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{a398657d45f6b4b737868b3428f2b73b}
      \strng{fullhash}{e124c7975169075c965c75e40a28da2b}
      \field{sortinit}{D}
      \field{sortinithash}{78f7c4753a2004675f316a80bdb31742}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{We present a single-program-multiple-data computational model which we have implemented in the EPEX system to run in parallel mode FORTRAN scientific application programs. The computational model assumes a shared memory organization and is based on the scheme that all processes executing a program in parallel remain in existence for the entire execution; however, the tasks to be executed by each process are determined dynamically during execution by the use of appropriate synchronizing constructs that are imbedded in the program. We have demonstrated the applicability of the model in the parallelization of several applications. We discuss parallelization features of these applications and performance issues such as overhead, speedup, efficiency.}
      \field{issn}{01678191}
      \field{journaltitle}{Parallel Computing}
      \field{month}{04}
      \field{number}{1}
      \field{title}{{A single-program-multiple-data computational model for EPEX/FORTRAN}}
      \field{volume}{7}
      \field{year}{1988}
      \field{pages}{11\bibrangedash 24}
      \range{pages}{14}
      \verb{doi}
      \verb 10.1016/0167-8191(88)90094-4
      \endverb
      \verb{url}
      \verb http://www.sciencedirect.com/science/article/pii/0167819188900944
      \endverb
      \keyw{EPEX/FORTRAN,Shared memory multiprocessor,computational model,parallelization features}
    \endentry
    \entry{Darema2001}{incollection}{}
      \name{author}{1}{}{%
        {{hash=f10061f81c00540461479a50bd1a2e39}{Darema}{D\bibinitperiod}{Frederica}{F\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{f10061f81c00540461479a50bd1a2e39}
      \strng{fullhash}{f10061f81c00540461479a50bd1a2e39}
      \field{sortinit}{D}
      \field{sortinithash}{78f7c4753a2004675f316a80bdb31742}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{I proposed the SPMD (Single Program Multiple Data) model, in January 19841, as a means for enabling parallel execution of applications on multiprocessors, and in particular for highly parallel machines like the RP3 (the IBM Research Parallel Processor Prototype2). This talk will provide a review of the origins of the SPMD, it's early use in enabling parallel execution of scientific applications and it's implementation in one of the first3 parallel programming environments. In fact [3] was the first programming environment that implemented the SPMD model; other environments in the 1985 timeframe were based on the fork-and-join (F{\&}J) model.}
      \field{booktitle}{Parallel Computing}
      \field{isbn}{9783540426097}
      \field{title}{{The SPMD Model: Past , Present and Future}}
      \field{year}{2001}
      \field{pages}{1}
      \range{pages}{1}
      \verb{doi}
      \verb 10.1007/3-540-45417-9_1
      \endverb
    \endentry
    \entry{Dean2008}{inproceedings}{}
      \name{author}{2}{}{%
        {{hash=4aecfb0cc2e1e3b7899129fa2a94e2b8}{Dean}{D\bibinitperiod}{Jeffrey}{J\bibinitperiod}{}{}{}{}}%
        {{hash=193bcec5240237591ad8fb697869f013}{Ghemawat}{G\bibinitperiod}{Sanjay}{S\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{59b423e9fed33260f87a089f738c1beb}
      \strng{fullhash}{59b423e9fed33260f87a089f738c1beb}
      \field{sortinit}{D}
      \field{sortinithash}{78f7c4753a2004675f316a80bdb31742}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{MapReduce is a programming model and an associated implementation for processing and generating large data sets. Users specify a map function that processes a key/value pair to generate a set of intermediate key/value pairs, and a reduce function that merges all intermediate values associated with the same intermediate key. Many real world tasks are expressible in this model, as shown in the paper. Programs written in this functional style are automatically parallelized and executed on a large cluster of commodity machines. The run-time system takes care of the details of partitioning the input data, scheduling the program's execution across a set of machines, handling machine failures, and managing the required inter-machine communication. This allows programmers without any experience with parallel and distributed systems to easily utilize the resources of a large distributed system. Our implementation of MapReduce runs on a large cluster of commodity machines and is highly scalable: a typical MapReduce computation processes many terabytes of data on thousands of machines. Programmers find the system easy to use: hundreds of MapReduce programs have been implemented and upwards of one thousand MapReduce jobs are executed on Google's clusters every day.}
      \field{booktitle}{Proc. of the OSDI - Symp. on Operating Systems Design and Implementation}
      \field{eprinttype}{arXiv}
      \field{isbn}{9781595936868}
      \field{issn}{00010782}
      \field{number}{1}
      \field{title}{{MapReduce: Simplified Data Processing on Large Clusters}}
      \field{volume}{51}
      \field{year}{2004}
      \field{pages}{137\bibrangedash 149}
      \range{pages}{13}
      \verb{doi}
      \verb 10.1145/1327452.1327492
      \endverb
      \verb{eprint}
      \verb 10.1.1.163.5292
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Dean, Ghemawat - 2004 - MapReduce Simplified Data Processing on Large Clusters.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=1327492%20http://doi.acm.org/10.1145/1327452.1327492%20http://citeseerx.ist.psu.edu/viewdoc/summary;jsessionid=53CA72B524B9A6153BFE89FE26FBB832?doi=10.1.1.163.5292
      \endverb
    \endentry
    \entry{Dijkstra1970}{misc}{}
      \name{author}{1}{}{%
        {{hash=2899cd0fd85b31bfe8a4940033c11554}{Dijkstra}{D\bibinitperiod}{E\bibnamedelima W}{E\bibinitperiod\bibinitdelim W\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{2899cd0fd85b31bfe8a4940033c11554}
      \strng{fullhash}{2899cd0fd85b31bfe8a4940033c11554}
      \field{sortinit}{D}
      \field{sortinithash}{78f7c4753a2004675f316a80bdb31742}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Manuscript. No abstract.}
      \field{booktitle}{Structured Programming}
      \field{isbn}{0122005503}
      \field{title}{{Notes on structured programming}}
      \field{volume}{70-WSK-03}
      \field{year}{1970}
      \field{pages}{1\bibrangedash 82}
      \range{pages}{82}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Dijkstra - 1970 - Notes on structured programming.pdf:pdf
      \endverb
      \verb{url}
      \verb http://www.informatik.uni-bremen.de/agbkb/lehre/programmiersprachen/artikel/EWD-notes-structured.pdf%20http://www.narcis.nl/publication/RecordID/oai:library.tue.nl:252825
      \endverb
    \endentry
    \entry{Dijkstra}{article}{}
      \name{author}{1}{}{%
        {{hash=16ac5e8f12e3df4199ef68a6c32611df}{Dijkstra}{D\bibinitperiod}{Edsger}{E\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{16ac5e8f12e3df4199ef68a6c32611df}
      \strng{fullhash}{16ac5e8f12e3df4199ef68a6c32611df}
      \field{sortinit}{D}
      \field{sortinithash}{78f7c4753a2004675f316a80bdb31742}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{annotation}{This is the reference paper for Semaphores.}
      \field{title}{{Over de sequentialiteit van procesbeschrijvingen}}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Dijkstra - Unknown - Over de sequentialiteit van procesbeschrijvingen.PDF:PDF
      \endverb
    \endentry
    \entry{Dijkstra1975}{article}{}
      \name{author}{1}{}{%
        {{hash=3fa72084538a27e0e2efc0508856455c}{Dijkstra}{D\bibinitperiod}{Edsger\bibnamedelima W.}{E\bibinitperiod\bibinitdelim W\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {ACM}%
      }
      \strng{namehash}{3fa72084538a27e0e2efc0508856455c}
      \strng{fullhash}{3fa72084538a27e0e2efc0508856455c}
      \field{sortinit}{D}
      \field{sortinithash}{78f7c4753a2004675f316a80bdb31742}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{issn}{00010782}
      \field{journaltitle}{Communications of the ACM}
      \field{month}{08}
      \field{number}{8}
      \field{title}{{Guarded commands, nondeterminacy and formal derivation of programs}}
      \field{volume}{18}
      \field{year}{1975}
      \field{pages}{453\bibrangedash 457}
      \range{pages}{5}
      \verb{doi}
      \verb 10.1145/360933.360975
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Dijkstra - 1975 - Guarded commands, nondeterminacy and formal derivation of programs.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=360933.360975
      \endverb
      \keyw{case-construction,correctness proof,derivation of programs,nondeterminancy,program semantics,programming language semantics,programming languages,programming methodology,repetition,sequencing primitives,termination}
    \endentry
    \entry{Dijkstra1968a}{article}{}
      \name{author}{1}{}{%
        {{hash=3fa72084538a27e0e2efc0508856455c}{Dijkstra}{D\bibinitperiod}{Edsger\bibnamedelima W.}{E\bibinitperiod\bibinitdelim W\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {ACM}%
      }
      \strng{namehash}{3fa72084538a27e0e2efc0508856455c}
      \strng{fullhash}{3fa72084538a27e0e2efc0508856455c}
      \field{sortinit}{D}
      \field{sortinithash}{78f7c4753a2004675f316a80bdb31742}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{issn}{00010782}
      \field{journaltitle}{Communications of the ACM}
      \field{month}{03}
      \field{number}{3}
      \field{title}{{Letters to the editor: go to statement considered harmful}}
      \field{volume}{11}
      \field{year}{1968}
      \field{pages}{147\bibrangedash 148}
      \range{pages}{2}
      \verb{doi}
      \verb 10.1145/362929.362947
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Dijkstra - 1968 - Letters to the editor go to statement considered harmful.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=362929.362947
      \endverb
      \keyw{alternative clause,branch instruction,conditional clause,go to statement,jump instruction,program intelligibility,program sequencing,repetitive clause}
    \endentry
    \entry{Dijkstra1968}{article}{}
      \name{author}{1}{}{%
        {{hash=3fa72084538a27e0e2efc0508856455c}{Dijkstra}{D\bibinitperiod}{Edsger\bibnamedelima W.}{E\bibinitperiod\bibinitdelim W\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {ACM}%
      }
      \strng{namehash}{3fa72084538a27e0e2efc0508856455c}
      \strng{fullhash}{3fa72084538a27e0e2efc0508856455c}
      \field{sortinit}{D}
      \field{sortinithash}{78f7c4753a2004675f316a80bdb31742}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{issn}{00010782}
      \field{journaltitle}{Communications of the ACM}
      \field{month}{05}
      \field{number}{5}
      \field{title}{{The structure of the “THE”-multiprogramming system}}
      \field{volume}{11}
      \field{year}{1968}
      \field{pages}{341\bibrangedash 346}
      \range{pages}{6}
      \verb{doi}
      \verb 10.1145/363095.363143
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Dijkstra - 1968 - The structure of the “THE”-multiprogramming system.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=363095.363143
      \endverb
      \keyw{cooperating sequential processes,input-output buffering,multiprocessing,multiprogramming,multiprogramming system,operating system,processor sharing,program verification,real-time debugging,synchronizing primitives,system hierarchy,system levels,system structure}
    \endentry
    \entry{Dolby2015}{article}{}
      \name{author}{1}{}{%
        {{hash=2806f502f6409246c85435f0a1ca000f}{Dolby}{D\bibinitperiod}{Julian}{J\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{2806f502f6409246c85435f0a1ca000f}
      \strng{fullhash}{2806f502f6409246c85435f0a1ca000f}
      \field{sortinit}{D}
      \field{sortinithash}{78f7c4753a2004675f316a80bdb31742}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{title}{{A History of JavaScript Static Analysis with WALA at IBM}}
      \field{year}{2015}
    \endentry
    \entry{Edwards2012}{inproceedings}{}
      \name{author}{2}{}{%
        {{hash=e91529587c59b877697073f8dba26420}{Edwards}{E\bibinitperiod}{H.\bibnamedelimi Carter}{H\bibinitperiod\bibinitdelim C\bibinitperiod}{}{}{}{}}%
        {{hash=a53efab0ded2f6a2bcff0ac341e47302}{Sunderland}{S\bibinitperiod}{Daniel}{D\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {New York, New York, USA}%
      }
      \list{publisher}{1}{%
        {ACM Press}%
      }
      \strng{namehash}{5f545f0954c46104a89620103ab0caa0}
      \strng{fullhash}{5f545f0954c46104a89620103ab0caa0}
      \field{sortinit}{E}
      \field{sortinithash}{fefc5210ef4721525b2a478df41efcd4}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{Proceedings of the 2012 International Workshop on Programming Models and Applications for Multicores and Manycores - PMAM '12}
      \field{isbn}{9781450312110}
      \field{month}{02}
      \field{title}{{Kokkos Array performance-portable manycore programming model}}
      \field{year}{2012}
      \field{pages}{1\bibrangedash 10}
      \range{pages}{10}
      \verb{doi}
      \verb 10.1145/2141702.2141703
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=2141702.2141703
      \endverb
      \keyw{GPU,manycore,mini-application,multicore,multidimensional array}
    \endentry
    \entry{Fernandez2014a}{article}{}
      \name{author}{4}{}{%
        {{hash=a0705c9facc2456fb003c8bb34ebbbca}{Fernandez}{F\bibinitperiod}{Raul\bibnamedelima Castro}{R\bibinitperiod\bibinitdelim C\bibinitperiod}{}{}{}{}}%
        {{hash=da1f637aa6475c3bd5926c4954bedb08}{Migliavacca}{M\bibinitperiod}{Matteo}{M\bibinitperiod}{}{}{}{}}%
        {{hash=ccf6772250cd7cca7065f4bd3a57260e}{Kalyvianaki}{K\bibinitperiod}{Evangelia}{E\bibinitperiod}{}{}{}{}}%
        {{hash=21c929c62df652f90f442dc629746da2}{Pietzuch}{P\bibinitperiod}{Peter}{P\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{7ed57f797199a611c36f055eda32daee}
      \strng{fullhash}{8be6c253686c99ca815d37a1912a93e1}
      \field{sortinit}{F}
      \field{sortinithash}{c6a7d9913bbd7b20ea954441c0460b78}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{USENIX ATC}
      \field{title}{{Making state explicit for imperative big data processing}}
      \field{year}{2014}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Fernandez et al. - 2014 - Making state explicit for imperative big data processing.pdf:pdf
      \endverb
      \verb{url}
      \verb https://www.usenix.org/system/files/conference/atc14/atc14-paper-castro%7B%5C_%7Dfernandez.pdf
      \endverb
    \endentry
    \entry{Fernandez-Villamor2010}{article}{}
      \name{author}{1}{}{%
        {{hash=f7663a799a5aa49b344a2bb9c4256486}{Fernández-Villamor}{F\bibinithyphendelim V\bibinitperiod}{JI}{J\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{f7663a799a5aa49b344a2bb9c4256486}
      \strng{fullhash}{f7663a799a5aa49b344a2bb9c4256486}
      \field{sortinit}{F}
      \field{sortinithash}{c6a7d9913bbd7b20ea954441c0460b78}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{Proceedings of the 2nd International Conference on Agents and Artificial Intelligence, ICAART 2010}
      \field{title}{{Microservices-Lightweight Service Descriptions for REST Architectural Style.}}
      \field{year}{2010}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Fernández-Villamor - 2010 - Microservices-Lightweight Service Descriptions for REST Architectural Style.pdf:pdf
      \endverb
      \verb{url}
      \verb http://www.researchgate.net/publication/221539905%7B%5C_%7DMicroservices%7B%5C_%7D-%7B%5C_%7DLightweight%7B%5C_%7DService%7B%5C_%7DDescriptions%7B%5C_%7Dfor%7B%5C_%7DREST%7B%5C_%7DArchitectural%7B%5C_%7DStyle
      \endverb
    \endentry
    \entry{Flanagan2006}{book}{}
      \name{author}{1}{}{%
        {{hash=0d3021863d9f27962ca5b5326411f0f3}{Flanagan}{F\bibinitperiod}{D}{D\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{0d3021863d9f27962ca5b5326411f0f3}
      \strng{fullhash}{0d3021863d9f27962ca5b5326411f0f3}
      \field{sortinit}{F}
      \field{sortinithash}{c6a7d9913bbd7b20ea954441c0460b78}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{title}{{JavaScript: the definitive guide}}
      \field{year}{2006}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Flanagan - 2006 - JavaScript the definitive guide.pdf:pdf
      \endverb
      \verb{url}
      \verb https://books.google.com/books?hl=en%7B%5C&%7Dlr=%7B%5C&%7Did=k0CbAgAAQBAJ%7B%5C&%7Doi=fnd%7B%5C&%7Dpg=PT6%7B%5C&%7Ddq=Javascript+the+definitive+guide%7B%5C&%7Dots=O2ormljBtY%7B%5C&%7Dsig=GSTQR2uCUVB0-YIk3pnOKNqNs-4
      \endverb
    \endentry
    \entry{Flynn1972}{article}{}
      \name{author}{1}{}{%
        {{hash=2a08797308ff9f0a8442b81a135c866a}{Flynn}{F\bibinitperiod}{Michael\bibnamedelima J.}{M\bibinitperiod\bibinitdelim J\bibinitperiod}{}{}{}{}}%
      }
      \list{language}{1}{%
        {English}%
      }
      \list{publisher}{1}{%
        {IEEE}%
      }
      \strng{namehash}{2a08797308ff9f0a8442b81a135c866a}
      \strng{fullhash}{2a08797308ff9f0a8442b81a135c866a}
      \field{sortinit}{F}
      \field{sortinithash}{c6a7d9913bbd7b20ea954441c0460b78}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{issn}{0018-9340}
      \field{journaltitle}{IEEE Transactions on Computers}
      \field{month}{09}
      \field{number}{9}
      \field{title}{{Some Computer Organizations and Their Effectiveness}}
      \field{volume}{C-21}
      \field{year}{1972}
      \field{pages}{948\bibrangedash 960}
      \range{pages}{13}
      \verb{doi}
      \verb 10.1109/TC.1972.5009071
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Flynn - 1972 - Some Computer Organizations and Their Effectiveness.pdf:pdf
      \endverb
      \verb{url}
      \verb http://ieeexplore.ieee.org/articleDetails.jsp?arnumber=5009071
      \endverb
      \keyw{Automata,Computer aided instruction,Computer organization,Concurrent computing,Parallel processing,Performance evaluation,Time sharing computer systems,Transmission electron microscopy,instruction stream,overlapped,parallel processors,resource hierarchy}
    \endentry
    \entry{Foster1996}{article}{}
      \name{author}{3}{}{%
        {{hash=ef1fd4a400dec702b5baeeac0f942be7}{Foster}{F\bibinitperiod}{Ian}{I\bibinitperiod}{}{}{}{}}%
        {{hash=5bfec4c02577e5f42b9a44b0fd808e64}{Kesselman}{K\bibinitperiod}{Carl}{C\bibinitperiod}{}{}{}{}}%
        {{hash=07d664b9e9a327fef86e9537c229bd71}{Tuecke}{T\bibinitperiod}{Steven}{S\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{d6d19d8cc4710ab5f5afab0be7badec6}
      \strng{fullhash}{d6d19d8cc4710ab5f5afab0be7badec6}
      \field{sortinit}{F}
      \field{sortinithash}{c6a7d9913bbd7b20ea954441c0460b78}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Lightweight threads have an important role to play in parallel systems: they can be used to exploit shared-memory parallelism, to mask communication and I/O latencies, to implement remote memory access, and to support task-parallel and irregular applications. In this paper, we address the question of how to integrate threads and communication in high-performance distributed-memory systems. We propose an approach based on global pointer and remote service request mechanisms, and explain how these mechanisms support dynamic communication structures, asynchronous messaging, dynamic thread creation and destruction, and a global memory model via interprocessor references. We also explain how these mechanisms can be implemented in various environments. Our global pointer and remote service request mechanisms have been incorporated in a runtime system called Nexus that is used as a compiler target for parallel languages and as a substrate for higher-level communication libraries. We report the results of performance studies conducted using a Nexus implementation; these results indicate that Nexus mechanisms can be implemented efficiently on commodity hardware and software systems.}
      \field{issn}{07437315}
      \field{journaltitle}{Journal of Parallel and Distributed Computing}
      \field{month}{08}
      \field{number}{1}
      \field{title}{{The Nexus Approach to Integrating Multithreading and Communication}}
      \field{volume}{37}
      \field{year}{1996}
      \field{pages}{70\bibrangedash 82}
      \range{pages}{13}
      \verb{doi}
      \verb 10.1006/jpdc.1996.0108
      \endverb
      \verb{url}
      \verb http://www.sciencedirect.com/science/article/pii/S0743731596901082%20http://linkinghub.elsevier.com/retrieve/pii/S0743731596901082
      \endverb
    \endentry
    \entry{Foster1995b}{article}{}
      \name{author}{2}{}{%
        {{hash=a9eb3a72dff59d8327656cdb80763be3}{Foster}{F\bibinitperiod}{I.T.}{I\bibinitperiod}{}{}{}{}}%
        {{hash=43ec2e4a0fbe02effc5bd9a3aea327b1}{Chandy}{C\bibinitperiod}{K\bibnamedelima M}{K\bibinitperiod\bibinitdelim M\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{023494131fd3bddbc4d77abeb5f8b547}
      \strng{fullhash}{023494131fd3bddbc4d77abeb5f8b547}
      \field{sortinit}{F}
      \field{sortinithash}{c6a7d9913bbd7b20ea954441c0460b78}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Fortran M is a small set of extensions to Fortran 77 that supports a modular approach to the design of message-passing programs. It has the following features. (1) Modularity. Programs are constructed by using explicitly-declared communication channels to plug together program modules called processes. A process can encapsulate common data, subprocesses, and internal communication. (2) Safety. Operations on channels are restricted so as to guarantee deterministic execution, even in dynamic computations that create and delete processes and channels. Channels are typed, so a compiler can check for correct usage. (3) Architecture Independence. The mapping of processes to processors can be specified with respect to a virtual computer with size and shape different from that of the target computer. Mapping is specified by annotations that influence performance but not correctness. (4) Efficiency. Fortran M can be compiled efficiently for uniprocessors, sharedmemory computers, distributed-memory computers, and networks of workstations. Because message passing is incorporated into the language, a compiler can optimize communication as well as computation.}
      \field{issn}{07437315}
      \field{journaltitle}{Journal of Parallel and Distributed Computing}
      \field{month}{04}
      \field{number}{1}
      \field{title}{{Fortran M: A Language for Modular Parallel Programming}}
      \field{volume}{26}
      \field{year}{1995}
      \field{pages}{24\bibrangedash 35}
      \range{pages}{12}
      \verb{doi}
      \verb 10.1006/jpdc.1995.1044
      \endverb
      \verb{url}
      \verb http://www.sciencedirect.com/science/article/pii/S0743731585710441
      \endverb
    \endentry
    \entry{Fowler2014}{misc}{}
      \name{author}{2}{}{%
        {{hash=c3035fa4fc8a043ebf2ea4bff39adda1}{Fowler}{F\bibinitperiod}{M}{M\bibinitperiod}{}{}{}{}}%
        {{hash=5e38ce935e385abb18e3a90862ad15c9}{Lewis}{L\bibinitperiod}{J}{J\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{3f2071aefbd2c259939336916468646b}
      \strng{fullhash}{3f2071aefbd2c259939336916468646b}
      \field{sortinit}{F}
      \field{sortinithash}{c6a7d9913bbd7b20ea954441c0460b78}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{title}{{Microservices}}
      \field{urlday}{19}
      \field{urlmonth}{11}
      \field{urlyear}{2015}
      \field{year}{2014}
      \verb{url}
      \verb http://martinfowler.com/articles/microservices.html
      \endverb
    \endentry
    \entry{Frigo1998}{article}{}
      \name{author}{3}{}{%
        {{hash=26a5a1c098bdade790e2ee41c62dd36b}{Frigo}{F\bibinitperiod}{Matteo}{M\bibinitperiod}{}{}{}{}}%
        {{hash=3b9631a5d8255aae1ddfadc5d57c6418}{Leiserson}{L\bibinitperiod}{Charles\bibnamedelima E.}{C\bibinitperiod\bibinitdelim E\bibinitperiod}{}{}{}{}}%
        {{hash=3e3f78e0b3eb7ea91e9ecf9d410dfdcf}{Randall}{R\bibinitperiod}{Keith\bibnamedelima H.}{K\bibinitperiod\bibinitdelim H\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {ACM}%
      }
      \strng{namehash}{17dd3c452b06a8226e359724ffd1f4e1}
      \strng{fullhash}{17dd3c452b06a8226e359724ffd1f4e1}
      \field{sortinit}{F}
      \field{sortinithash}{c6a7d9913bbd7b20ea954441c0460b78}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{The fifth release of the multithreaded language Cilk uses a provably good "work-stealing" scheduling algorithm similar to the first system, but the language has been completely redesigned and the runtime system completely reengineered. The efficiency}
      \field{eprintclass}{arXiv:gr-qc}
      \field{eprinttype}{arXiv}
      \field{isbn}{0897919874}
      \field{issn}{03621340}
      \field{journaltitle}{ACM SIGPLAN Notices}
      \field{month}{05}
      \field{number}{5}
      \field{title}{{The implementation of the Cilk-5 multithreaded language}}
      \field{volume}{33}
      \field{year}{1998}
      \field{pages}{212\bibrangedash 223}
      \range{pages}{12}
      \verb{doi}
      \verb 10.1145/277652.277725
      \endverb
      \verb{eprint}
      \verb 9809069v1
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Frigo, Leiserson, Randall - 1998 - The implementation of the Cilk-5 multithreaded language.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=277652.277725
      \endverb
      \keyw{critical path,ming language,multithreading,parallel computing,program-,runtime system,work}
    \endentry
    \entry{Gardner2013}{article}{}
      \name{author}{2}{}{%
        {{hash=13756ca3acc718d5518b863f8267f92f}{Gardner}{G\bibinitperiod}{P}{P\bibinitperiod}{}{}{}{}}%
        {{hash=77454a501c637787977ac831368f346b}{Smith}{S\bibinitperiod}{G}{G\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{10fb73e3960a5ce86da37e3d09886b04}
      \strng{fullhash}{10fb73e3960a5ce86da37e3d09886b04}
      \field{sortinit}{G}
      \field{sortinithash}{1c854ef9177a91bf894e66485bdbd3ed}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{JSTools@ ECOOP}
      \field{title}{{JuS: Squeezing the sense out of javascript programs}}
      \field{year}{2013}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Gardner, Smith - 2013 - JuS Squeezing the sense out of javascript programs.pdf:pdf
      \endverb
      \verb{url}
      \verb https://csl.cs.uni-saarland.de/jstools/2013/JuS.pdf
      \endverb
    \endentry
    \entry{Gardner2012}{article}{}
      \name{author}{3}{}{%
        {{hash=d18396a5cf966059996d61683496175e}{Gardner}{G\bibinitperiod}{PA}{P\bibinitperiod}{}{}{}{}}%
        {{hash=d5bfe8be8a5b86fa9fbfab6fe9f101ae}{Maffeis}{M\bibinitperiod}{S}{S\bibinitperiod}{}{}{}{}}%
        {{hash=d11a82bdedcb4aa32fb632be969c943d}{Smith}{S\bibinitperiod}{GD}{G\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{e31c2f43aa8e6fbb776a6c4443684308}
      \strng{fullhash}{e31c2f43aa8e6fbb776a6c4443684308}
      \field{sortinit}{G}
      \field{sortinithash}{1c854ef9177a91bf894e66485bdbd3ed}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{ACM SIGPLAN Notices}
      \field{title}{{Towards a program logic for JavaScript}}
      \field{year}{2012}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Gardner, Maffeis, Smith - 2012 - Towards a program logic for JavaScript.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=2103663
      \endverb
    \endentry
    \entry{Garrett2005}{article}{}
      \name{author}{1}{}{%
        {{hash=77ec4e59d4183d8d503119b04eccb87c}{Garrett}{G\bibinitperiod}{JJ}{J\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{77ec4e59d4183d8d503119b04eccb87c}
      \strng{fullhash}{77ec4e59d4183d8d503119b04eccb87c}
      \field{sortinit}{G}
      \field{sortinithash}{1c854ef9177a91bf894e66485bdbd3ed}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{title}{{Ajax: A new approach to web applications}}
      \field{year}{2005}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Garrett - 2005 - Ajax A new approach to web applications.pdf:pdf
      \endverb
      \verb{url}
      \verb https://courses.cs.washington.edu/courses/cse490h/07sp/readings/ajax%7B%5C_%7Dadaptive%7B%5C_%7Dpath.pdf
      \endverb
    \endentry
    \entry{El-Ghazawi2006}{inproceedings}{}
      \name{author}{2}{}{%
        {{hash=311ab9384703821337788bf6cdf3c378}{El-Ghazawi}{E\bibinithyphendelim G\bibinitperiod}{Tarek}{T\bibinitperiod}{}{}{}{}}%
        {{hash=eca6e66e77da0b126886cd7930a0af7f}{Smith}{S\bibinitperiod}{Lauren}{L\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {New York, New York, USA}%
      }
      \list{publisher}{1}{%
        {ACM Press}%
      }
      \strng{namehash}{0085641e96b298a42c6f455475c5b66a}
      \strng{fullhash}{0085641e96b298a42c6f455475c5b66a}
      \field{sortinit}{G}
      \field{sortinithash}{1c854ef9177a91bf894e66485bdbd3ed}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{Proceedings of the 2006 ACM/IEEE conference on Supercomputing - SC '06}
      \field{isbn}{0769527000}
      \field{month}{11}
      \field{title}{{UPC: unified parallel C}}
      \field{year}{2006}
      \field{pages}{27}
      \range{pages}{1}
      \verb{doi}
      \verb 10.1145/1188455.1188483
      \endverb
      \verb{url}
      \verb http://dl.acm.org/ft%7B%5C_%7Dgateway.cfm?id=1188483%7B%5C&%7Dtype=html
      \endverb
    \endentry
    \entry{Goldberg1984}{book}{}
      \name{author}{1}{}{%
        {{hash=77ac3b4d2eb4807e5b80230bec798c39}{Goldberg}{G\bibinitperiod}{Adele}{A\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{77ac3b4d2eb4807e5b80230bec798c39}
      \strng{fullhash}{77ac3b4d2eb4807e5b80230bec798c39}
      \field{sortinit}{G}
      \field{sortinithash}{1c854ef9177a91bf894e66485bdbd3ed}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{The book is divided into five parts. Part One introduces the usr interface to the Smalltalk-80 syste, Part Two is an explanation of the support provided for finding information about objects that exist in the Smalltalk-80 sytem. Part Three provides an illustrated descrption of how to explore the class descriptions available in the system, and of how to use the editors for implementing new class descriptions. Part Four presents the support available for finding and correcting errors, while Part Five introduces acess to external files and such system housekeeping support as crash recovery and change management. The book is written to encourage specific practice and exploration. A brief introduction to the Smalltalk-80 language is also provided in order to explain the ways in which the user interface components provide access to the language components. For a more in-depth understanding of the language, reader may use this book in conjunction with Smalltalk-80: The Language and Its Implementation, by Adele Goldberg and David Robson (Addison-Wesley, 1983), which includes reference material for the system classes.}
      \field{booktitle}{Addison-Wesley series in computer science}
      \field{isbn}{0201113724}
      \field{title}{{Smalltalk-80 : the interactive programming environment}}
      \field{year}{1984}
      \field{pages}{xi\bibrangessep 516 p.}
      \range{pages}{-1}
      \verb{url}
      \verb http://cumincad.scix.net/cgi-bin/works/Show?61be
      \endverb
      \keyw{Smalltalk-80 (Computer program language)}
    \endentry
    \entry{Gonzalez-Velez2010}{article}{}
      \name{author}{2}{}{%
        {{hash=06762b32d5cd0364d9a954db239cc4b4}{González-Vélez}{G\bibinithyphendelim V\bibinitperiod}{Horacio}{H\bibinitperiod}{}{}{}{}}%
        {{hash=890c7231b8744bd4ceef4002228409ec}{Leyton}{L\bibinitperiod}{Mario}{M\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{fc4324259279308e10b4a1f38fd348fa}
      \strng{fullhash}{fc4324259279308e10b4a1f38fd348fa}
      \field{sortinit}{G}
      \field{sortinithash}{1c854ef9177a91bf894e66485bdbd3ed}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{issn}{00380644}
      \field{journaltitle}{Software: Practice and Experience}
      \field{month}{11}
      \field{number}{12}
      \field{title}{{A survey of algorithmic skeleton frameworks: high-level structured parallel programming enablers}}
      \field{volume}{40}
      \field{year}{2010}
      \field{pages}{1135\bibrangedash 1160}
      \range{pages}{26}
      \verb{doi}
      \verb 10.1002/spe.1026
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/González-Vélez, Leyton - 2010 - A survey of algorithmic skeleton frameworks high-level structured parallel programming enablers.pdf:pdf
      \endverb
      \verb{url}
      \verb http://doi.wiley.com/10.1002/spe.1026
      \endverb
    \endentry
    \entry{Gosling2000}{book}{}
      \name{author}{1}{}{%
        {{hash=7c3410b76c56748d83055307f8d8305f}{Gosling}{G\bibinitperiod}{J}{J\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{7c3410b76c56748d83055307f8d8305f}
      \strng{fullhash}{7c3410b76c56748d83055307f8d8305f}
      \field{sortinit}{G}
      \field{sortinithash}{1c854ef9177a91bf894e66485bdbd3ed}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{title}{{The Java language specification}}
      \field{year}{2000}
      \verb{url}
      \verb https://books.google.com/books?hl=en%7B%5C&%7Dlr=%7B%5C&%7Did=Ww1B9O%7B%5C_%7DyVGsC%7B%5C&%7Doi=fnd%7B%5C&%7Dpg=PA1%7B%5C&%7Ddq=Java%7B%5C&%7Dots=Sf2HglQaiE%7B%5C&%7Dsig=I%7B%5C_%7Dw6xyrKO4thAA7rHx%7B%5C_%7DZArjkJf0
      \endverb
    \endentry
    \entry{Gribble2001}{article}{}
      \name{author}{14}{}{%
        {{hash=1dcbdb01432a5348bcfac9b89ffb6665}{Gribble}{G\bibinitperiod}{Steven\bibnamedelima D.}{S\bibinitperiod\bibinitdelim D\bibinitperiod}{}{}{}{}}%
        {{hash=076cf707817a3f8501c3ecc48b1b2268}{Welsh}{W\bibinitperiod}{Matt}{M\bibinitperiod}{}{}{}{}}%
        {{hash=6e32af9a7280232aed1d219ae1faf5b8}{{Von\bibnamedelimb Behren}}{V\bibinitperiod}{Rob}{R\bibinitperiod}{}{}{}{}}%
        {{hash=d39379beb653a45262c41ef7b921356d}{Brewer}{B\bibinitperiod}{Eric\bibnamedelima a.}{E\bibinitperiod\bibinitdelim a\bibinitperiod}{}{}{}{}}%
        {{hash=476b9e41520047f68ef13e32a0872165}{Culler}{C\bibinitperiod}{David}{D\bibinitperiod}{}{}{}{}}%
        {{hash=0cc1c3dc8e0a93755c047271a1b88150}{Borisov}{B\bibinitperiod}{N.}{N\bibinitperiod}{}{}{}{}}%
        {{hash=b314c5a5b55ecca6ac7b965ac0878b00}{Czerwinski}{C\bibinitperiod}{S.}{S\bibinitperiod}{}{}{}{}}%
        {{hash=c6224b2e358c1b5a13031410171bc9c5}{Gummadi}{G\bibinitperiod}{R.}{R\bibinitperiod}{}{}{}{}}%
        {{hash=c6708e6a9876ffa89ef8ee5e1405eb66}{Hill}{H\bibinitperiod}{J.}{J\bibinitperiod}{}{}{}{}}%
        {{hash=90ac639b587879e890caf4d86331e649}{Joseph}{J\bibinitperiod}{A.}{A\bibinitperiod}{}{}{}{}}%
        {{hash=3a3fca3b11ead60e237fff067b3bccc8}{Katz}{K\bibinitperiod}{R.\bibnamedelimi H.}{R\bibinitperiod\bibinitdelim H\bibinitperiod}{}{}{}{}}%
        {{hash=e080e9830248b4ca4b417f045720c50d}{Mao}{M\bibinitperiod}{Z.\bibnamedelimi M.}{Z\bibinitperiod\bibinitdelim M\bibinitperiod}{}{}{}{}}%
        {{hash=819d6048b765b9688493961e96ea8ccc}{Ross}{R\bibinitperiod}{S.}{S\bibinitperiod}{}{}{}{}}%
        {{hash=1338f11dc7c99abb1ba2f3b1f109e3c3}{Zhao}{Z\bibinitperiod}{B.}{B\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{8f4b5fa85e56ffa1fa738b9d0af0573b}
      \strng{fullhash}{3f51c27945e1747097803b535ccce7ad}
      \field{sortinit}{G}
      \field{sortinithash}{1c854ef9177a91bf894e66485bdbd3ed}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{The Ninja project seeks to enable the broad innovation of robust, scalable, distributed Internet services, and to permit the emerging class of extremely heterogeneous devices to seamlessly access these services. Our architecture consists of four basic elements: bases, which are powerful workstation cluster environments with a software platform that simplifies scalable service construction; units, which are the devices by which users access the services; active proxies, which are transformational elements that are used for unit- or service-specific adaptation; and paths, which are an abstraction through which units, services, and active proxies are composed.}
      \field{isbn}{1389-1286}
      \field{issn}{13891286}
      \field{journaltitle}{Computer Networks}
      \field{number}{4}
      \field{title}{{Ninja architecture for robust Internet-scale systems and services}}
      \field{volume}{35}
      \field{year}{2001}
      \field{pages}{473\bibrangedash 497}
      \range{pages}{25}
      \verb{doi}
      \verb 10.1016/S1389-1286(00)00179-1
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Gribble, Welsh, Behren - 2001 - The Ninja architecture for robust Internet-scale systems and services.pdf:pdf
      \endverb
      \verb{url}
      \verb http://www.sciencedirect.com/science/article/pii/S1389128600001791
      \endverb
      \keyw{distributed systems,ninja architecture,pervasive computing,scalable services,thin clients}
    \endentry
    \entry{Grimshaw1991}{article}{}
      \name{author}{1}{}{%
        {{hash=914d5a89861351fa12a727358b5afa11}{Grimshaw}{G\bibinitperiod}{Andrew\bibnamedelima S.}{A\bibinitperiod\bibinitdelim S\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {University of Virginia}%
      }
      \strng{namehash}{914d5a89861351fa12a727358b5afa11}
      \strng{fullhash}{914d5a89861351fa12a727358b5afa11}
      \field{sortinit}{G}
      \field{sortinithash}{1c854ef9177a91bf894e66485bdbd3ed}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{month}{04}
      \field{title}{{An Introduction to Parallel Object-Oriented Programming with Mentat}}
      \field{year}{1991}
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=900803
      \endverb
    \endentry
    \entry{Grosser2011}{article}{}
      \name{author}{6}{}{%
        {{hash=8d5b5e98a55e4f5262f328dd602a741d}{Grosser}{G\bibinitperiod}{Tobias}{T\bibinitperiod}{}{}{}{}}%
        {{hash=f61456b4769c97d2e22320a17d26a8cf}{Zheng}{Z\bibinitperiod}{Hongbin}{H\bibinitperiod}{}{}{}{}}%
        {{hash=e66e4ceefb1cacfc5e6879ac9e13c54a}{Aloor}{A\bibinitperiod}{Raghesh}{R\bibinitperiod}{}{}{}{}}%
        {{hash=b13079d827d773cfba8d8f3b6661fc37}{Simbürger}{S\bibinitperiod}{Andreas}{A\bibinitperiod}{}{}{}{}}%
        {{hash=84260c75847804b5dee295d1ca50e44b}{Grö{ß}linger}{G\bibinitperiod}{Armin}{A\bibinitperiod}{}{}{}{}}%
        {{hash=67c5db856a107c2e8d50498431979606}{Pouchet}{P\bibinitperiod}{Louis-Noël}{L\bibinithyphendelim N\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{ebc367687691913cd131ae51d32451c1}
      \strng{fullhash}{77f27fd2010ded35b5bd5083cb9690e4}
      \field{sortinit}{G}
      \field{sortinithash}{1c854ef9177a91bf894e66485bdbd3ed}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Various powerful polyhedral techniques exist to optimize computation intensive programs effectively. Applying these techniques on any non-trivial program is still surprisingly difficult and often not as effective as expected. Most polyhedral tools are limited to a specific programming language. Even for this language, relevant code needs to match specific syntax that rarely appears in existing code. It is therefore hard or even impossible to process existing programs automatically. In addition, most tools target C or OpenCL code, which prevents effective communication with compiler internal optimizers. As a result target architecture specific optimizations are either little effective or not approached at all. In this paper we present Polly, a project to enable polyhedral optimizations in LLVM. Polly automatically detects and transforms relevant programparts in a language-independent and syntactically transparent way. Therefore, it supports programs written in most common programming languages and constructs like C++ iterators, goto based loops and pointer arithmetic. Internally it provides a state-of-the-art polyhedral library with full support for Z-polyhedra, ad- vanced data dependency analysis and support for external optimizers. Polly includes integrated SIMD and OpenMP code generation. Through LLVM, machine code for CPUs and GPU accelerators, C source code and even hardware descriptions can be targeted.}
      \field{journaltitle}{Proceedings of the First International Workshop on Polyhedral Compilation Techniques (IMPACT '11)}
      \field{title}{{Polly - Polyhedral optimization in LLVM}}
      \field{year}{2011}
      \field{pages}{None}
      \range{pages}{-1}
      \verb{url}
      \verb http://perso.ens-lyon.fr/christophe.alias/impact2011/impact-07.pdf
      \endverb
    \endentry
    \entry{Gunda2010}{article}{}
      \name{author}{5}{}{%
        {{hash=14f808bb1f86a4dcc4303627a8affd5c}{Gunda}{G\bibinitperiod}{Pradeep\bibnamedelima Kumar}{P\bibinitperiod\bibinitdelim K\bibinitperiod}{}{}{}{}}%
        {{hash=e846463df2a428a24a7d564a343c546d}{Ravindranath}{R\bibinitperiod}{Lenin}{L\bibinitperiod}{}{}{}{}}%
        {{hash=292e532460ad7ca6eef40ec16925bb0d}{Thekkath}{T\bibinitperiod}{Chandramohan\bibnamedelima a}{C\bibinitperiod\bibinitdelim a\bibinitperiod}{}{}{}{}}%
        {{hash=b8e2e9f67019f464cefe5db1c822ffd9}{Yu}{Y\bibinitperiod}{Yuan}{Y\bibinitperiod}{}{}{}{}}%
        {{hash=301544f6966296a28173742434744b6e}{Zhuang}{Z\bibinitperiod}{Li}{L\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{1fc335df3b1eb6669a8af139295905a6}
      \strng{fullhash}{80a605db79a106778ca4c4d6380252ad}
      \field{sortinit}{G}
      \field{sortinithash}{1c854ef9177a91bf894e66485bdbd3ed}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Managing data and computation is at the heart of datacenter computing. Manual management of data can lead to data loss, wasteful consumption of storage, and laborious bookkeeping. Lack of proper management of computation can result in lost opportunities to share common computations across multiple jobs or to compute results incrementally. Nectar is a system designed to address the aforementioned problems. It automates and unifies the management of data and computation within a datacenter. In Nectar, data and computation are treated interchangeably by associating data with its computation. Derived datasets, which are the results of computations, are uniquely identified by the programs that produce them, and together with their programs, are automatically managed by a datacenter wide caching service. Any derived dataset can be transparently regenerated by re-executing its program, and any computation can be transparently avoided by using previously cached results. This enables us to greatly improve datacenter management and resource utilization: obsolete or infrequently used derived datasets are automatically garbage collected, and shared common computations are computed only once and reused by others. This paper describes the design and implementation of Nectar, and reports on our evaluation of the system using analytic studies of logs from several production clusters and an actual deployment on a 240-node cluster.}
      \field{isbn}{9781931971799}
      \field{journaltitle}{Technology}
      \field{title}{{Nectar : Automatic Management of Data and Computation in Datacenters}}
      \field{year}{2010}
      \field{pages}{1\bibrangedash 8}
      \range{pages}{8}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Gunda et al. - 2010 - Nectar Automatic Management of Data and Computation in Datacenters.pdf:pdf
      \endverb
      \verb{url}
      \verb https://www.usenix.org/legacy/event/osdi10/tech/full%7B%5C_%7Dpapers/Gunda.pdf%20http://www.usenix.org/event/osdi10/tech/full%7B%5C_%7Dpapers/Gunda.pdf
      \endverb
    \endentry
    \entry{Gunther2002}{article}{}
      \name{author}{1}{}{%
        {{hash=9f5a775c9addeadf21a5022848da2334}{Gunther}{G\bibinitperiod}{NJ}{N\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{9f5a775c9addeadf21a5022848da2334}
      \strng{fullhash}{9f5a775c9addeadf21a5022848da2334}
      \field{sortinit}{G}
      \field{sortinithash}{1c854ef9177a91bf894e66485bdbd3ed}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{arXiv preprint cs/0210017}
      \field{title}{{A New Interpretation of Amdahl's Law and Geometric Scalability}}
      \field{year}{2002}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Gunther - 2002 - A New Interpretation of Amdahl's Law and Geometric Scalability.pdf:pdf
      \endverb
      \verb{url}
      \verb http://arxiv.org/abs/cs/0210017
      \endverb
    \endentry
    \entry{Gunther1993}{article}{}
      \name{author}{1}{}{%
        {{hash=9f5a775c9addeadf21a5022848da2334}{Gunther}{G\bibinitperiod}{NJ}{N\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{9f5a775c9addeadf21a5022848da2334}
      \strng{fullhash}{9f5a775c9addeadf21a5022848da2334}
      \field{sortinit}{G}
      \field{sortinithash}{1c854ef9177a91bf894e66485bdbd3ed}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{CMG-CONFERENCE-}
      \field{title}{{A simple capacity model of massively parallel transaction systems}}
      \field{year}{1993}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Gunther - 1993 - A simple capacity model of massively parallel transaction systems.pdf:pdf
      \endverb
      \verb{url}
      \verb http://www.perfdynamics.com/Papers/njgCMG93.pdf
      \endverb
    \endentry
    \entry{Gunther1996}{article}{}
      \name{author}{1}{}{%
        {{hash=9f5a775c9addeadf21a5022848da2334}{Gunther}{G\bibinitperiod}{NJ}{N\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{9f5a775c9addeadf21a5022848da2334}
      \strng{fullhash}{9f5a775c9addeadf21a5022848da2334}
      \field{sortinit}{G}
      \field{sortinithash}{1c854ef9177a91bf894e66485bdbd3ed}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{In other words}
      \field{title}{{Understanding the MP effect: Multiprocessing in pictures}}
      \field{year}{1996}
      \verb{url}
      \verb http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.95.511%7B%5C&%7Drep=rep1%7B%5C&%7Dtype=pdf
      \endverb
    \endentry
    \entry{Gustafson1988}{article}{}
      \name{author}{1}{}{%
        {{hash=a062dde97c525cc2a5b8a779e1e766ec}{Gustafson}{G\bibinitperiod}{JL}{J\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{a062dde97c525cc2a5b8a779e1e766ec}
      \strng{fullhash}{a062dde97c525cc2a5b8a779e1e766ec}
      \field{sortinit}{G}
      \field{sortinithash}{1c854ef9177a91bf894e66485bdbd3ed}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{Communications of the ACM}
      \field{title}{{Reevaluating Amdahl's law}}
      \field{year}{1988}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Gustafson - 1988 - Reevaluating Amdahl's law.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=42415
      \endverb
    \endentry
    \entry{Hackett2012}{article}{}
      \name{author}{2}{}{%
        {{hash=e830a628587ff055d9e13f5e12471424}{Hackett}{H\bibinitperiod}{B}{B\bibinitperiod}{}{}{}{}}%
        {{hash=5ec62d743a3bd0939cc1071164c54834}{Guo}{G\bibinitperiod}{S}{S\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{b6d97af1ff85b01e2d41e5f03541530f}
      \strng{fullhash}{b6d97af1ff85b01e2d41e5f03541530f}
      \field{sortinit}{H}
      \field{sortinithash}{82012198d5dfa657b8c4a168793268a6}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{ACM SIGPLAN Notices}
      \field{title}{{Fast and precise hybrid type inference for JavaScript}}
      \field{year}{2012}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Hackett, Guo - 2012 - Fast and precise hybrid type inference for JavaScript.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=2254094
      \endverb
    \endentry
    \entry{Haller2007}{article}{}
      \name{author}{2}{}{%
        {{hash=6987cf8ce0f10540abc8b54a10c06420}{Haller}{H\bibinitperiod}{Philipp}{P\bibinitperiod}{}{}{}{}}%
        {{hash=887f509975b0ec9ebba9dfae96d0c454}{Odersky}{O\bibinitperiod}{Martin}{M\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{e053857f999153cebab690e1bee8af90}
      \strng{fullhash}{e053857f999153cebab690e1bee8af90}
      \field{sortinit}{H}
      \field{sortinithash}{82012198d5dfa657b8c4a168793268a6}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{There is an impedance mismatch between message-passing concurrency and virtual machines, such as the JVM. VMs usually map their threads to heavyweight OS processes. Without a lightweight process abstraction, users are often forced to write parts of concurrent applications in an event-driven style which obscures control flow, and increases the burden on the programmer. In this paper we show how thread-based and event-based programming can be unified under a single actor abstraction. Using advanced abstraction mechanisms of the Scala programming language, we implemented our approach on unmodified JVMs. Our programming model integrates well with the threading model of the underlying VM.}
      \field{isbn}{9783540727934}
      \field{issn}{03029743}
      \field{journaltitle}{Coordination 2007, Lncs 4467}
      \field{title}{{Actors That Unify Threads and Events}}
      \field{year}{2007}
      \field{pages}{171\bibrangedash 190}
      \range{pages}{20}
      \verb{doi}
      \verb 10.1007/978-3-540-72794-1_10
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Haller, Odersky - 2007 - Actors That Unify Threads and Events.pdf:pdf
      \endverb
      \verb{url}
      \verb http://lamp.epfl.ch/%7B~%7Dphaller/doc/haller07coord.pdf
      \endverb
    \endentry
    \entry{Han2009}{article}{}
      \name{author}{7}{}{%
        {{hash=658634778122606d6de0ee5e0d5b7930}{Han}{H\bibinitperiod}{Biao}{B\bibinitperiod}{}{}{}{}}%
        {{hash=6e623603ffc555a8f0f6e4c2adf65530}{Luan}{L\bibinitperiod}{Zhongzhi}{Z\bibinitperiod}{}{}{}{}}%
        {{hash=8cd5ce04e8a4f1f2fe317aa690433089}{Zhu}{Z\bibinitperiod}{Danfeng}{D\bibinitperiod}{}{}{}{}}%
        {{hash=aa71c67e11b9d533c0b656fd17781caa}{Ren}{R\bibinitperiod}{Yinan}{Y\bibinitperiod}{}{}{}{}}%
        {{hash=b240c653612b8157a41dd4282347398a}{Chen}{C\bibinitperiod}{Ting}{T\bibinitperiod}{}{}{}{}}%
        {{hash=8b85f486a26bbd7e04c461bca30d61bd}{Wang}{W\bibinitperiod}{Yongjian}{Y\bibinitperiod}{}{}{}{}}%
        {{hash=0eeb65230eb09a3d44e1204f9834ba5e}{Wu}{W\bibinitperiod}{Zhongxin}{Z\bibinitperiod}{}{}{}{}}%
      }
      \list{language}{1}{%
        {English}%
      }
      \list{publisher}{1}{%
        {IEEE}%
      }
      \strng{namehash}{898b29621b348011f254beb61d6680bf}
      \strng{fullhash}{2e40c7ad877ba6fb6770e2f1775e8d0a}
      \field{sortinit}{H}
      \field{sortinithash}{82012198d5dfa657b8c4a168793268a6}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{We propose a new design for Master-Worker network computing systems, called the Master-Worker event driven architecture (MEDA). MEDA is an extension of staged event driven architecture and designed for the goal to meet the dynamic demand of Master-Worker model network computing systems, with support for high concurrency, adaptive resources management and modular construction. In MEDA, applications consist of a network of event-driven stages connected by queues. MEDA makes use of a set of dynamic control mechanisms for automatic tuning and load conditioning. Queuing theory is used for thread management mechanism. Application field extends from stand-alone environment to the wide area network environment through the introduction of network queue. Delay event queue realizes the balance of performance and resource consumption. Priority queue expands the availability of job scheduling strategy and improves system efficiency. From experiments of Drug Discovery Grid, these results show that MEDA systems exhibit higher performance, better reliability than Master-Worker network computing system developed using traditional design.}
      \field{isbn}{9781424452187}
      \field{journaltitle}{CyberC 2009 - International Conference on Cyber-Enabled Distributed Computing and Knowledge Discovery}
      \field{month}{10}
      \field{number}{i}
      \field{title}{{An improved staged event driven architecture for master-worker network computing}}
      \field{year}{2009}
      \field{pages}{184\bibrangedash 190}
      \range{pages}{7}
      \verb{doi}
      \verb 10.1109/CYBERC.2009.5342202
      \endverb
      \verb{url}
      \verb http://ieeexplore.ieee.org/articleDetails.jsp?arnumber=5342202
      \endverb
      \keyw{Drug Discovery Grid,Dynamic resource control,Master-worker paradigm,Staged event driven architecture}
    \endentry
    \entry{Hansen1978a}{article}{}
      \name{author}{2}{}{%
        {{hash=a7a23c0a54c27527c337486cc9d0d2b2}{Hansen}{H\bibinitperiod}{P.B.}{P\bibinitperiod}{}{}{}{}}%
        {{hash=88723a840cdfe5e7b0ff4f35f0fdf36d}{Staunstrup}{S\bibinitperiod}{J.}{J\bibinitperiod}{}{}{}{}}%
      }
      \list{language}{1}{%
        {English}%
      }
      \list{publisher}{1}{%
        {IEEE}%
      }
      \strng{namehash}{21ed6620a49b34f8e998f03a503dc14a}
      \strng{fullhash}{21ed6620a49b34f8e998f03a503dc14a}
      \field{sortinit}{H}
      \field{sortinithash}{82012198d5dfa657b8c4a168793268a6}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{issn}{0098-5589}
      \field{journaltitle}{IEEE Transactions on Software Engineering}
      \field{month}{09}
      \field{number}{5}
      \field{title}{{Specification and Implementation of Mutual Exclusion}}
      \field{volume}{SE-4}
      \field{year}{1978}
      \field{pages}{365\bibrangedash 370}
      \range{pages}{6}
      \verb{doi}
      \verb 10.1109/TSE.1978.233856
      \endverb
      \verb{url}
      \verb http://ieeexplore.ieee.org/articleDetails.jsp?arnumber=1702551
      \endverb
      \keyw{Computer science,Concurrent programs,Delay,Programming profession,Specification languages,Sufficient conditions,guarded regions,mutual exclusion,program implementation,program specification,program verification,transition commands}
    \endentry
    \entry{Harris2010}{article}{}
      \name{author}{3}{}{%
        {{hash=0074fd9f9da537e51b88596b5f635943}{Harris}{H\bibinitperiod}{Tim}{T\bibinitperiod}{}{}{}{}}%
        {{hash=167706443b70114aa46ae80f8c6254a1}{Larus}{L\bibinitperiod}{James}{J\bibinitperiod}{}{}{}{}}%
        {{hash=8b714acb6f9f7476401b4004c02b0105}{Rajwar}{R\bibinitperiod}{Ravi}{R\bibinitperiod}{}{}{}{}}%
      }
      \list{language}{1}{%
        {en}%
      }
      \list{publisher}{1}{%
        {Morgan {\&} Claypool Publishers}%
      }
      \strng{namehash}{2532b428c223f1452892ac3f55ccb12f}
      \strng{fullhash}{2532b428c223f1452892ac3f55ccb12f}
      \field{sortinit}{H}
      \field{sortinithash}{82012198d5dfa657b8c4a168793268a6}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Abstract The advent of multicore processors has renewed interest in the idea of incorporating transactions into the programming model used to write parallel programs. This approach, known as transactional memory, offers an alternative, and hopefully better, way to coordinate concurrent threads. The ACI (atomicity, consistency, isolation) properties of transactions provide a foundation to ensure that concurrent reads and writes of shared data do not produce inconsistent or incorrect results. At a higher level, a computation wrapped in a transaction executes atomically - either it completes successfully and commits its result in its entirety or it aborts. In addition, isolation ensures the transaction produces the same result as if no other transactions were executing concurrently. Although transactions are not a parallel programming panacea, they shift much of the burden of synchronizing and coordinating parallel computations from a programmer to a compiler, to a language runtime system, or to hardware. Th...}
      \field{issn}{1935-3235}
      \field{journaltitle}{Synthesis Lectures on Computer Architecture}
      \field{month}{12}
      \field{number}{1}
      \field{title}{{Transactional Memory, 2nd edition}}
      \field{volume}{5}
      \field{year}{2010}
      \field{pages}{1\bibrangedash 263}
      \range{pages}{263}
      \verb{doi}
      \verb 10.2200/S00272ED1V01Y201006CAC011
      \endverb
      \verb{url}
      \verb http://www.morganclaypool.com/doi/abs/10.2200/s00272ed1v01y201006cac011
      \endverb
      \keyw{cache coherence,compilers,computer architecture,computer hardware,concurrent programming,lock-free data structures,nonblocking algorithms,parallel programming,programming languages,synchronization,transactional memory}
    \endentry
    \entry{Harrison1989}{article}{}
      \name{author}{1}{}{%
        {{hash=9a689ee448ceaa8d664d34fce742d612}{Harrison}{H\bibinitperiod}{Williams\bibnamedelima Ludwell}{W\bibinitperiod\bibinitdelim L\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{9a689ee448ceaa8d664d34fce742d612}
      \strng{fullhash}{9a689ee448ceaa8d664d34fce742d612}
      \field{sortinit}{H}
      \field{sortinithash}{82012198d5dfa657b8c4a168793268a6}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{issn}{0892-4635}
      \field{journaltitle}{Lisp and Symbolic Computation}
      \field{month}{10}
      \field{number}{3-4}
      \field{title}{{The interprocedural analysis and automatic parallelization of Scheme programs}}
      \field{volume}{2}
      \field{year}{1989}
      \field{pages}{179\bibrangedash 396}
      \range{pages}{218}
      \verb{doi}
      \verb 10.1007/BF01808954
      \endverb
      \verb{url}
      \verb http://link.springer.com/10.1007/BF01808954
      \endverb
    \endentry
    \entry{Haynes1984}{article}{}
      \name{author}{3}{}{%
        {{hash=ffc4c418c8ebef1930bd3dfd54b6b0f2}{Haynes}{H\bibinitperiod}{CT}{C\bibinitperiod}{}{}{}{}}%
        {{hash=6c43e73dd83bb931429c9b4e02aa7b0c}{Friedman}{F\bibinitperiod}{DP}{D\bibinitperiod}{}{}{}{}}%
        {{hash=ff4beedb814e2a2edd70d0e6c7e74db6}{Wand}{W\bibinitperiod}{M}{M\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{6eb065f718f487c4ff3252d8494004c2}
      \strng{fullhash}{6eb065f718f487c4ff3252d8494004c2}
      \field{sortinit}{H}
      \field{sortinithash}{82012198d5dfa657b8c4a168793268a6}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{The power of first class continuations is demonstrated by implementing a variety of coroutine mechanisms using only continuations and functional abstraction. The importance of general abstraction mechanisms such as continuations is discussed.}
      \field{isbn}{0897911423}
      \field{journaltitle}{LFP '84 Proceedings of the 1984 ACM Symposium on LISP and functional programming}
      \field{title}{{Continuations and coroutines}}
      \field{year}{1984}
      \field{pages}{293\bibrangedash 298}
      \range{pages}{6}
      \verb{doi}
      \verb 10.1145/800055.802046
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Haynes, Friedman, Wand - 1984 - Continuations and coroutines.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=802046
      \endverb
    \endentry
    \entry{He2010}{inproceedings}{}
      \name{author}{5}{}{%
        {{hash=2545e5b3aab19a3552aa64de24f1a42c}{He}{H\bibinitperiod}{B}{B\bibinitperiod}{}{}{}{}}%
        {{hash=7148de383baa80de3a6b13dd22492adc}{Yang}{Y\bibinitperiod}{M}{M\bibinitperiod}{}{}{}{}}%
        {{hash=d884429739dbbf05c81641e87893b8f0}{Guo}{G\bibinitperiod}{Z}{Z\bibinitperiod}{}{}{}{}}%
        {{hash=ce2628fb5b7c5a6e9483a40e04abbb59}{Chen}{C\bibinitperiod}{R}{R\bibinitperiod}{}{}{}{}}%
        {{hash=6e9c95744792f348f1b4741497474554}{Su}{S\bibinitperiod}{B}{B\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{656129cd67d0f62698f9a1e1fd2dda21}
      \strng{fullhash}{7fc6cb31abd570afbd7ca13434c97818}
      \field{sortinit}{H}
      \field{sortinithash}{82012198d5dfa657b8c4a168793268a6}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{Proceedings of the 1st ACM symposium on Cloud computing}
      \field{title}{{Comet: batched stream processing for data intensive distributed computing}}
      \field{year}{2010}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/He et al. - 2010 - Comet batched stream processing for data intensive distributed computing.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=1807139
      \endverb
    \endentry
    \entry{Hendler2004}{inproceedings}{}
      \name{author}{3}{}{%
        {{hash=4f555919bc2bdb7cc9570492bcd8d0a6}{Hendler}{H\bibinitperiod}{Danny}{D\bibinitperiod}{}{}{}{}}%
        {{hash=3e2aee6574e3dcbdbc582166218008cb}{Shavit}{S\bibinitperiod}{Nir}{N\bibinitperiod}{}{}{}{}}%
        {{hash=fae9b12612d0e8bec7e7ea16805d0e19}{Yerushalmi}{Y\bibinitperiod}{Lena}{L\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {New York, New York, USA}%
      }
      \list{publisher}{1}{%
        {ACM Press}%
      }
      \strng{namehash}{a12615794d11f03097528f3e35e29e70}
      \strng{fullhash}{a12615794d11f03097528f3e35e29e70}
      \field{sortinit}{H}
      \field{sortinithash}{82012198d5dfa657b8c4a168793268a6}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{Proceedings of the sixteenth annual ACM symposium on Parallelism in algorithms and architectures - SPAA '04}
      \field{isbn}{1581138407}
      \field{month}{06}
      \field{title}{{A scalable lock-free stack algorithm}}
      \field{year}{2004}
      \field{pages}{206}
      \range{pages}{1}
      \verb{doi}
      \verb 10.1145/1007912.1007944
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=1007912.1007944
      \endverb
    \endentry
    \entry{Herlihy1990}{article}{}
      \name{author}{1}{}{%
        {{hash=87f13e15abb7f2f98240ad517eebf41c}{Herlihy}{H\bibinitperiod}{M.}{M\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {ACM}%
      }
      \strng{namehash}{87f13e15abb7f2f98240ad517eebf41c}
      \strng{fullhash}{87f13e15abb7f2f98240ad517eebf41c}
      \field{sortinit}{H}
      \field{sortinithash}{82012198d5dfa657b8c4a168793268a6}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{isbn}{0897913507}
      \field{issn}{03621340}
      \field{journaltitle}{ACM SIGPLAN Notices}
      \field{month}{03}
      \field{number}{3}
      \field{title}{{A methodology for implementing highly concurrent data structures}}
      \field{volume}{25}
      \field{year}{1990}
      \field{pages}{197\bibrangedash 206}
      \range{pages}{10}
      \verb{doi}
      \verb 10.1145/99164.99185
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Herlihy - 1990 - A methodology for implementing highly concurrent data structures.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=99164.99185
      \endverb
    \endentry
    \entry{Herlihy1991}{article}{}
      \name{author}{1}{}{%
        {{hash=dec3948f0497f5447bae5c2365b87e8f}{Herlihy}{H\bibinitperiod}{Maurice}{M\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {ACM}%
      }
      \strng{namehash}{dec3948f0497f5447bae5c2365b87e8f}
      \strng{fullhash}{dec3948f0497f5447bae5c2365b87e8f}
      \field{sortinit}{H}
      \field{sortinithash}{82012198d5dfa657b8c4a168793268a6}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{A wait-free implementation of a concurrent data object is one that guarantees that any process can complete any operation in a finite number of steps, regardless of the execution speeds of the other processes. The problem of constructing a wait-free implementation of one data object from another lies at the heart of much recent work in concurrent algorithms, concurrent data structures, and multiprocessor architectures. First, we introduce a simple and general technique, based on reduction to a concensus protocol, for proving statements of the form, there is no wait-free implementation of X by Y. We derive a hierarchy of objects such that no object at one level has a wait-free implementation in terms of objects at lower levels. In particular, we show that atomic read/write registers, which have been the focus of much recent attention, are at the bottom of the hierarchy: thay cannot be used to construct wait-free implementations of many simple and familiar data types. Moreover, classical synchronization primitives such astest{\&}set and fetch{\&}add, while more powerful than read and write, are also computationally weak, as are the standard message-passing primitives. Second, nevertheless, we show that there do exist simple universal objects from which one can construct a wait-free implementation of any sequential object.}
      \field{isbn}{9780123705914}
      \field{issn}{01640925}
      \field{journaltitle}{ACM Transactions on Programming Languages and Systems}
      \field{month}{01}
      \field{number}{1}
      \field{title}{{Wait-free synchronization}}
      \field{volume}{13}
      \field{year}{1991}
      \field{pages}{124\bibrangedash 149}
      \range{pages}{26}
      \verb{doi}
      \verb 10.1145/114005.102808
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Herlihy - 1991 - Wait-free synchronization.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=114005.102808%20http://cs.brown.edu/%7B~%7Dmph/Herlihy91/p124-herlihy.pdf
      \endverb
      \keyw{linearization,wait-free synchronization}
    \endentry
    \entry{Herlihy1988}{inproceedings}{}
      \name{author}{1}{}{%
        {{hash=b15d5213a3b8f5d1a3171f43751d30ad}{Herlihy}{H\bibinitperiod}{Maurice\bibnamedelima P.}{M\bibinitperiod\bibinitdelim P\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {New York, New York, USA}%
      }
      \list{publisher}{1}{%
        {ACM Press}%
      }
      \strng{namehash}{b15d5213a3b8f5d1a3171f43751d30ad}
      \strng{fullhash}{b15d5213a3b8f5d1a3171f43751d30ad}
      \field{sortinit}{H}
      \field{sortinithash}{82012198d5dfa657b8c4a168793268a6}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{Proceedings of the seventh annual ACM Symposium on Principles of distributed computing - PODC '88}
      \field{isbn}{0897912772}
      \field{month}{01}
      \field{title}{{Impossibility and universality results for wait-free synchronization}}
      \field{year}{1988}
      \field{pages}{276\bibrangedash 290}
      \range{pages}{15}
      \verb{doi}
      \verb 10.1145/62546.62593
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Herlihy - 1988 - Impossibility and universality results for wait-free synchronization.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=62546.62593
      \endverb
    \endentry
    \entry{Hewitt1973a}{article}{}
      \name{author}{3}{}{%
        {{hash=7b9d8757c014f7576eb9898e9ce94834}{Hewitt}{H\bibinitperiod}{C}{C\bibinitperiod}{}{}{}{}}%
        {{hash=59a2e2ac6a63d52b65dc65f92db08f13}{Bishop}{B\bibinitperiod}{P}{P\bibinitperiod}{}{}{}{}}%
        {{hash=b5161278a7a3ff1573d8f4d293883b73}{Steiger}{S\bibinitperiod}{R}{R\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{53f8d58c97c8b5d1e3c7632f26195fa7}
      \strng{fullhash}{53f8d58c97c8b5d1e3c7632f26195fa7}
      \field{sortinit}{H}
      \field{sortinithash}{82012198d5dfa657b8c4a168793268a6}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{Proceedings of the 3rd international joint conference on Artificial intelligence}
      \field{title}{{A universal modular actor formalism for artificial intelligence}}
      \field{year}{1973}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Hewitt, Bishop, Steiger - 1973 - A universal modular actor formalism for artificial intelligence.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=1624804
      \endverb
    \endentry
    \entry{Hewitt1977}{article}{}
      \name{author}{1}{}{%
        {{hash=1c0e112479c525f05924aba5fa22ac9d}{Hewitt}{H\bibinitperiod}{Carl}{C\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{1c0e112479c525f05924aba5fa22ac9d}
      \strng{fullhash}{1c0e112479c525f05924aba5fa22ac9d}
      \field{sortinit}{H}
      \field{sortinithash}{82012198d5dfa657b8c4a168793268a6}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{Artificial intelligence}
      \field{title}{{Viewing control structures as patterns of passing messages}}
      \field{year}{1977}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Hewitt - 1977 - Viewing control structures as patterns of passing messages.pdf:pdf
      \endverb
      \verb{url}
      \verb http://www.sciencedirect.com/science/article/pii/0004370277900339
      \endverb
    \endentry
    \entry{Hewitt1977a}{article}{}
      \name{author}{2}{}{%
        {{hash=1c0e112479c525f05924aba5fa22ac9d}{Hewitt}{H\bibinitperiod}{Carl}{C\bibinitperiod}{}{}{}{}}%
        {{hash=03944cb864140fd0888c70eec563a562}{Baker}{B\bibinitperiod}{Jr}{J\bibinitperiod}{}{}{Henry}{H\bibinitperiod}}%
      }
      \strng{namehash}{1c5bdf4e6fcc5221f41eeafd7c8e6de9}
      \strng{fullhash}{1c5bdf4e6fcc5221f41eeafd7c8e6de9}
      \field{sortinit}{H}
      \field{sortinithash}{82012198d5dfa657b8c4a168793268a6}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{month}{12}
      \field{title}{{Actors and Continuous Functionals,}}
      \field{year}{1977}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Hewitt, Baker - 1977 - Actors and Continuous Functionals,(2).pdf:pdf
      \endverb
      \verb{url}
      \verb http://oai.dtic.mil/oai/oai?verb=getRecord%7B%5C&%7DmetadataPrefix=html%7B%5C&%7Didentifier=ADA052266
      \endverb
      \keyw{*COMPUTER COMMUNICATIONS,*PARALLEL PROCESSING,*SEQUENCES,GRAPHS,INTEGRATED CIRCUITS,LOGIC CIRCUITS,PROGRAMMING LANGUAGES}
    \endentry
    \entry{Hilbert2011}{article}{}
      \name{author}{2}{}{%
        {{hash=d6d70547b5fd0405774d5bedbf82bcd8}{Hilbert}{H\bibinitperiod}{Martin}{M\bibinitperiod}{}{}{}{}}%
        {{hash=27e7c9db1a4437456f07c10c0a43b490}{López}{L\bibinitperiod}{Priscila}{P\bibinitperiod}{}{}{}{}}%
      }
      \list{institution}{1}{%
        {Annenberg School of Communication, University of Southern California, Los Angeles, CA 90089, USA. mhilbert@usc.edu}%
      }
      \list{publisher}{1}{%
        {American Association for the Advancement of Science}%
      }
      \strng{namehash}{cefa2ffe0fe9ee61a7dff47409c5fa68}
      \strng{fullhash}{cefa2ffe0fe9ee61a7dff47409c5fa68}
      \field{sortinit}{H}
      \field{sortinithash}{82012198d5dfa657b8c4a168793268a6}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{We estimated the world's technological capacity to store, communicate, and compute information, tracking 60 analog and digital technologies during the period from 1986 to 2007. In 2007, humankind was able to store 2.9 × 10(20) optimally compressed bytes, communicate almost 2 × 10(21) bytes, and carry out 6.4 × 10(18) instructions per second on general-purpose computers. General-purpose computing capacity grew at an annual rate of 58{\%}. The world's capacity for bidirectional telecommunication grew at 28{\%} per year, closely followed by the increase in globally stored information (23{\%}). Humankind's capacity for unidirectional information diffusion through broadcasting channels has experienced comparatively modest annual growth (6{\%}). Telecommunication has been dominated by digital technologies since 1990 (99.9{\%} in digital format in 2007), and the majority of our technological memory has been in digital format since the early 2000s (94{\%} digital in 2007).}
      \field{isbn}{1095-9203}
      \field{issn}{0036-8075}
      \field{journaltitle}{Science (New York, N.Y.)}
      \field{month}{04}
      \field{number}{6025}
      \field{title}{{The world's technological capacity to store, communicate, and compute information.}}
      \field{volume}{332}
      \field{year}{2011}
      \field{pages}{60\bibrangedash 65}
      \range{pages}{6}
      \verb{doi}
      \verb 10.1126/science.1200970
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Hilbert, López - 2011 - The world's technological capacity to store, communicate, and compute information(2).pdf:pdf
      \endverb
      \verb{url}
      \verb http://www.ncbi.nlm.nih.gov/pubmed/21310967%20http://www.sciencemag.org/content/332/6025/60.short
      \endverb
    \endentry
    \entry{Hoare1978}{article}{}
      \name{author}{1}{}{%
        {{hash=28fcf7e7d2cd56febbad02b0c8dd0354}{Hoare}{H\bibinitperiod}{C.\bibnamedelimi A.\bibnamedelimi R.}{C\bibinitperiod\bibinitdelim A\bibinitperiod\bibinitdelim R\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {ACM}%
      }
      \strng{namehash}{28fcf7e7d2cd56febbad02b0c8dd0354}
      \strng{fullhash}{28fcf7e7d2cd56febbad02b0c8dd0354}
      \field{sortinit}{H}
      \field{sortinithash}{82012198d5dfa657b8c4a168793268a6}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{issn}{00010782}
      \field{journaltitle}{Communications of the ACM}
      \field{month}{08}
      \field{number}{8}
      \field{title}{{Communicating sequential processes}}
      \field{volume}{21}
      \field{year}{1978}
      \field{pages}{666\bibrangedash 677}
      \range{pages}{12}
      \verb{doi}
      \verb 10.1145/359576.359585
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Hoare - 1978 - Communicating sequential processes.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=359576.359585
      \endverb
      \keyw{classes,concurrency,conditional critical regions,coroutines,data representations,guarded commands,input,iterative arrays,monitors,multiple entries,multiple exits,nondeterminacy,output,parallel programming,procedures,program structures,programming,programming languages,programming primitives,recursion}
    \endentry
    \entry{Hoare1974}{article}{}
      \name{author}{1}{}{%
        {{hash=28fcf7e7d2cd56febbad02b0c8dd0354}{Hoare}{H\bibinitperiod}{C.\bibnamedelimi A.\bibnamedelimi R.}{C\bibinitperiod\bibinitdelim A\bibinitperiod\bibinitdelim R\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {ACM}%
      }
      \strng{namehash}{28fcf7e7d2cd56febbad02b0c8dd0354}
      \strng{fullhash}{28fcf7e7d2cd56febbad02b0c8dd0354}
      \field{sortinit}{H}
      \field{sortinithash}{82012198d5dfa657b8c4a168793268a6}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{issn}{00010782}
      \field{journaltitle}{Communications of the ACM}
      \field{month}{10}
      \field{number}{10}
      \field{title}{{Monitors: an operating system structuring concept}}
      \field{volume}{17}
      \field{year}{1974}
      \field{pages}{549\bibrangedash 557}
      \range{pages}{9}
      \verb{doi}
      \verb 10.1145/355620.361161
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Hoare - 1974 - Monitors an operating system structuring concept.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=355620.361161
      \endverb
      \keyw{monitors,mutual exclusion,operating systems,scheduling,structured multiprogramming,synchronization,system implementation languages}
    \endentry
    \entry{Hornung2014}{article}{}
      \name{author}{2}{}{%
        {{hash=7c69fec4a4f634c1644a74bdd96529fd}{Hornung}{H\bibinitperiod}{R\bibnamedelima D}{R\bibinitperiod\bibinitdelim D\bibinitperiod}{}{}{}{}}%
        {{hash=0ea562c7e8c3905be1db5115de5ed5f6}{Keasler}{K\bibinitperiod}{J\bibnamedelima A}{J\bibinitperiod\bibinitdelim A\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{b186e7a993bb30a71ed02b1416590ae6}
      \strng{fullhash}{b186e7a993bb30a71ed02b1416590ae6}
      \field{sortinit}{H}
      \field{sortinithash}{82012198d5dfa657b8c4a168793268a6}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{title}{{The RAJA Portability Layer : Overview and Status}}
      \field{year}{2014}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Hornung, Keasler - 2014 - The RAJA Portability Layer Overview and Status.pdf:pdf
      \endverb
      \verb{url}
      \verb https://e-reports-ext.llnl.gov/pdf/782261.pdf
      \endverb
    \endentry
    \entry{Huang2008}{incollection}{}
      \name{author}{4}{}{%
        {{hash=556456208975e54ae3956ebdf993386e}{Huang}{H\bibinitperiod}{Shan}{S\bibinitperiod}{}{}{}{}}%
        {{hash=cbfd00f8b589e2e880ccc9a05005b501}{Hormati}{H\bibinitperiod}{Amir}{A\bibinitperiod}{}{}{}{}}%
        {{hash=14bc4830d4824da3ac9573b68ac1666c}{Bacon}{B\bibinitperiod}{David}{D\bibinitperiod}{}{}{}{}}%
        {{hash=d162627d3bf87f2bc8f977376dfa7d0b}{Rabbah}{R\bibinitperiod}{Rodric}{R\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{ac0c83cd7cacb0053d4ce8742e18d900}
      \strng{fullhash}{a953eb99d8e23c83823de9e0f25ef520}
      \field{sortinit}{H}
      \field{sortinithash}{82012198d5dfa657b8c4a168793268a6}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{The paradigm shift in processor design from monolithic processors to multicore has renewed interest in programming models that facilitate parallelism. While multicores are here today, the future is likely to witness architectures that use reconfigurable fabrics (FPGAs) as coprocessors. FPGAs provide an unmatched ability to tailor their circuitry per application, leading to better performance at lower power. Unfortunately, the skills required to program FPGAs are beyond the expertise of skilled software programmers. This paper shows how to bridge the gap between programming software vs. hardware. We introduce Lime, a new Object-Oriented language that can be compiled for the JVM or into a synthesizable hardware description language. Lime extends Java with features that provide a way to carry OO concepts into efficient hardware. We detail an end-to-end system from the language down to hardware synthesis and demonstrate a Lime program running on both a conventional processor and in an FPGA.}
      \field{booktitle}{ECOOP 2008 – Object-Oriented Programming}
      \field{isbn}{3540705910}
      \field{issn}{03029743}
      \field{title}{{Liquid Metal: Object-Oriented Programming Across the Hardware/Software Boundary}}
      \field{year}{2008}
      \field{pages}{76\bibrangedash 103}
      \range{pages}{28}
      \verb{doi}
      \verb 10.1007/978-3-540-70592-5_5
      \endverb
      \verb{url}
      \verb http://freeflygeek.com/docs/ssh-ecoop08.pdf%20http://www.springerlink.com/content/d7551q3k7078g43v
      \endverb
    \endentry
    \entry{Huang2004}{article}{}
      \name{author}{4}{}{%
        {{hash=2f163f40a1a3eb0aa5e376b2070e0c49}{Huang}{H\bibinitperiod}{YW}{Y\bibinitperiod}{}{}{}{}}%
        {{hash=8c0c1a40af04f944681595127a82b7a7}{Yu}{Y\bibinitperiod}{F}{F\bibinitperiod}{}{}{}{}}%
        {{hash=0d18cce0d11225238b41512e466f2c0d}{Hang}{H\bibinitperiod}{C}{C\bibinitperiod}{}{}{}{}}%
        {{hash=fa0b8b16d2d080ce20e23c0a64ed12a5}{Tsai}{T\bibinitperiod}{CH}{C\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{c71152a2bb78c1f7dd3e567b6a94c6a6}
      \strng{fullhash}{2b0d7094878139cd1130ecc1b67247db}
      \field{sortinit}{H}
      \field{sortinithash}{82012198d5dfa657b8c4a168793268a6}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{Proceedings of the 13th international conference on World Wide Web.}
      \field{title}{{Securing web application code by static analysis and runtime protection}}
      \field{year}{2004}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Huang et al. - 2004 - Securing web application code by static analysis and runtime protection.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=988679
      \endverb
    \endentry
    \entry{Hudak1992}{article}{}
      \name{author}{14}{}{%
        {{hash=ebfbf9d5ed6e5a1698b8fe9fb2b322a4}{Hudak}{H\bibinitperiod}{Paul}{P\bibinitperiod}{}{}{}{}}%
        {{hash=e20dc5b64012d066fd1ce3a6178467a6}{Johnsson}{J\bibinitperiod}{Thomas}{T\bibinitperiod}{}{}{}{}}%
        {{hash=058cffa682a0ea9d0966f4590406de0f}{Kieburtz}{K\bibinitperiod}{Dick}{D\bibinitperiod}{}{}{}{}}%
        {{hash=cc02630b90659a11735d3481b4a807dc}{Nikhil}{N\bibinitperiod}{Rishiyur}{R\bibinitperiod}{}{}{}{}}%
        {{hash=375b1fcc8679aea1251ff50d4b7b0fd4}{Partain}{P\bibinitperiod}{Will}{W\bibinitperiod}{}{}{}{}}%
        {{hash=7c824b8e6319dcc90d543c77a92e59a2}{Peterson}{P\bibinitperiod}{John}{J\bibinitperiod}{}{}{}{}}%
        {{hash=047f263026066680b5b1db98a808114f}{{Peyton\bibnamedelimb Jones}}{P\bibinitperiod}{Simon}{S\bibinitperiod}{}{}{}{}}%
        {{hash=b4d861345944ddeeaf658a11c2f0f6a7}{Wadler}{W\bibinitperiod}{Philip}{P\bibinitperiod}{}{}{}{}}%
        {{hash=1c3fec1d1cfbc2dc898a002f088ed3ea}{Boutel}{B\bibinitperiod}{Brian}{B\bibinitperiod}{}{}{}{}}%
        {{hash=8f9a7c4e1edb1cc911f0ff4f1d7187d8}{Fairbairn}{F\bibinitperiod}{Jon}{J\bibinitperiod}{}{}{}{}}%
        {{hash=189b697c5f4226b9a3e2ce2c3ae096b0}{Fasel}{F\bibinitperiod}{Joseph}{J\bibinitperiod}{}{}{}{}}%
        {{hash=afebebefd82ca0c2b90cd6f3550fe653}{Guzman}{G\bibinitperiod}{Maria\bibnamedelima M.}{M\bibinitperiod\bibinitdelim M\bibinitperiod}{}{}{}{}}%
        {{hash=d194aa809f2ab0de6f86bff4c235be09}{Hammond}{H\bibinitperiod}{Kevin}{K\bibinitperiod}{}{}{}{}}%
        {{hash=05db43db1a50c29c0eca01fd35ec8758}{Hughes}{H\bibinitperiod}{John}{J\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {ACM}%
      }
      \strng{namehash}{d4dbc20eff1c622852ffc9c2dd0fe6c5}
      \strng{fullhash}{0e217b3badebdcf45bf4704e58ad5ace}
      \field{sortinit}{H}
      \field{sortinithash}{82012198d5dfa657b8c4a168793268a6}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{issn}{03621340}
      \field{journaltitle}{ACM SIGPLAN Notices}
      \field{month}{05}
      \field{number}{5}
      \field{title}{{Report on the programming language Haskell}}
      \field{volume}{27}
      \field{year}{1992}
      \field{pages}{1\bibrangedash 164}
      \range{pages}{164}
      \verb{doi}
      \verb 10.1145/130697.130699
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=130697.130699
      \endverb
      \keyw{Haskell}
    \endentry
    \entry{Hughes1989}{article}{}
      \name{author}{1}{}{%
        {{hash=05db43db1a50c29c0eca01fd35ec8758}{Hughes}{H\bibinitperiod}{John}{J\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{05db43db1a50c29c0eca01fd35ec8758}
      \strng{fullhash}{05db43db1a50c29c0eca01fd35ec8758}
      \field{sortinit}{H}
      \field{sortinithash}{82012198d5dfa657b8c4a168793268a6}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{As software becomes more and more complex, it is more and more important to structure it well. Well-structured software is easy to write, easy to debug, and provides a collection of modules that can be re-used to reduce future programming costs. Conventional languages place con- ceptual limits on the way problems can be modularised. Functional lan- guages push those limits back. In this paper we show that two features of functional languages in particular, higher-order functions and lazy eval- uation, can contribute greatly to modularity. As examples, we manipu- late lists and trees, program several numerical algorithms, and implement the alpha-beta heuristic (an algorithm from Artificial Intelligence used in game-playing programs). Since modularity is the key to successful pro- gramming, functional languages are vitally important to the real world.}
      \field{isbn}{0201172364}
      \field{issn}{0010-4620}
      \field{journaltitle}{The computer journal}
      \field{number}{April 1989}
      \field{title}{{Why functional programming matters}}
      \field{volume}{32}
      \field{year}{1989}
      \field{pages}{1\bibrangedash 23}
      \range{pages}{23}
      \verb{doi}
      \verb 10.1093/comjnl/32.2.98
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Hughes - 1989 - Why functional programming matters.pdf:pdf
      \endverb
      \verb{url}
      \verb https://www.cs.kent.ac.uk/people/staff/dat/miranda/whyfp90.pdf%20http://comjnl.oxfordjournals.org/content/32/2/98.short
      \endverb
    \endentry
    \entry{Hursch1995}{report}{}
      \name{author}{2}{}{%
        {{hash=9b9b9f517b80be4018f2aceea20361a0}{Hürsch}{H\bibinitperiod}{Walter}{W\bibinitperiod}{}{}{}{}}%
        {{hash=4db68228876e4ae52d675e3f4ed2d83c}{Lopes}{L\bibinitperiod}{Cristina\bibnamedelima Videira}{C\bibinitperiod\bibinitdelim V\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{b71a7c14700ebf3a6441640de9963c7c}
      \strng{fullhash}{b71a7c14700ebf3a6441640de9963c7c}
      \field{sortinit}{H}
      \field{sortinithash}{82012198d5dfa657b8c4a168793268a6}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{This paper identifies and analyzes the emergence of a new paradigm$\backslash$nin software engineering, called 'separation of concerns, which tries$\backslash$nto formally separate the basic algorithm from special purpose concerns$\backslash$nsuch as synchronization, real-time constraints, and location control.$\backslash$nThis separation allows for the locality of different kinds of information$\backslash$nin the programs, making them easier to write, understand, and modify.$\backslash$nWe identify the major concerns existing in today's software applications,$\backslash$nand analyze recent proposals in the literature that address single$\backslash$nconcerns. Furthermore, we study the commonalities of these proposals$\backslash$nand discuss how they can be used to achieve separation of concerns$\backslash$nin general. Finally, we address the problem of composition of several$\backslash$nseparated concerns.}
      \field{number}{NU-CCS-95-03}
      \field{title}{{Separation of Concerns}}
      \field{type}{techreport}
      \field{year}{1995}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Hürsch, Lopes - 1995 - Separation of Concerns.pdf:pdf
      \endverb
      \verb{url}
      \verb http://218.15.41.101:8081/BOOKS%7B%%7D5C026%7B%%7D5C21%7B%%7D5CHXYWPJH227696.pdf
      \endverb
    \endentry
    \entry{Isard2007}{article}{}
      \name{author}{5}{}{%
        {{hash=3b62e7eedeec9f7a7f7f3c3ec88637f1}{Isard}{I\bibinitperiod}{Michael}{M\bibinitperiod}{}{}{}{}}%
        {{hash=8836a39dd4362973525947badc96d6d0}{Budiu}{B\bibinitperiod}{Mihai}{M\bibinitperiod}{}{}{}{}}%
        {{hash=b8e2e9f67019f464cefe5db1c822ffd9}{Yu}{Y\bibinitperiod}{Yuan}{Y\bibinitperiod}{}{}{}{}}%
        {{hash=ba427b37439f250712c24c411d8167a5}{Birrell}{B\bibinitperiod}{Andrew}{A\bibinitperiod}{}{}{}{}}%
        {{hash=d8a311200408fb252b9cb023defcd08e}{Fetterly}{F\bibinitperiod}{Dennis}{D\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{1ac02ef96c14067b155b46e7f27f9bea}
      \strng{fullhash}{963be2900b776beceec4b4bd46ef788d}
      \field{sortinit}{I}
      \field{sortinithash}{25e99d37ba90f7c4fb20baf4e310faf3}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Dryad is a general-purpose distributed execution engine for coarse-grain data-parallel applications. A Dryad applica- tion combines computational “vertices” with communica- tion “channels” to form a dataflow graph. Dryad runs the application by executing the vertices of this graph on a set of available computers, communicating as appropriate through files, TCP pipes, and shared-memory FIFOs. The vertices provided by the application developer are quite simple and are usually written as sequential programs with no thread creation or locking. Concurrency arises from Dryad scheduling vertices to run simultaneously on multi- ple computers, or on multiple CPU cores within a computer. The application can discover the size and placement of data at run time, and modify the graph as the computation pro- gresses to make efficient use of the available resources. Dryad is designed to scale from powerful multi-core sin- gle computers, through small clusters of computers, to data centers with thousands of computers. The Dryad execution engine handles all the difficult problems of creating a large distributed, concurrent application: scheduling the use of computers and their CPUs, recovering from communication or computer failures, and transporting data between ver- tices.}
      \field{isbn}{9781595936363}
      \field{issn}{01635980}
      \field{journaltitle}{ACM SIGOPS Operating Systems Review. Vol. 41. No. 3.}
      \field{title}{{Dryad: distributed data-parallel programs from sequential building blocks}}
      \field{year}{2007}
      \field{pages}{59\bibrangedash 72}
      \range{pages}{14}
      \verb{doi}
      \verb 10.1145/1272996.1273005
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=1273005
      \endverb
      \keyw{cluster,concurrency,dataflow,distributed programming}
    \endentry
    \entry{Jang2009}{article}{}
      \name{author}{2}{}{%
        {{hash=84a29ab80a40afde8f7dbb35ac8cb9b9}{Jang}{J\bibinitperiod}{Dongseok}{D\bibinitperiod}{}{}{}{}}%
        {{hash=4c2f942a52a5bf726822c74ad0749be7}{Choe}{C\bibinitperiod}{Kwang-Moo}{K\bibinithyphendelim M\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{cf815e1b34bf2248c1675a63012a8ac8}
      \strng{fullhash}{cf815e1b34bf2248c1675a63012a8ac8}
      \field{sortinit}{J}
      \field{sortinithash}{ec3950a647c092421b9fcca6d819504a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{JavaScript is widely used by web developers and the complexity of JavaScript programs has increased over the last year. Therefore, the need for program analysis for JavaScript is evident. Points-to analysis for JavaScript is to determine the set of objects to which a reference variable or an object property may point. Points-to analysis for JavaScript is a basis for further program analyses for JavaScript. It has a wide range of applications in code optimization and software engineering tools. However, points-to analysis for JavaScript has not yet been developed. JavaScript has dynamic features such as the runtime modification of objects through addition of properties or updating of methods. We propose a points-to analysis for JavaScript which precisely handles the dynamic features of JavaScript. Our work is the first attempt to analyze the points-to behavior of JavaScript. We evaluate the analysis on a set of JavaScript programs. We also apply the analysis to a code optimization technique to show that the analysis can be practically useful. Copyright 2009 ACM.}
      \field{isbn}{9781605581668}
      \field{journaltitle}{Proceedings of the 2009 ACM symposium on Applied Computing SAC 09}
      \field{title}{{Points-to analysis for JavaScript}}
      \field{year}{2009}
      \field{pages}{1930}
      \range{pages}{1}
      \verb{doi}
      \verb 10.1145/1529282.1529711
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Jang, Choe - 2009 - Points-to analysis for JavaScript.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=1529711%20http://portal.acm.org/citation.cfm?doid=1529282.1529711
      \endverb
      \keyw{cen,education,engineering research,javascript,korea ministry,pointer analysis,points analysis,program anal,ter excellence program,work supported}
    \endentry
    \entry{Johnson1995}{article}{}
      \name{author}{3}{}{%
        {{hash=b8fb4f80e53cb41c5de092cea9545035}{Johnson}{J\bibinitperiod}{Kirk\bibnamedelima L.}{K\bibinitperiod\bibinitdelim L\bibinitperiod}{}{}{}{}}%
        {{hash=c4e9f8e102c2895559ca5b01cc81e396}{Kaashoek}{K\bibinitperiod}{M.\bibnamedelimi Frans}{M\bibinitperiod\bibinitdelim F\bibinitperiod}{}{}{}{}}%
        {{hash=4a21ba388f565780abb47c86d6cb6c0a}{Wallach}{W\bibinitperiod}{Deborah\bibnamedelima A.}{D\bibinitperiod\bibinitdelim A\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {ACM}%
      }
      \strng{namehash}{f9d646d705aba1ffdb6b49a9a7838ec7}
      \strng{fullhash}{f9d646d705aba1ffdb6b49a9a7838ec7}
      \field{sortinit}{J}
      \field{sortinithash}{ec3950a647c092421b9fcca6d819504a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{isbn}{0897917154}
      \field{issn}{01635980}
      \field{journaltitle}{ACM SIGOPS Operating Systems Review}
      \field{month}{12}
      \field{number}{5}
      \field{title}{{CRL: High-Performance All-Software Distributed Shared Memory}}
      \field{volume}{29}
      \field{year}{1995}
      \field{pages}{213\bibrangedash 226}
      \range{pages}{14}
      \verb{doi}
      \verb 10.1145/224057.224073
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Johnson, Kaashoek, Wallach - 1995 - CRL High-Performance All-Software Distributed Shared Memory.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=224057.224073
      \endverb
    \endentry
    \entry{Johnson}{article}{}
      \name{author}{2}{}{%
        {{hash=7dbe0099bd3e17efa734ce3d29c12769}{Johnson}{J\bibinitperiod}{Ralph\bibnamedelima E.}{R\bibinitperiod\bibinitdelim E\bibinitperiod}{}{}{}{}}%
        {{hash=ce1da434462120c24dc9395a75cefd51}{Foote}{F\bibinitperiod}{Brian}{B\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{e1f6d9f3282651f1107336d5a7219648}
      \strng{fullhash}{e1f6d9f3282651f1107336d5a7219648}
      \field{sortinit}{J}
      \field{sortinithash}{ec3950a647c092421b9fcca6d819504a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Object-oriented programming is as much a different way of designing programs as it is a different way of designing programming languages. This paper describes what it is like to design systems in Smalltalk. In particular, since a major motivation for object-oriented programming is software reuse, this paper describes how classes are developed so that they will be reusable.}
      \field{isbn}{081868996X}
      \field{issn}{0896-8438}
      \field{journaltitle}{Journal of Object-Oriented Programming}
      \field{title}{{Designing Reusable Classes Abstract Designing Reusable Classes}}
      \field{volume}{1}
      \field{year}{1988}
      \field{pages}{22\bibrangedash 35}
      \range{pages}{14}
      \verb{url}
      \verb http://www.laputan.org/drc.html%20http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.101.8594
      \endverb
      \keyw{Brian Foote,C++,Ralph Johnson,black-box,clos,components,computer science,design,designing reusable classes,domain frameworks,domain specific frameworks,dynamic programming,evolution,frameworks,lifecycle,object-oriented,object-oriented design,object-oriented frameworks,object-oriented languages,object-oriented programming,programming languages,realtime,reuse,smalltalk,software architecture,software evolution,software lifecycle,software reuse,white-box}
    \endentry
    \entry{Jovanovic2006}{article}{}
      \name{author}{3}{}{%
        {{hash=c72e5224f7ef558b462288781456ca29}{Jovanovic}{J\bibinitperiod}{N}{N\bibinitperiod}{}{}{}{}}%
        {{hash=0c9d5a6fd559f783d78f813d6f9cd983}{Kruegel}{K\bibinitperiod}{C}{C\bibinitperiod}{}{}{}{}}%
        {{hash=142230ee61fa548768d740b9eceadbc6}{Kirda}{K\bibinitperiod}{E}{E\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{aae4c847fd4a158ee6c124879a66b1d4}
      \strng{fullhash}{aae4c847fd4a158ee6c124879a66b1d4}
      \field{sortinit}{J}
      \field{sortinithash}{ec3950a647c092421b9fcca6d819504a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{Security and Privacy, 2006 IEEE Symposium on.}
      \field{title}{{Pixy: A static analysis tool for detecting web application vulnerabilities}}
      \field{year}{2006}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Jovanovic, Kruegel, Kirda - 2006 - Pixy A static analysis tool for detecting web application vulnerabilities.pdf:pdf
      \endverb
      \verb{url}
      \verb http://ieeexplore.ieee.org/xpls/abs%7B%5C_%7Dall.jsp?arnumber=1624016
      \endverb
    \endentry
    \entry{Kahn1974}{article}{}
      \name{author}{1}{}{%
        {{hash=f5fe6f6f001fe756e1256ef796f7832c}{Kahn}{K\bibinitperiod}{Gilles}{G\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {North-Holland}%
      }
      \strng{namehash}{f5fe6f6f001fe756e1256ef796f7832c}
      \strng{fullhash}{f5fe6f6f001fe756e1256ef796f7832c}
      \field{sortinit}{K}
      \field{sortinithash}{a7d5b3aec5a0890aae7baf85a209abfc}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{In this paper, we describe a simple language for parallel programming. Its semantics is studied thoroughly. The desirable properties of this language and its deficiencies are exhibited by this theoretical study. Basic results on parallel program schemata are given. We hope in this way to make a case for a more formal (i.e. mathematical) approach to the design of languages for systems programming and the design of operating systems.}
      \field{journaltitle}{In Information Processing'74: Proceedings of the IFIP Congress}
      \field{title}{{The semantics of a simple language for parallel programming}}
      \field{volume}{74}
      \field{year}{1974}
      \field{pages}{471\bibrangedash 475}
      \range{pages}{5}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Kahn - 1974 - The semantics of a simple language for parallel programming.pdf:pdf
      \endverb
      \verb{url}
      \verb http://www.tik.ee.ethz.ch/tik/education/lectures/hswcd/papers/2%7B%5C_%7DKahnProcessNetworks.pdf%20http://www.citeulike.org/group/872/article/349829
      \endverb
      \keyw{dataflow,important,lu}
    \endentry
    \entry{Kahn1976}{report}{}
      \name{author}{2}{}{%
        {{hash=f5fe6f6f001fe756e1256ef796f7832c}{Kahn}{K\bibinitperiod}{Gilles}{G\bibinitperiod}{}{}{}{}}%
        {{hash=8013ead74eb84c7479af9b51ef86e5da}{Macqueen}{M\bibinitperiod}{David}{D\bibinitperiod}{}{}{}{}}%
      }
      \list{language}{1}{%
        {en}%
      }
      \strng{namehash}{c50175e66f775a9e5484470403c7ecc1}
      \strng{fullhash}{c50175e66f775a9e5484470403c7ecc1}
      \field{sortinit}{K}
      \field{sortinithash}{a7d5b3aec5a0890aae7baf85a209abfc}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Les concepts de coroutine et de processus interviennent dans une grande variété d'applications, où il est en général nécessaire de produire ou de transformer des données de façon progressive. Nous présentons un langage, fondé sur une vue sémantique précises de l'interaction entre processus, qui facilite la programmation de réseaux de processus qui évoluent dynamiquement. Ces réseaux ont un comportement externe unique, qu'ils soient exécutés de manière séquentielle ou parallèle. Les avantages d'une sémantique dénotationelle simple sont illustrés par des preuves de programmes. Ce langage de programmation permet aussi de clarifier les relations entre plusieurs concepts : coroutines, appel par nécessité, structures de données dynamiques et calcul parallèle.}
      \field{title}{{Coroutines and Networks of Parallel Processes}}
      \field{type}{techreport}
      \field{year}{1976}
      \field{pages}{20}
      \range{pages}{1}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Kahn, Macqueen - 1976 - Coroutines and Networks of Parallel Processes.pdf:pdf
      \endverb
      \verb{url}
      \verb https://hal.inria.fr/inria-00306565/
      \endverb
    \endentry
    \entry{Kaiser2014}{inproceedings}{}
      \name{author}{1}{}{%
        {{hash=9bc969990f326c8dca622f1f798fabd3}{Kaiser}{K\bibinitperiod}{Hartmut}{H\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {New York, New York, USA}%
      }
      \list{publisher}{1}{%
        {ACM Press}%
      }
      \strng{namehash}{9bc969990f326c8dca622f1f798fabd3}
      \strng{fullhash}{9bc969990f326c8dca622f1f798fabd3}
      \field{sortinit}{K}
      \field{sortinithash}{a7d5b3aec5a0890aae7baf85a209abfc}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{PGAS 2014}
      \field{isbn}{9781450332477}
      \field{month}{10}
      \field{title}{{HPX – A Task Based Programming Model in a Global Address Space}}
      \field{year}{2014}
      \field{pages}{1\bibrangedash 11}
      \range{pages}{11}
      \verb{doi}
      \verb 10.1145/2676870.2676883
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Kaiser - 2014 - HPX – A Task Based Programming Model in a Global Address Space.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=2676870.2676883
      \endverb
      \keyw{Exascale,Global Address Space,High Performance Computing,Parallel Runtime Systems,Programming Models}
    \endentry
    \entry{Kaiser2015}{misc}{}
      \name{author}{3}{}{%
        {{hash=9bc969990f326c8dca622f1f798fabd3}{Kaiser}{K\bibinitperiod}{Hartmut}{H\bibinitperiod}{}{}{}{}}%
        {{hash=4615bfb885e9229aca99eda768e3851c}{Heller}{H\bibinitperiod}{Thomas}{T\bibinitperiod}{}{}{}{}}%
        {{hash=fa1894ecd7896bf1207763991c6ae932}{Bourgeois}{B\bibinitperiod}{Daniel}{D\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{a371c8a103fcbea501aa21c216f90d53}
      \strng{fullhash}{a371c8a103fcbea501aa21c216f90d53}
      \field{sortinit}{K}
      \field{sortinithash}{a7d5b3aec5a0890aae7baf85a209abfc}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{Proceedings of the First International Workshop on Extreme Scale Programming Models and Middleware - ESPM '15}
      \field{title}{{Higher-level Parallelization for Local and Distributed Asynchronous Task-Based Programming}}
      \field{urlday}{24}
      \field{urlmonth}{11}
      \field{urlyear}{2015}
      \field{year}{2015}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Kaiser, Heller, Bourgeois - 2015 - Higher-level Parallelization for Local and Distributed Asynchronous Task-Based Programming.pdf:pdf
      \endverb
      \verb{url}
      \verb http://stellar.cct.lsu.edu/pubs/executors%7B%5C_%7Despm2%7B%5C_%7D2015.pdf
      \endverb
    \endentry
    \entry{Krohn2007}{article}{}
      \name{author}{3}{}{%
        {{hash=83d28b3bfdec22e321d359f3940a5597}{Krohn}{K\bibinitperiod}{MN}{M\bibinitperiod}{}{}{}{}}%
        {{hash=588b39f12d7e8fc981e47629753f128c}{Kohler}{K\bibinitperiod}{E}{E\bibinitperiod}{}{}{}{}}%
        {{hash=0b79a07a060e0e282bb235357c9e4978}{Kaashoek}{K\bibinitperiod}{MF}{M\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{dea7d4e4d3361e2e660506f7e66edc7b}
      \strng{fullhash}{dea7d4e4d3361e2e660506f7e66edc7b}
      \field{sortinit}{K}
      \field{sortinithash}{a7d5b3aec5a0890aae7baf85a209abfc}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{USENIX Annual Technical Conference}
      \field{title}{{Events Can Make Sense.}}
      \field{year}{2007}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Krohn, Kohler, Kaashoek - 2007 - Events Can Make Sense.pdf:pdf
      \endverb
      \verb{url}
      \verb https://www.usenix.org/legacy/events/usenix07/tech/full%7B%5C_%7Dpapers/krohn/krohn%7B%5C_%7Dhtml/
      \endverb
      \keyw{TAME,event}
    \endentry
    \entry{Lamport1978}{article}{}
      \name{author}{1}{}{%
        {{hash=ef82223e035dbb62f84cb1c0782df38c}{Lamport}{L\bibinitperiod}{L}{L\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{ef82223e035dbb62f84cb1c0782df38c}
      \strng{fullhash}{ef82223e035dbb62f84cb1c0782df38c}
      \field{sortinit}{L}
      \field{sortinithash}{872351f18d0f736066eda0bf18bfa4f7}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{Communications of the ACM}
      \field{title}{{Time, clocks, and the ordering of events in a distributed system}}
      \field{year}{1978}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Lamport - 1978 - Time, clocks, and the ordering of events in a distributed system.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=359563
      \endverb
    \endentry
    \entry{Lamport1977}{article}{}
      \name{author}{1}{}{%
        {{hash=5d77435450d10a850a5b58577b9a456b}{Lamport}{L\bibinitperiod}{Leslie}{L\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {ACM}%
      }
      \strng{namehash}{5d77435450d10a850a5b58577b9a456b}
      \strng{fullhash}{5d77435450d10a850a5b58577b9a456b}
      \field{sortinit}{L}
      \field{sortinithash}{872351f18d0f736066eda0bf18bfa4f7}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{issn}{00010782}
      \field{journaltitle}{Communications of the ACM}
      \field{month}{11}
      \field{number}{11}
      \field{title}{{Concurrent reading and writing}}
      \field{volume}{20}
      \field{year}{1977}
      \field{pages}{806\bibrangedash 811}
      \range{pages}{6}
      \verb{doi}
      \verb 10.1145/359863.359878
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Lamport - 1977 - Concurrent reading and writing.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=359863.359878
      \endverb
      \keyw{asynchronous multiprocessing,multiprocess synchronization,readers/writers problem,shared data}
    \endentry
    \entry{Lamport1982}{article}{}
      \name{author}{3}{}{%
        {{hash=5d77435450d10a850a5b58577b9a456b}{Lamport}{L\bibinitperiod}{Leslie}{L\bibinitperiod}{}{}{}{}}%
        {{hash=88bd932c15c4ae7b0f7652a409325659}{Shostak}{S\bibinitperiod}{Robert}{R\bibinitperiod}{}{}{}{}}%
        {{hash=87523aad6a4881d07c4c00ef21114da5}{Pease}{P\bibinitperiod}{Marshall}{M\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {ACM}%
      }
      \strng{namehash}{413430fb3846d7facccddaff1effdd66}
      \strng{fullhash}{413430fb3846d7facccddaff1effdd66}
      \field{sortinit}{L}
      \field{sortinithash}{872351f18d0f736066eda0bf18bfa4f7}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{issn}{01640925}
      \field{journaltitle}{ACM Transactions on Programming Languages and Systems}
      \field{month}{07}
      \field{number}{3}
      \field{title}{{The Byzantine Generals Problem}}
      \field{volume}{4}
      \field{year}{1982}
      \field{pages}{382\bibrangedash 401}
      \range{pages}{20}
      \verb{doi}
      \verb 10.1145/357172.357176
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Lamport, Shostak, Pease - 1982 - The Byzantine Generals Problem.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=357172.357176
      \endverb
    \endentry
    \entry{Leiserson2010}{article}{}
      \name{author}{1}{}{%
        {{hash=3b9631a5d8255aae1ddfadc5d57c6418}{Leiserson}{L\bibinitperiod}{Charles\bibnamedelima E.}{C\bibinitperiod\bibinitdelim E\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{3b9631a5d8255aae1ddfadc5d57c6418}
      \strng{fullhash}{3b9631a5d8255aae1ddfadc5d57c6418}
      \field{sortinit}{L}
      \field{sortinithash}{872351f18d0f736066eda0bf18bfa4f7}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{The availability of multicore processors across a wide range of computing platforms has created a strong demand for software frameworks that can harness these resources. This paper overviews the Cilk++ programming environment, which incorporates a compiler, a runtime system, and a race-detection tool. The Cilk++ runtime system guarantees to load-balance computations effectively. To cope with legacy codes containing global variables, Cilk++ provides a ldquohyperobjectrdquo library which allows races on nonlocal variables to be mitigated without lock contention or substantial code restructuring.}
      \field{isbn}{9781605584973}
      \field{issn}{09208542}
      \field{journaltitle}{Journal of Supercomputing}
      \field{month}{03}
      \field{number}{3}
      \field{title}{{The Cilk++ concurrency platform}}
      \field{volume}{51}
      \field{year}{2010}
      \field{pages}{244\bibrangedash 257}
      \range{pages}{14}
      \verb{doi}
      \verb 10.1007/s11227-010-0405-3
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Leiserson - 2010 - The Cilk concurrency platform.pdf:pdf
      \endverb
      \verb{url}
      \verb http://link.springer.com/10.1007/s11227-010-0405-3
      \endverb
      \keyw{Amdahl's Law,Dag model,Hyperobject,Multicore programming,Multithreading,Parallel programming,Parallelism,Race detection,Reducer,Span,Speedup,Work}
    \endentry
    \entry{Li2012}{article}{}
      \name{author}{3}{}{%
        {{hash=89b23cce0bb40099f7b69f6577f665fe}{Li}{L\bibinitperiod}{Feng}{F\bibinitperiod}{}{}{}{}}%
        {{hash=9a5c33dadd402a9e96fc3a546246c686}{Pop}{P\bibinitperiod}{Antoniu}{A\bibinitperiod}{}{}{}{}}%
        {{hash=172a9e8d07a17bf85f8736265ac88aae}{Cohen}{C\bibinitperiod}{Albert}{A\bibinitperiod}{}{}{}{}}%
      }
      \list{language}{1}{%
        {English}%
      }
      \list{publisher}{1}{%
        {IEEE Computer Society}%
      }
      \strng{namehash}{3fe15c5f63389466423717a6bf63ff53}
      \strng{fullhash}{3fe15c5f63389466423717a6bf63ff53}
      \field{sortinit}{L}
      \field{sortinithash}{872351f18d0f736066eda0bf18bfa4f7}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{This article presents a general algorithm for transforming sequential imperative programs into parallel data-flow programs. The algorithm operates on a program dependence graph in static-single-assignment form, extracting task, pipeline, and data parallelism from arbitrary control flow, and coarsening its granularity using a generalized form of typed fusion. A prototype based on GNU Compiler Collection (GCC) is applied to the automatic parallelization of recursive C programs.}
      \field{issn}{0272-1732}
      \field{journaltitle}{IEEE Micro}
      \field{month}{07}
      \field{number}{4}
      \field{title}{{Automatic Extraction of Coarse-Grained Data-Flow Threads from Imperative Programs}}
      \field{volume}{32}
      \field{year}{2012}
      \field{pages}{19\bibrangedash 31}
      \range{pages}{13}
      \verb{doi}
      \verb 10.1109/MM.2012.49
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Li, Pop, Cohen - 2012 - Automatic Extraction of Coarse-Grained Data-Flow Threads from Imperative Programs.pdf:pdf
      \endverb
      \verb{url}
      \verb http://www.computer.org/csdl/mags/mi/2012/04/mmi2012040019.html
      \endverb
      \keyw{Instruction sets,Parallel processing,Pipeline processing,Radiation detectors,SSA form,Sequential analysis,Synchronization,automatic parallelization,data-flow model,loop fusion,program dependence graph,sequential imperative programs}
    \endentry
    \entry{Li2007}{article}{}
      \name{author}{2}{}{%
        {{hash=24bece773e8873ff8f03d9a3eced56df}{Li}{L\bibinitperiod}{Peng}{P\bibinitperiod}{}{}{}{}}%
        {{hash=86f46b6c1c6a571f63e61bfc35519f72}{Zdancewic}{Z\bibinitperiod}{Steve}{S\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {ACM}%
      }
      \strng{namehash}{60349a95d7e2e8c9a32179cab6eec7c2}
      \strng{fullhash}{60349a95d7e2e8c9a32179cab6eec7c2}
      \field{sortinit}{L}
      \field{sortinithash}{872351f18d0f736066eda0bf18bfa4f7}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{This paper proposes to combine two seemingly opposed programming models for building massively concurrent network services: the event-driven model and the multithreaded model. The result is a hybrid design that offers the best of both worlds-the ease of use and expressiveness of threads and the flexibility and performance of events. This paper shows how the hybrid model can be implemented entirely at the application level using concurrency monads in Haskell, which provides type-safe abstractions for both events and threads. This approach simplifies the development of massively concurrent software in a way that scales to real-world network services. The Haskell implementation supports exceptions, symmetrical multiprocessing, software transactional memory, asynchronous I/O mechanisms and application-level network protocol stacks. Experimental results demonstrate that this monad-based approach has good performance: the threads are extremely lightweight (scaling to ten million threads), and the I/O performance compares favorably to that of Linux NPTL. tens of thousands of simultaneous, mostly-idle client connections. Such massively-concurrent programs are difficult to implement, especially when other requirements, such as high performance and strong security, must also be met.}
      \field{isbn}{9781595936332}
      \field{issn}{03621340}
      \field{journaltitle}{ACM SIGPLAN Notices}
      \field{month}{06}
      \field{number}{6}
      \field{title}{{Combining events and threads for scalable network services implementation and evaluation of monadic, application-level concurrency primitives}}
      \field{volume}{42}
      \field{year}{2007}
      \field{pages}{189}
      \range{pages}{1}
      \verb{doi}
      \verb 10.1145/1273442.1250756
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Li, Zdancewic - 2007 - Combining events and threads for scalable network services implementation and evaluation of monadic, application-.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=1273442.1250756%20http://dl.acm.org/citation.cfm?id=1250756
      \endverb
      \keyw{concurrency,event,haskell,implementation,monad,networking,programming,scalability,thread}
    \endentry
    \entry{Liskov1988}{book}{}
      \name{author}{2}{}{%
        {{hash=a518179689ec6ebd262f93b97ebf03ae}{Liskov}{L\bibinitperiod}{B}{B\bibinitperiod}{}{}{}{}}%
        {{hash=63c58dff8c2f01801b3c725f1981c39b}{Shrira}{S\bibinitperiod}{L}{L\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{94145efbd1f042af22a1496a325b7479}
      \strng{fullhash}{94145efbd1f042af22a1496a325b7479}
      \field{sortinit}{L}
      \field{sortinithash}{872351f18d0f736066eda0bf18bfa4f7}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{title}{{Promises: linguistic support for efficient asynchronous procedure calls in distributed systems}}
      \field{year}{1988}
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=54016
      \endverb
    \endentry
    \entry{Logothetis2010}{article}{}
      \name{author}{5}{}{%
        {{hash=cb49992ffeb885d4ab87d27ecb18a830}{Logothetis}{L\bibinitperiod}{Dionysios}{D\bibinitperiod}{}{}{}{}}%
        {{hash=cc5efd5277c8def4433f72bd6f2279e5}{Olston}{O\bibinitperiod}{Christopher}{C\bibinitperiod}{}{}{}{}}%
        {{hash=85be743b01aead39c2e95bfc9228cc8b}{Reed}{R\bibinitperiod}{Benjamin}{B\bibinitperiod}{}{}{}{}}%
        {{hash=79199c73a424846331ee5c23bc549b95}{Webb}{W\bibinitperiod}{Kevin\bibnamedelima C.}{K\bibinitperiod\bibinitdelim C\bibinitperiod}{}{}{}{}}%
        {{hash=e15c9b985c8f8d463c999d3e8ada08f3}{Yocum}{Y\bibinitperiod}{Ken}{K\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{bb7a3b646fe4db83aebe0d3e325224b3}
      \strng{fullhash}{3ce250b73d1eb3f437657af710a276d6}
      \field{sortinit}{L}
      \field{sortinithash}{872351f18d0f736066eda0bf18bfa4f7}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{This work addresses the need for stateful dataflow programs that can rapidly sift through huge, evolving data sets. These data-intensive applications perform complex multi-step computations over successive generations of data inflows, such as weekly web crawls, daily image/video uploads, log files, and growing social networks. While programmers may simply re-run the entire dataflow when new data arrives, this is grossly inefficient, increasing result latency and squandering hardware resources and energy. Alternatively, programmers may use prior results to incrementally incorporate the changes. However, current large-scale data processing tools, such as Map-Reduce or Dryad, limit how programmers incorporate and use state in data-parallel programs. Straightforward approaches to incorporating state can result in custom, fragile code and disappointing performance. This work presents a generalized architecture for continuous bulk processing (CBP) that raises the level of abstraction for building incremental applications. At its core is a flexible, groupwise processing operator that takes state as an explicit input. Unifying stateful programming with a data-parallel operator affords several fundamental opportunities for minimizing the movement of data in the underlying processing system. As case studies, we show how one can use a small set of flexible dataflow primitives to perform web analytics and mine large-scale, evolving graphs in an incremental fashion. Experiments with our prototype using real-world data indicate significant data movement and running time reductions relative to current practice. For example, incrementally computing PageRank using CBP can reduce data movement by 46{\%} and cut running time in half.}
      \field{isbn}{9781450300360}
      \field{journaltitle}{International Conference on Management of Data}
      \field{title}{{Stateful bulk processing for incremental analytics}}
      \field{year}{2010}
      \field{pages}{51\bibrangedash 62}
      \range{pages}{12}
      \verb{doi}
      \verb 10.1145/1807128.1807138
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Logothetis et al. - 2010 - Stateful bulk processing for incremental analytics.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=1807138%20http://portal.acm.org/citation.cfm?id=1807128.1807138
      \endverb
      \keyw{cloud computing,incremental,mapreduce,parallel data processing}
    \endentry
    \entry{Maffeis2008}{article}{}
      \name{author}{3}{}{%
        {{hash=d5bfe8be8a5b86fa9fbfab6fe9f101ae}{Maffeis}{M\bibinitperiod}{S}{S\bibinitperiod}{}{}{}{}}%
        {{hash=2fa21ee8b562f25ffcf4437e2a45642e}{Mitchell}{M\bibinitperiod}{JC}{J\bibinitperiod}{}{}{}{}}%
        {{hash=e9435cff210526ef2ca826b17e09ce5c}{Taly}{T\bibinitperiod}{A}{A\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{81450ec4427d5b7885dccb1c67f5f88e}
      \strng{fullhash}{81450ec4427d5b7885dccb1c67f5f88e}
      \field{sortinit}{M}
      \field{sortinithash}{2684bec41e9697b92699b46491061da2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{Programming languages and systems}
      \field{title}{{An operational semantics for JavaScript}}
      \field{year}{2008}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Maffeis, Mitchell, Taly - 2008 - An operational semantics for JavaScript.pdf:pdf
      \endverb
      \verb{url}
      \verb http://link.springer.com/chapter/10.1007/978-3-540-89330-1%7B%5C_%7D22
      \endverb
    \endentry
    \entry{Maffeis2009a}{article}{}
      \name{author}{3}{}{%
        {{hash=d5bfe8be8a5b86fa9fbfab6fe9f101ae}{Maffeis}{M\bibinitperiod}{S}{S\bibinitperiod}{}{}{}{}}%
        {{hash=2fa21ee8b562f25ffcf4437e2a45642e}{Mitchell}{M\bibinitperiod}{JC}{J\bibinitperiod}{}{}{}{}}%
        {{hash=e9435cff210526ef2ca826b17e09ce5c}{Taly}{T\bibinitperiod}{A}{A\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{81450ec4427d5b7885dccb1c67f5f88e}
      \strng{fullhash}{81450ec4427d5b7885dccb1c67f5f88e}
      \field{sortinit}{M}
      \field{sortinithash}{2684bec41e9697b92699b46491061da2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{Computer Security–ESORICS 2009}
      \field{title}{{Isolating JavaScript with filters, rewriting, and wrappers}}
      \field{year}{2009}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Maffeis, Mitchell, Taly - 2009 - Isolating JavaScript with filters, rewriting, and wrappers.pdf:pdf
      \endverb
      \verb{url}
      \verb http://link.springer.com/chapter/10.1007/978-3-642-04444-1%7B%5C_%7D31
      \endverb
    \endentry
    \entry{Mark2003}{article}{}
      \name{author}{2}{}{%
        {{hash=8542650bd38674cd05d29c160acc6f14}{Mark}{M\bibinitperiod}{WR}{W\bibinitperiod}{}{}{}{}}%
        {{hash=1b4a9be4b380a962d3d2f0e131925430}{Glanville}{G\bibinitperiod}{RS}{R\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{8d77c3289ee397f3eaaa1a9b396466e0}
      \strng{fullhash}{8d77c3289ee397f3eaaa1a9b396466e0}
      \field{sortinit}{M}
      \field{sortinithash}{2684bec41e9697b92699b46491061da2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{{\ldots} Transactions on Graphics ( {\ldots}}
      \field{title}{{Cg: A system for programming graphics hardware in a C-like language}}
      \field{year}{2003}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Mark, Glanville - 2003 - Cg A system for programming graphics hardware in a C-like language.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=882362
      \endverb
    \endentry
    \entry{Matsakis2012a}{article}{}
      \name{author}{1}{}{%
        {{hash=8101892bb9d92778913da2b3e9340cef}{Matsakis}{M\bibinitperiod}{Nicholas\bibnamedelima D}{N\bibinitperiod\bibinitdelim D\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{8101892bb9d92778913da2b3e9340cef}
      \strng{fullhash}{8101892bb9d92778913da2b3e9340cef}
      \field{sortinit}{M}
      \field{sortinithash}{2684bec41e9697b92699b46491061da2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{This paper presents a lightweight task framework and accompanying type system that statically guarantee deterministic execution. The framework is based on the familiar model of fork-join parallelism, but with two important twists. First, child tasks do not begin execution immediately upon creation, but rather they are both scheduled and joined as one atomic action; this change prevents the parent task from racing with its children. Second, the body of a child task is specified as a parallel closure. Parallel closures are a novel variation on traditional closures in which the data inherited from the environment is read-only. Parallel closures have the important property that they can be executed in parallel with one another without creating data races, even if they share the same environment. We also have a controlled means to grant mutable access to data in the environment where necessary. We have implemented a prototype of our framework in Java. The prototype includes a typechecker that enforces the constraint that parallel closures cannot modify their environment. The paper describes how the prototype has been used to implement a number of realistic examples and also explains how parallel closures can support the creation of structured parallel programming abstractions.}
      \field{journaltitle}{HotPar'12 Proceedings of the 4th USENIX conference on Hot Topics in Parallelism}
      \field{title}{{Parallel Closures A new twist on an old idea}}
      \field{year}{2012}
      \field{pages}{5\bibrangedash 5}
      \range{pages}{1}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Matsakis - 2012 - Parallel Closures A new twist on an old idea.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=2342793%20https://www.usenix.org/system/files/conference/hotpar12/hotpar12-final5.pdf
      \endverb
    \endentry
    \entry{Mauras1989}{thesis}{}
      \name{author}{1}{}{%
        {{hash=b7313e6b0a1689ff1e73dd2bcb8a0cb3}{Mauras}{M\bibinitperiod}{Christophe}{C\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {Rennes 1}%
      }
      \strng{namehash}{b7313e6b0a1689ff1e73dd2bcb8a0cb3}
      \strng{fullhash}{b7313e6b0a1689ff1e73dd2bcb8a0cb3}
      \field{sortinit}{M}
      \field{sortinithash}{2684bec41e9697b92699b46491061da2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{month}{01}
      \field{title}{{Alpha : un langage equationnel pour la conception et la programmation d'architectures paralleles synchrones}}
      \field{type}{phdthesis}
      \field{year}{1989}
      \verb{url}
      \verb http://www.theses.fr/1989REN10116
      \endverb
      \keyw{en français}
    \endentry
    \entry{McCool2010}{article}{}
      \name{author}{1}{}{%
        {{hash=29d6b43a7ae1768ecaffe8099427f6af}{{Michael\bibnamedelimb D}}{M\bibinitperiod}{McCool}{M\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{29d6b43a7ae1768ecaffe8099427f6af}
      \strng{fullhash}{29d6b43a7ae1768ecaffe8099427f6af}
      \field{sortinit}{M}
      \field{sortinithash}{2684bec41e9697b92699b46491061da2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Many-core processors target improved computational performance by making available various forms of architectural parallelism, including but not limited to multiple cores and vector instructions. However, approaches to parallel programming based on targeting these low-level parallel mechanisms directly leads to overly complex, non-portable, and often unscalable and unreliable code. A more structured approach to designing and implementing parallel algorithms is useful to reduce the complexity of developing software for such processors, and is particularly relevant for many-core processors with a large amount of parallelism and multiple parallelism mechanisms. In particular, efficient and reliable parallel programs can be designed around the composition of deterministic algorithmic skeletons, or patterns. While improving the productivity of experts, specific patterns and fused combinations of patterns can also guide relatively inexperienced users to developing efficient algorithm implementations that have good scalability. The approach to parallelism described in this document includes both collective "data-parallel" patterns such as map and reduce as well as structured "task-parallel" patterns such as pipelining and superscalar task graphs. The structured pattern based approach, like data-parallel models, addresses issues of both data access and parallel task distribution in a common framework. Optimization of data access is important for both many-core processors with shared memory systems and accelerators with their own memories not directly attached to the host processor. A catalog of useful structured serial and parallel patterns will be presented. Serial patterns are presented because structured parallel programming can be considered an extension of structured control flow in serial programming. We will emphasize deterministic patterns in order to support the development of systems that automatically avoid unsafe race conditions and deadlock.}
      \field{journaltitle}{HotPar '10, 2nd USENIX Workshop on Hot Topics in Parallelism}
      \field{title}{{Structured parallel programming with deterministic patterns}}
      \field{year}{2010}
      \field{pages}{14\bibrangedash 15}
      \range{pages}{2}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Michael D - 2010 - Structured parallel programming with deterministic patterns.pdf:pdf
      \endverb
      \verb{url}
      \verb https://www.usenix.org/event/hotpar10/tech/full%7B%5C_%7Dpapers/McCool.pdf%20https://www.usenix.org/legacy/event/hotpar10/tech/full%7B%5C_%7Dpapers/McCool.pdf$%5Cbackslash$nhttp://software.intel.com/en-us/articles/structured-parallel-programming-with-deterministic-patterns
      \endverb
      \keyw{deterministic parallel computing,many-core computing,patterns,software engineering,structured programming}
    \endentry
    \entry{Migliavacca2010}{article}{}
      \name{author}{2}{}{%
        {{hash=28e514e21ca90a6d4365154c27707187}{Migliavacca}{M\bibinitperiod}{M}{M\bibinitperiod}{}{}{}{}}%
        {{hash=8044e81acb8a6e8d5c868b307b955a6a}{Eyers}{E\bibinitperiod}{D}{D\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{3ceb5d10723b09391f82692bc7aa8758}
      \strng{fullhash}{3ceb5d10723b09391f82692bc7aa8758}
      \field{sortinit}{M}
      \field{sortinithash}{2684bec41e9697b92699b46491061da2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{Middleware'10 Posters and Demos Track.}
      \field{title}{{SEEP: scalable and elastic event processing}}
      \field{year}{2010}
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=1930032
      \endverb
    \endentry
    \entry{Milner1997}{book}{}
      \name{author}{4}{}{%
        {{hash=bc9cfc422bcfe196304ebb5634e8b2a9}{Milner}{M\bibinitperiod}{R.}{R\bibinitperiod}{}{}{}{}}%
        {{hash=5780065392a3c6c91ee5a3b8c079ca35}{Tofte}{T\bibinitperiod}{Mads}{M\bibinitperiod}{}{}{}{}}%
        {{hash=73259fe928ce8add0f265e234f8de3a6}{Harper}{H\bibinitperiod}{Robert}{R\bibinitperiod}{}{}{}{}}%
        {{hash=58566aa2e90cecf8724664c479be467f}{MacQueen}{M\bibinitperiod}{David}{D\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{b8b6282e735f8e5a97977160f22d0c31}
      \strng{fullhash}{79c410bd76fdd72c95f6e01a1e19e532}
      \field{sortinit}{M}
      \field{sortinithash}{2684bec41e9697b92699b46491061da2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Standard ML is a general-purpose programming language designed for large projects. This book provides a formal definition of Standard ML for the benefit of all concerned with the language, including users and implementers. Because computer programs are increasingly required to withstand rigorous analysis, it is all the more important that the language in which they are written be defined with full rigor.The Definition of Standard ML is the essential point of reference for Standard ML. Since its publication in 1990, the implementation technology of the language has advanced enormously and the number of users has grown. The revised edition includes a number of new features, omits little-used features, and corrects mistakes of definition.}
      \field{isbn}{0262631814}
      \field{title}{{The Definition of Standard ML - Revised}}
      \field{year}{1997}
      \field{pages}{128}
      \range{pages}{1}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Milner et al. - 1997 - The Definition of Standard ML - Revised.pdf:pdf
      \endverb
      \verb{url}
      \verb https://mitpress.mit.edu/index.php?q=books/definition-standard-ml/%20http://www.amazon.com/Definition-Standard-ML-Revised/dp/0262631814
      \endverb
    \endentry
    \entry{Murray2013}{article}{}
      \name{author}{6}{}{%
        {{hash=1963c3ef222c14cd72d3523cb1dc1f7d}{Murray}{M\bibinitperiod}{Derek\bibnamedelima G.}{D\bibinitperiod\bibinitdelim G\bibinitperiod}{}{}{}{}}%
        {{hash=a0e6c99aabdc2587f248892c8bb23f70}{McSherry}{M\bibinitperiod}{Frank}{F\bibinitperiod}{}{}{}{}}%
        {{hash=f7d7e0101ad5b439d1efaccb9707d501}{Isaacs}{I\bibinitperiod}{Rebecca}{R\bibinitperiod}{}{}{}{}}%
        {{hash=3b62e7eedeec9f7a7f7f3c3ec88637f1}{Isard}{I\bibinitperiod}{Michael}{M\bibinitperiod}{}{}{}{}}%
        {{hash=08cf514c08137f94d73b590060797f5b}{Barham}{B\bibinitperiod}{Paul}{P\bibinitperiod}{}{}{}{}}%
        {{hash=f39ffee58f8a71d84d8b13c05804b2cc}{Abadi}{A\bibinitperiod}{Martin}{M\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {New York, New York, USA}%
      }
      \list{publisher}{1}{%
        {ACM Press}%
      }
      \strng{namehash}{907386d9e2114dc552304a51dfa6e066}
      \strng{fullhash}{99db85a17e808192093ee3783792d005}
      \field{sortinit}{M}
      \field{sortinithash}{2684bec41e9697b92699b46491061da2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Naiad is a distributed system for executing data parallel, cyclic dataflow programs. It offers the high throughput of batch processors, the low latency of stream processors, and the ability to perform iterative and incremental computations. Although existing systems offer some of these features, applications that require all three have relied on multiple platforms, at the expense of efficiency, maintainability, and simplicity. Naiad resolves the complexities of combining these features in one framework. A new computational model, timely dataflow, underlies Naiad and captures opportunities for parallelism across a wide class of algorithms. This model enriches dataflow computation with timestamps that represent logical points in the computation and provide the basis for an efficient, lightweight coordination mechanism. We show that many powerful high-level programming models can be built on Naiad's low-level primitives, enabling such diverse tasks as streaming data analysis, iterative machine learning, and interactive graph mining. Naiad outperforms specialized systems in their target application domains, and its unique features enable the development of new high-performance applications.}
      \field{isbn}{9781450323888}
      \field{journaltitle}{Proceedings of the Twenty-Fourth ACM Symposium on Operating Systems Principles - SOSP '13}
      \field{month}{11}
      \field{title}{{Naiad}}
      \field{year}{2013}
      \field{pages}{439\bibrangedash 455}
      \range{pages}{17}
      \verb{doi}
      \verb 10.1145/2517349.2522738
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Murray et al. - 2013 - Naiad.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=2517349.2522738%20http://dl.acm.org/citation.cfm?id=2522738$%5Cbackslash$nhttp://dl.acm.org/citation.cfm?doid=2517349.2522738
      \endverb
    \endentry
    \entry{Namiot2014}{misc}{}
      \name{author}{2}{}{%
        {{hash=c9927f01aa951aa5a70de69f114f95de}{Namiot}{N\bibinitperiod}{Dmitry}{D\bibinitperiod}{}{}{}{}}%
        {{hash=8da73fc88d21b8603b21a11e7a855fd0}{Sneps-Sneppe}{S\bibinithyphendelim S\bibinitperiod}{Manfred}{M\bibinitperiod}{}{}{}{}}%
      }
      \list{language}{1}{%
        {en}%
      }
      \strng{namehash}{a149f0fb58bfa2626a360ae34dc8af08}
      \strng{fullhash}{a149f0fb58bfa2626a360ae34dc8af08}
      \field{sortinit}{N}
      \field{sortinithash}{925374ca63e7594de7fafdb83e64d41d}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{This paper provides an overview of micro-services architecture and implementation patterns. It continues our series of publications about M2M systems, existing and upcoming system software platforms for M2M applications. A micro-service is a lightweight and independent service that performs single functions and collaborates with other similar services using a well-defined interface. We would like to discuss the common principles behind this approach, its advantages and disadvantages as well as its possible usage in M2M applications.}
      \field{booktitle}{International Journal of Open Information Technologies}
      \field{issn}{2307-8162}
      \field{month}{08}
      \field{number}{9}
      \field{title}{{On Micro-services Architecture}}
      \field{volume}{2}
      \field{year}{2014}
      \field{pages}{24\bibrangedash 27}
      \range{pages}{4}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Namiot, Sneps-Sneppe - 2014 - On Micro-services Architecture.pdf:pdf
      \endverb
      \verb{url}
      \verb http://injoit.org/index.php/j1/article/view/139
      \endverb
    \endentry
    \entry{Nelson2004}{inproceedings}{}
      \name{author}{1}{}{%
        {{hash=119a9a3f8a7decf72d5e4710339fe1d3}{Nelson}{N\bibinitperiod}{Jay}{J\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {New York, New York, USA}%
      }
      \list{publisher}{1}{%
        {ACM Press}%
      }
      \strng{namehash}{119a9a3f8a7decf72d5e4710339fe1d3}
      \strng{fullhash}{119a9a3f8a7decf72d5e4710339fe1d3}
      \field{sortinit}{N}
      \field{sortinithash}{925374ca63e7594de7fafdb83e64d41d}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{Proceedings of the 2004 ACM SIGPLAN workshop on Erlang - ERLANG '04}
      \field{isbn}{1581139187}
      \field{month}{09}
      \field{title}{{Structured programming using processes}}
      \field{year}{2004}
      \field{pages}{54\bibrangedash 64}
      \range{pages}{11}
      \verb{doi}
      \verb 10.1145/1022471.1022480
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Nelson - 2004 - Structured programming using processes.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=1022471.1022480
      \endverb
      \keyw{COPL,Erlang,concurrency oriented programming language,erlang,inductive decomposition}
    \endentry
    \entry{Nelson1996}{article}{}
      \name{author}{1}{}{%
        {{hash=04b24cf97eb5c4d5706734d0bbedb007}{Nelson}{N\bibinitperiod}{R}{R\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{04b24cf97eb5c4d5706734d0bbedb007}
      \strng{fullhash}{04b24cf97eb5c4d5706734d0bbedb007}
      \field{sortinit}{N}
      \field{sortinithash}{925374ca63e7594de7fafdb83e64d41d}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{Communications of the ACM}
      \field{title}{{Including queueing effects in Amdahl's law}}
      \field{year}{1996}
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=272715
      \endverb
    \endentry
    \entry{Neumeyer2010}{inproceedings}{}
      \name{author}{4}{}{%
        {{hash=82d3cf1d4ae977d057455630118de79e}{Neumeyer}{N\bibinitperiod}{Leonardo}{L\bibinitperiod}{}{}{}{}}%
        {{hash=451c6acfb57ccd7038a0fa65c00fa6a6}{Robbins}{R\bibinitperiod}{Bruce}{B\bibinitperiod}{}{}{}{}}%
        {{hash=fffc256e3c379ada3d805fefdbf06f8f}{Nair}{N\bibinitperiod}{Anish}{A\bibinitperiod}{}{}{}{}}%
        {{hash=add11469e85ce88f2fe804fa81bae653}{Kesari}{K\bibinitperiod}{Anand}{A\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{5bb3c23ecbbd25ae91f15d608586a803}
      \strng{fullhash}{f7f02b7fb0eaf293610615ff542591b3}
      \field{sortinit}{N}
      \field{sortinithash}{925374ca63e7594de7fafdb83e64d41d}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{S4 is a general-purpose, distributed, scalable, partially fault-tolerant, pluggable platform that allows programmers to easily develop applications for processing continuous unbounded streams of data. Keyed data events are routed with affinity to Processing Elements (PEs), which consume the events and do one or both of the following: (1) emit one or more events which may be consumed by other PEs, (2) publish results. The architecture resembles the Actors model, providing semantics of encapsulation and location transparency, thus allowing applications to be massively concurrent while exposing a simple programming interface to application developers. In this paper, we outline the S4 architecture in detail, describe various applications, including real-life deployments. Our design is primarily driven by large scale applications for data mining and machine learning in a production environment. We show that the S4 design is surprisingly flexible and lends itself to run in large clusters built with commodity hardware.}
      \field{booktitle}{Proceedings - IEEE International Conference on Data Mining, ICDM}
      \field{isbn}{9780769542577}
      \field{issn}{15504786}
      \field{title}{{S4: Distributed stream computing platform}}
      \field{year}{2010}
      \field{pages}{170\bibrangedash 177}
      \range{pages}{8}
      \verb{doi}
      \verb 10.1109/ICDMW.2010.172
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Neumeyer et al. - 2010 - S4 Distributed stream computing platform.pdf:pdf
      \endverb
      \verb{url}
      \verb http://ieeexplore.ieee.org/xpls/abs%7B%5C_%7Dall.jsp?arnumber=5693297
      \endverb
      \keyw{Actors programming model,Complex event processing,Concurrent programming,Data processing,Distributed programming,Map-reduce,Middleware,Parallel programming,Real-time search,Software design,Stream computing}
    \endentry
    \entry{Nicolay2010}{thesis}{}
      \name{author}{1}{}{%
        {{hash=486b2699f07a3db0cb9bac3503e895e9}{Nicolay}{N\bibinitperiod}{Jens}{J\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{486b2699f07a3db0cb9bac3503e895e9}
      \strng{fullhash}{486b2699f07a3db0cb9bac3503e895e9}
      \field{sortinit}{N}
      \field{sortinithash}{925374ca63e7594de7fafdb83e64d41d}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{Citeseer}
      \field{title}{{Automatic Parallelization of Scheme Programs using Static Analysis}}
      \field{type}{phdthesis}
      \field{year}{2010}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Nicolay - 2010 - Automatic Parallelization of Scheme Programs using Static Analysis.pdf:pdf
      \endverb
      \verb{url}
      \verb http://prog.vub.ac.be/%7B~%7Dcderoove/publications/master%7B%5C_%7Dthesis%7B%5C_%7Djens%7B%5C_%7Dnicolay.pdf
      \endverb
    \endentry
    \entry{Numrich1998}{article}{}
      \name{author}{2}{}{%
        {{hash=3fe65b219cd84bcc77eedd63850e4849}{Numrich}{N\bibinitperiod}{Robert\bibnamedelima W.}{R\bibinitperiod\bibinitdelim W\bibinitperiod}{}{}{}{}}%
        {{hash=09427c885be5f5b6701787068880c1cb}{Reid}{R\bibinitperiod}{John}{J\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {ACM}%
      }
      \strng{namehash}{b709c25af9fb6ebf92cf0c8c5c783da8}
      \strng{fullhash}{b709c25af9fb6ebf92cf0c8c5c783da8}
      \field{sortinit}{N}
      \field{sortinithash}{925374ca63e7594de7fafdb83e64d41d}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{issn}{10617264}
      \field{journaltitle}{ACM SIGPLAN Fortran Forum}
      \field{month}{08}
      \field{number}{2}
      \field{title}{{Co-array Fortran for parallel programming}}
      \field{volume}{17}
      \field{year}{1998}
      \field{pages}{1\bibrangedash 31}
      \range{pages}{31}
      \verb{doi}
      \verb 10.1145/289918.289920
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Numrich, Reid - 1998 - Co-array Fortran for parallel programming.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=289918.289920
      \endverb
    \endentry
    \entry{Nvidia2007}{article}{}
      \name{author}{1}{}{%
        {{hash=cfe1785bb6ea3e7150eb098f48f33ae7}{Nvidia}{N\bibinitperiod}{C}{C\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{cfe1785bb6ea3e7150eb098f48f33ae7}
      \strng{fullhash}{cfe1785bb6ea3e7150eb098f48f33ae7}
      \field{sortinit}{N}
      \field{sortinithash}{925374ca63e7594de7fafdb83e64d41d}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{title}{{Compute unified device architecture programming guide}}
      \field{year}{2007}
      \verb{url}
      \verb https://scholar.google.com/scholar?q=CUDA%7B%5C&%7DbtnG=Search%7B%5C&%7Das%7B%5C_%7Dsdt=800000000001%7B%5C&%7Das%7B%5C_%7Dsdtp=on%7B%5C#%7D1
      \endverb
    \endentry
    \entry{Odersky2004}{article}{}
      \name{author}{10}{}{%
        {{hash=887f509975b0ec9ebba9dfae96d0c454}{Odersky}{O\bibinitperiod}{Martin}{M\bibinitperiod}{}{}{}{}}%
        {{hash=874379e1ad66107b5fc3c9da23d63930}{Altherr}{A\bibinitperiod}{Philippe}{P\bibinitperiod}{}{}{}{}}%
        {{hash=cfb000dc0e2f53d6671941e28531d3b6}{Cremet}{C\bibinitperiod}{Vincent}{V\bibinitperiod}{}{}{}{}}%
        {{hash=b770546f3523318ff6a0a8745e44c8db}{Emir}{E\bibinitperiod}{Burak}{B\bibinitperiod}{}{}{}{}}%
        {{hash=d226901dc57276d0e4de6a04721b0ce9}{Maneth}{M\bibinitperiod}{Sebastian}{S\bibinitperiod}{}{}{}{}}%
        {{hash=6d11b4efb9b24e2fceea2547174d6ef6}{Micheloud}{M\bibinitperiod}{Stéphane}{S\bibinitperiod}{}{}{}{}}%
        {{hash=eec2b487b0c97479b7d15f00d9c74c0c}{Mihaylov}{M\bibinitperiod}{Nikolay}{N\bibinitperiod}{}{}{}{}}%
        {{hash=a1e3060f70f865632e1d4e4993a4732c}{Schinz}{S\bibinitperiod}{Michel}{M\bibinitperiod}{}{}{}{}}%
        {{hash=89fb810ac81c89f52d4814c107ae2037}{Stenman}{S\bibinitperiod}{Erik}{E\bibinitperiod}{}{}{}{}}%
        {{hash=60fda1cedc0df6c65993fdf27db7930b}{Zenger}{Z\bibinitperiod}{Matthias}{M\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{3eddd20f7fb1988144c60cd60e2ede32}
      \strng{fullhash}{a2b964db192794733d658b46ae35ea34}
      \field{sortinit}{O}
      \field{sortinithash}{7803d2715d5e795e70382b084ab8d00e}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Scala fuses object-oriented and functional programmin gin a statically typed programming language. It is aimed at teh construction of componetns and component systems. This paper gives an overview of teh Scala language for readers who are familiar with programming methods and programming language design.}
      \field{isbn}{0849331358}
      \field{journaltitle}{System}
      \field{number}{Section 2}
      \field{title}{{An Overview of the Scala Programming Language}}
      \field{year}{2004}
      \field{pages}{1\bibrangedash 130}
      \range{pages}{130}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Odersky et al. - 2004 - An Overview of the Scala Programming Language.pdf:pdf
      \endverb
      \verb{url}
      \verb http://infoscience.epfl.ch/record/52656/files/ScalaOverview.pdf%20http://infoscience.epfl.ch/record/52656/files/ScalaOverview.pdf?version=1
      \endverb
    \endentry
    \entry{Olston2008}{article}{}
      \name{author}{5}{}{%
        {{hash=cc5efd5277c8def4433f72bd6f2279e5}{Olston}{O\bibinitperiod}{Christopher}{C\bibinitperiod}{}{}{}{}}%
        {{hash=85be743b01aead39c2e95bfc9228cc8b}{Reed}{R\bibinitperiod}{Benjamin}{B\bibinitperiod}{}{}{}{}}%
        {{hash=99bacd74e1852efe72382f4fa520b002}{Srivastava}{S\bibinitperiod}{Utkarsh}{U\bibinitperiod}{}{}{}{}}%
        {{hash=8b41fe0754fd3864ac9f18e92f6daf24}{Kumar}{K\bibinitperiod}{Ravi}{R\bibinitperiod}{}{}{}{}}%
        {{hash=1be6b0855ca65a591e8efd28fa72ebc6}{Tomkins}{T\bibinitperiod}{Andrew}{A\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {New York, New York, USA}%
      }
      \list{publisher}{1}{%
        {ACM Press}%
      }
      \strng{namehash}{06add85287ebdb971da8f1829e396a42}
      \strng{fullhash}{8e9bd850d9829ee9ea966a3ace77818f}
      \field{sortinit}{O}
      \field{sortinithash}{7803d2715d5e795e70382b084ab8d00e}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{There is a growing need for ad-hoc analysis of extremely large data sets, especially at internet companies where inno- vation critically depends on being able to analyze terabytes of data collected every day. Parallel database products, e.g., Teradata, offer a solution, but are usually prohibitively ex- pensive at this scale. Besides, many of the people who ana- lyze this data are entrenched procedural programmers, who find the declarative, SQL style to be unnatural. The success of the more procedural map-reduce programming model, and its associated scalable implementations on commodity hard- ware, is evidence of the above. However, the map-reduce paradigm is too low-level and rigid, and leads to a great deal of custom user code that is hard to maintain, and reuse. We describe a new language called Pig Latin that we have designed to fit in a sweet spot between the declarative style of SQL, and the low-level, procedural style of map-reduce. The accompanying system, Pig, is fully implemented, and compiles Pig Latin into physical plans that are executed over Hadoop, an open-source, map-reduce implementation. We give a few examples of how engineers at Yahoo! are using Pig to dramatically reduce the time required for the develop- ment and execution of their data analysis tasks, compared to using Hadoop directly. We also report on a novel debugging environment that comes integrated with Pig, that can lead to even higher productivity gains. Pig is an open-source, Apache-incubator project, and available for general use.}
      \field{isbn}{9781605581026}
      \field{issn}{07308078}
      \field{journaltitle}{Proceedings of the 2008 ACM SIGMOD international conference on Management of data - SIGMOD '08}
      \field{month}{06}
      \field{title}{{Pig Latin: A Not-So-Foreign Language for Data Processing}}
      \field{year}{2008}
      \field{pages}{1099}
      \range{pages}{1}
      \verb{doi}
      \verb 10.1145/1376616.1376726
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Olston et al. - 2008 - Pig Latin A Not-So-Foreign Language for Data Processing.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=1376616.1376726
      \endverb
      \keyw{dataflow language,pig latin}
    \endentry
    \entry{Pai1999}{misc}{}
      \name{author}{3}{}{%
        {{hash=0805cf9a0c74c70c97f1f89b6d2058ac}{Pai}{P\bibinitperiod}{Vivek\bibnamedelima S}{V\bibinitperiod\bibinitdelim S\bibinitperiod}{}{}{}{}}%
        {{hash=fb43649db15953eb2164df87bc5034a3}{Druschel}{D\bibinitperiod}{Peter}{P\bibinitperiod}{}{}{}{}}%
        {{hash=5915bd38485ffd37e32e01d1e3d46795}{Zwaenepoel}{Z\bibinitperiod}{Willy}{W\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{3b0c7ecb194427b7795f333bb08281ac}
      \strng{fullhash}{3b0c7ecb194427b7795f333bb08281ac}
      \field{sortinit}{P}
      \field{sortinithash}{c0a4896d0e424f9ca4d7f14f2b3428e7}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{This paper presents the design of a new Web server architecture called the asymmetric multi-process event- driven (AMPED) architecture, and evaluates the perfor- mance of an implementation of this architecture, the Flash Web server. The Flash Web server combines the high performance of single-process event-driven servers on cached workloads with the performance of multi- process and multi-threaded servers on disk-bound work- loads. Furthermore, the Flash Web server is easily portable since it achieves these results using facilities available in all modern operating systems. The performance of different Web server architec- tures is evaluated in the context of a single implemen- tation in order to quantify the impact of a server's con- currency architecture on its performance. Furthermore, the performance of Flash is compared with two widely- used Web servers, Apache and Zeus. Results indicate that Flash can match or exceed the performance of exist- ing Web servers by up to 50{\%} across a wide range of real workloads. We also present results that show the contri- bution of various optimizations embedded in Flash.}
      \field{booktitle}{Proceedings of the 1999 USENIX Annual Technical Conference}
      \field{title}{{Flash : An Efficient and Portable Web Server}}
      \field{urlday}{04}
      \field{urlmonth}{03}
      \field{urlyear}{2015}
      \field{year}{1999}
      \field{pages}{14}
      \range{pages}{1}
      \verb{doi}
      \verb 10.1.1.119.6738
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Pai, Druschel, Zwaenepoel - 1999 - Flash An Efficient and Portable Web Server.pdf:pdf
      \endverb
      \verb{url}
      \verb https://www.usenix.org/event/usenix99/full%7B%5C_%7Dpapers/pai/pai%7B%5C_%7Dhtml/node7.html%20https://www.usenix.org/legacy/event/usenix99/full%7B%5C_%7Dpapers/pai/pai.pdf
      \endverb
      \keyw{Flash,event}
    \endentry
    \entry{Parnas1972}{article}{}
      \name{author}{1}{}{%
        {{hash=d97dc467a86499162b9f9baa9fdb1c4c}{Parnas}{P\bibinitperiod}{D.\bibnamedelimi L.}{D\bibinitperiod\bibinitdelim L\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{d97dc467a86499162b9f9baa9fdb1c4c}
      \strng{fullhash}{d97dc467a86499162b9f9baa9fdb1c4c}
      \field{sortinit}{P}
      \field{sortinithash}{c0a4896d0e424f9ca4d7f14f2b3428e7}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{This paper discusses modularization as a mechanism for improving the flexibility and comprehensibility of a system while allowing the shortening of its development time. The effectiveness of a $\backslash$"modularization $\backslash$" is dependent upon the criteria used in dividing the system into modules. A system design problem is presented and both a conventional and unconventional decomposition are described. It is shown that the unconventional decompositions have distinct advantages for the goals outlined. The criteria used in arriving at the decom-positions are discussed. The unconventional decomposi-tion, if implemented with the conventional assumption that a module consists of one or more subroutines, will be less efficient in most cases. An alternative approach to implementation which does not have this effect is sketched.}
      \field{isbn}{0917072146}
      \field{issn}{00010782}
      \field{journaltitle}{Communications of the ACM}
      \field{number}{12}
      \field{title}{{On the criteria to be used in decomposing systems into modules}}
      \field{volume}{15}
      \field{year}{1972}
      \field{pages}{1053\bibrangedash 1058}
      \range{pages}{6}
      \verb{doi}
      \verb 10.1145/361598.361623
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Parnas - 1972 - On the criteria to be used in decomposing systems into modules.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=361623%20http://portal.acm.org/citation.cfm?doid=361598.361623
      \endverb
      \keyw{KWIC index,modularity,modules,software,software design,software engineering}
    \endentry
    \entry{Power2010}{article}{}
      \name{author}{2}{}{%
        {{hash=83a8d509b9f0989ca28e0c9c93a03b98}{Power}{P\bibinitperiod}{R}{R\bibinitperiod}{}{}{}{}}%
        {{hash=ef065b28c31984323fd6d3483d29aafd}{Li}{L\bibinitperiod}{J}{J\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{9ea179ea4cfd4cacfdf18c3f85db7530}
      \strng{fullhash}{9ea179ea4cfd4cacfdf18c3f85db7530}
      \field{sortinit}{P}
      \field{sortinithash}{c0a4896d0e424f9ca4d7f14f2b3428e7}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{OSDI}
      \field{title}{{Piccolo: Building Fast, Distributed Programs with Partitioned Tables.}}
      \field{year}{2010}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Power, Li - 2010 - Piccolo Building Fast, Distributed Programs with Partitioned Tables.pdf:pdf
      \endverb
      \verb{url}
      \verb http://static.usenix.org/event/osdi10/tech/full%7B%5C_%7Dpapers/Power.pdf
      \endverb
    \endentry
    \entry{Qian2013}{article}{}
      \name{author}{5}{}{%
        {{hash=e4c2298f722ea49bb161bee0bbe2ff2f}{Qian}{Q\bibinitperiod}{Z}{Z\bibinitperiod}{}{}{}{}}%
        {{hash=655b6a87a756b5652aefc774a322ac3f}{He}{H\bibinitperiod}{Y}{Y\bibinitperiod}{}{}{}{}}%
        {{hash=8dbf669a4d0ac247b99b734a04c4da29}{Su}{S\bibinitperiod}{C}{C\bibinitperiod}{}{}{}{}}%
        {{hash=de75d8e160ca13e48c143cc033f970f1}{Wu}{W\bibinitperiod}{Z}{Z\bibinitperiod}{}{}{}{}}%
        {{hash=98a75f0b76716a8f4124a02e436bc65a}{Zhu}{Z\bibinitperiod}{H}{H\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{c067323fbb8c74c42ad5bdcbd43d5bfb}
      \strng{fullhash}{e9d37a529303dc5ef8f72ba575a0cf9b}
      \field{sortinit}{Q}
      \field{sortinithash}{15867262911a166ca2270ec58a0e3fe9}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{Proceedings of the 8th ACM European Conference on Computer Systems (EuroSys '13)}
      \field{title}{{Timestream: Reliable stream computation in the cloud}}
      \field{year}{2013}
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=2465353
      \endverb
    \endentry
    \entry{Radoi2014}{article}{}
      \name{author}{4}{}{%
        {{hash=3da594c7344ac4bfd419cb1f23e5b714}{Radoi}{R\bibinitperiod}{C}{C\bibinitperiod}{}{}{}{}}%
        {{hash=448bb5d68e3d92d76670a470198427d6}{Fink}{F\bibinitperiod}{SJ}{S\bibinitperiod}{}{}{}{}}%
        {{hash=6c5329d18f21bda5c7a98ae3dfa10987}{Rabbah}{R\bibinitperiod}{R}{R\bibinitperiod}{}{}{}{}}%
        {{hash=e436e015208fd2bea30687567561df44}{Sridharan}{S\bibinitperiod}{M}{M\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{72976085d7d69f9924448ae2a31ae0c5}
      \strng{fullhash}{9a4a17f3a4d8f46622901b03a6db7487}
      \field{sortinit}{R}
      \field{sortinithash}{c7387613477035a752d935acfc3e3ea2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{Proceedings of the 2014 ACM International Conference on Object Oriented Programming Systems Languages and Applications}
      \field{title}{{Translating imperative code to MapReduce}}
      \field{year}{2014}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Radoi et al. - 2014 - Translating imperative code to MapReduce.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=2660228
      \endverb
    \endentry
    \entry{Ragan-Kelley2013}{article}{}
      \name{author}{6}{}{%
        {{hash=cf453bb48b58aa99f010a78745b2a5a4}{Ragan-Kelley}{R\bibinithyphendelim K\bibinitperiod}{Jonathan}{J\bibinitperiod}{}{}{}{}}%
        {{hash=d9920ffa161bb88a78dfee84636fb7be}{Adams}{A\bibinitperiod}{Andrew}{A\bibinitperiod}{}{}{}{}}%
        {{hash=13acbde1d95e381ae8b4272e36d1982b}{Paris}{P\bibinitperiod}{Sylvain}{S\bibinitperiod}{}{}{}{}}%
        {{hash=524f75af9d9e2501adb63051d530e308}{Durand}{D\bibinitperiod}{Frédo}{F\bibinitperiod}{}{}{}{}}%
        {{hash=4e74e92ac258a7344d22dd0661d08dd2}{Barnes}{B\bibinitperiod}{Connelly}{C\bibinitperiod}{}{}{}{}}%
        {{hash=dcb28881d25e46cc6308d0471f0df07c}{Amarasinghe}{A\bibinitperiod}{Saman}{S\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{15bf0b66e0525145f317459677c18ee5}
      \strng{fullhash}{d27f424988d614224bd931459cbfb43b}
      \field{sortinit}{R}
      \field{sortinithash}{c7387613477035a752d935acfc3e3ea2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Image processing pipelines combine the challenges of stencil computations and stream programs. They are composed of large graphs of different stencil stages, as well as complex reductions, and stages with global or data-dependent access patterns. Because}
      \field{isbn}{9781450320146}
      \field{issn}{03621340}
      \field{journaltitle}{Proceedings of the 34th ACM SIGPLAN Conference on Programming Language Design and Implementation}
      \field{title}{{Halide: A Language and Compiler for Optimizing Parallelism, Locality, and Recomputation in Image Processing Pipelines}}
      \field{year}{2013}
      \field{pages}{519\bibrangedash 530}
      \range{pages}{12}
      \verb{doi}
      \verb 10.1145/2491956.2462176
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Ragan-Kelley et al. - 2013 - Halide A Language and Compiler for Optimizing Parallelism, Locality, and Recomputation in Image Processing.pdf:pdf
      \endverb
      \verb{url}
      \verb http://people.csail.mit.edu/jrk/halide-pldi13.pdf%20http://doi.acm.org/10.1145/2491956.2462176
      \endverb
      \keyw{autotuning,compiler,domain specific language,gpu,image processing,locality,optimization,parallelism,redundant computation,vectorization}
    \endentry
    \entry{Ramachandran2015}{inproceedings}{}
      \name{author}{2}{}{%
        {{hash=9e4736adcc99ffc7fdf8a876eeeb6aab}{Ramachandran}{R\bibinitperiod}{Arunmoezhi}{A\bibinitperiod}{}{}{}{}}%
        {{hash=bcfe6627645b3ff29ab27a6a5587596c}{Mittal}{M\bibinitperiod}{Neeraj}{N\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {New York, New York, USA}%
      }
      \list{publisher}{1}{%
        {ACM Press}%
      }
      \strng{namehash}{6d061944296ccad42cfa3a555ee969b9}
      \strng{fullhash}{6d061944296ccad42cfa3a555ee969b9}
      \field{sortinit}{R}
      \field{sortinithash}{c7387613477035a752d935acfc3e3ea2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{Proceedings of the 2015 International Conference on Distributed Computing and Networking - ICDCN '15}
      \field{isbn}{9781450329286}
      \field{month}{01}
      \field{title}{{A Fast Lock-Free Internal Binary Search Tree}}
      \field{year}{2015}
      \field{pages}{1\bibrangedash 10}
      \range{pages}{10}
      \verb{doi}
      \verb 10.1145/2684464.2684472
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=2684464.2684472
      \endverb
      \keyw{Binary,Concurrent Data Structure,Lock-Free Algorithm,Search Tree}
    \endentry
    \entry{Randall1998}{thesis}{}
      \name{author}{1}{}{%
        {{hash=6e9a052c7dc2dff5b1dd357739547037}{Randall}{R\bibinitperiod}{K.H.}{K\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{6e9a052c7dc2dff5b1dd357739547037}
      \strng{fullhash}{6e9a052c7dc2dff5b1dd357739547037}
      \field{sortinit}{R}
      \field{sortinithash}{c7387613477035a752d935acfc3e3ea2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{This thesis describes Cilk, a parallel multithreaded language for$\backslash$nprogramming contemporary shared memory multiprocessors (SMP's). Cilk$\backslash$nis a simple extension of C which provides constructs for parallel$\backslash$ncontrol and synchronization. Cilk imposes very low overheads--- the$\backslash$ntypical cost of spawning a parallel thread is only between 2 and$\backslash$n6 times the cost of a C function call on a variety of contemporary$\backslash$nmachines. Many Cilk programs run on one processor with virtually$\backslash$nno degradation compared to equivalent C programs. We present the$\backslash$n"work-first " principle which guided the design of Cilk's$\backslash$nscheduler and two consequences of this principle, a novel "two-clone"$\backslash$ncompilation strategy and a Dijkstra-like mutual-exclusion protocol$\backslash$nfor implementing the ready queue in the work-stealing scheduler.$\backslash$nTo facilitate debugging of Cilk programs, Cilk provides a tool called$\backslash$nthe Nondeterminator-2 which finds nondeterministic bugs called "data$\backslash$nraces". We present two algorithms, All-Sets and Brelly, used$\backslash$nby the Nondeterminator-2 for finding data races. The All-Sets algorithm$\backslash$nis exact but can sometimes have poor performance; the Brelly algorithm,$\backslash$nby imposing a locking discipline on the programmer, is guaranteed}
      \field{booktitle}{Engineering}
      \field{title}{{Cilk: Efficient Multithreaded Computing}}
      \field{type}{phdthesis}
      \field{volume}{30}
      \field{year}{1998}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Randall - 1998 - Cilk Efficient Multithreaded Computing.pdf:pdf
      \endverb
      \verb{url}
      \verb http://supertech.csail.mit.edu/papers/randall-phdthesis.pdf%20http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.139.6664%7B%5C&%7Drep=rep1%7B%5C&%7Dtype=pdf
      \endverb
    \endentry
    \entry{Raychev2013}{article}{}
      \name{author}{3}{}{%
        {{hash=4efd151ade022f288ebc0a77496a75e8}{Raychev}{R\bibinitperiod}{Veselin}{V\bibinitperiod}{}{}{}{}}%
        {{hash=3be48f15f1478336ea1bc8a71ef4fce4}{Vechev}{V\bibinitperiod}{Martin}{M\bibinitperiod}{}{}{}{}}%
        {{hash=dfe638eab9b72301e5e8597133f131b0}{Sridharan}{S\bibinitperiod}{Manu}{M\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {ACM}%
      }
      \strng{namehash}{eba0f883831919154add7c7c3d1bfed4}
      \strng{fullhash}{eba0f883831919154add7c7c3d1bfed4}
      \field{sortinit}{R}
      \field{sortinithash}{c7387613477035a752d935acfc3e3ea2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Like shared-memory multi-threaded programs, event-driven programs such as client-side web applications are susceptible to data races that are hard to reproduce and debug. Race detection for such programs is hampered by their pervasive use of ad hoc synchronization, which can lead to a prohibitive number of false positives. Race detection also faces a scalability challenge, as a large number of short-running event handlers can quickly overwhelm standard vector-clock-based techniques. This paper presents several novel contributions that address both of these challenges. First, we introduce race coverage, a systematic method for exposing ad hoc synchronization and other (potentially harmful) races to the user, significantly reducing false positives. Second, we present an efficient connectivity algorithm for computing race coverage. The algorithm is based on chain decomposition and leverages the structure of event-driven programs to dramatically decrease the overhead of vector clocks. We implemented our techniques in a tool called EventRacer and evaluated it on a number of public web sites. The results indicate substantial performance and precision improvements of our approach over the state-of-the-art. Using EventRacer, we found many harmful races, most of which are beyond the reach of current techniques.}
      \field{isbn}{9781450323741}
      \field{issn}{0362-1340}
      \field{journaltitle}{SIGPLAN Not.}
      \field{month}{11}
      \field{number}{10}
      \field{title}{{Effective Race Detection for Event-driven Programs}}
      \field{volume}{48}
      \field{year}{2013}
      \field{pages}{151\bibrangedash 166}
      \range{pages}{16}
      \verb{doi}
      \verb 10.1145/2544173.2509538
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Raychev, Vechev, Sridharan - 2013 - Effective Race Detection for Event-driven Programs.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=2544173.2509538%20http://doi.acm.org/10.1145/2544173.2509538
      \endverb
      \keyw{asynchrony,concurrency,nondeterminism,race detection,web}
    \endentry
    \entry{Reed2012}{article}{}
      \name{author}{1}{}{%
        {{hash=1e6b7243705eded92181b982124b167b}{Reed}{R\bibinitperiod}{DP}{D\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{1e6b7243705eded92181b982124b167b}
      \strng{fullhash}{1e6b7243705eded92181b982124b167b}
      \field{sortinit}{R}
      \field{sortinithash}{c7387613477035a752d935acfc3e3ea2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{HotPar}
      \field{title}{{" Simultaneous" Considered Harmful: Modular Parallelism.}}
      \field{year}{2012}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Reed - 2012 - Simultaneous Considered Harmful Modular Parallelism.pdf:pdf
      \endverb
      \verb{url}
      \verb https://scholar.google.com/scholar?q=%7B%%7DE2%7B%%7D80%7B%%7D9CSimultaneous%7B%%7DE2%7B%%7D80%7B%%7D9D+Considered+Harmful%7B%%7D3A+Modular+Parallelism%7B%5C&%7DbtnG=%7B%5C&%7Dhl=en%7B%5C&%7Das%7B%5C_%7Dsdt=0%7B%%7D2C39%7B%5C#%7D0
      \endverb
    \endentry
    \entry{Rees1986}{article}{}
      \name{author}{2}{}{%
        {{hash=3f02d2c473768d606dc76542a4489228}{Rees}{R\bibinitperiod}{J}{J\bibinitperiod}{}{}{}{}}%
        {{hash=e12895686b6a3548122e4f68f2e762ae}{Clinger}{C\bibinitperiod}{W}{W\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {ACM}%
      }
      \strng{namehash}{5aadf9ba3354b9723648ca0092fbc1a8}
      \strng{fullhash}{5aadf9ba3354b9723648ca0092fbc1a8}
      \field{sortinit}{R}
      \field{sortinithash}{c7387613477035a752d935acfc3e3ea2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{issn}{03621340}
      \field{journaltitle}{ACM SIGPLAN Notices}
      \field{month}{12}
      \field{number}{12}
      \field{title}{{Revised report on the algorithmic language scheme}}
      \field{volume}{21}
      \field{year}{1986}
      \field{pages}{37\bibrangedash 79}
      \range{pages}{43}
      \verb{doi}
      \verb 10.1145/15042.15043
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Rees, Clinger - 1986 - Revised report on the algorithmic language scheme.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=15042.15043
      \endverb
    \endentry
    \entry{Rinard1996}{article}{}
      \name{author}{2}{}{%
        {{hash=f519a02dec72921a1f1a0915b713c2be}{Rinard}{R\bibinitperiod}{MC}{M\bibinitperiod}{}{}{}{}}%
        {{hash=69ed45648dfcab5160262ebb1e3b4cc8}{Diniz}{D\bibinitperiod}{PC}{P\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{786fe1d699d50508c4ff07ec9e9e13d0}
      \strng{fullhash}{786fe1d699d50508c4ff07ec9e9e13d0}
      \field{sortinit}{R}
      \field{sortinithash}{c7387613477035a752d935acfc3e3ea2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{ACM SIGPLAN Notices}
      \field{title}{{Commutativity analysis: A new analysis framework for parallelizing compilers}}
      \field{year}{1996}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Rinard, Diniz - 1996 - Commutativity analysis A new analysis framework for parallelizing compilers.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=231390
      \endverb
    \endentry
    \entry{Sackman1968}{article}{}
      \name{author}{3}{}{%
        {{hash=564fc80017e24a14f2b8ef2220bbe8ff}{Sackman}{S\bibinitperiod}{H.}{H\bibinitperiod}{}{}{}{}}%
        {{hash=423d881d139c1a04362bf6c1578520e0}{Erikson}{E\bibinitperiod}{W.\bibnamedelimi J.}{W\bibinitperiod\bibinitdelim J\bibinitperiod}{}{}{}{}}%
        {{hash=68d6087286b3c4b55bffb1b646dd1c56}{Grant}{G\bibinitperiod}{E.\bibnamedelimi E.}{E\bibinitperiod\bibinitdelim E\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{f1d7237ac5af9f66fcd247147af7fd26}
      \strng{fullhash}{f1d7237ac5af9f66fcd247147af7fd26}
      \field{sortinit}{S}
      \field{sortinithash}{fd1e7c5ab79596b13dbbb67f8d70fb5a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Two exploratory experiments were conducted at System Development Corporation to compare debugging performonce of programmers working under conditions of online and offline access to a computer. These are the first known studies that measure programmers' performance under controlled conditions for standard tasks. Statistically significant results of both experiments indicated faster debugging under online conditions, but perhaps the most important practical finding involves the striking individual differences tn programmer performance. Methodological problems encountered in designing and conducting these experiments are described; limitations of the findings are pointed out; hypotheses are presented to account for results; and suggestions ore made for further research.}
      \field{isbn}{0818607513}
      \field{issn}{0001-0782}
      \field{journaltitle}{Communi}
      \field{number}{1}
      \field{title}{{Exploratory Experimental Studies Comparing Online and Offline Programming Performance}}
      \field{volume}{11}
      \field{year}{1968}
      \field{pages}{3\bibrangedash 11}
      \range{pages}{9}
      \verb{doi}
      \verb 10.1145/362851.362858
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Sackman, Erikson, Grant - 1968 - Exploratory Experimental Studies Comparing Online and Offline Programming Performance.pdf:pdf
      \endverb
      \keyw{and phrases,botch processing,computer communication,debugging,effectiveness,empirical studies,factor analysis application,offline performance,online vs,programmer,programming cost effectiveness 1,programming experimental,progromming performance,time sharing vs}
    \endentry
    \entry{Salmito2013}{article}{}
      \name{author}{3}{}{%
        {{hash=50773ff6a19678842ba8000a2dadaf41}{Salmito}{S\bibinitperiod}{Tiago}{T\bibinitperiod}{}{}{}{}}%
        {{hash=faed3c5e4a8ac83eafbecfbc98a8331f}{Moura}{M\bibinitperiod}{Ana\bibnamedelima Lucia}{A\bibinitperiod\bibinitdelim L\bibinitperiod}{de}{d\bibinitperiod}{}{}}%
        {{hash=898f2b016480383e4d85c491e14290e2}{Rodriguez}{R\bibinitperiod}{Noemi}{N\bibinitperiod}{}{}{}{}}%
      }
      \list{language}{1}{%
        {English}%
      }
      \list{publisher}{1}{%
        {IEEE}%
      }
      \strng{namehash}{efd32dcf713cc2124b33a60d93929463}
      \strng{fullhash}{efd32dcf713cc2124b33a60d93929463}
      \field{sortinit}{S}
      \field{sortinithash}{fd1e7c5ab79596b13dbbb67f8d70fb5a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{isbn}{9780769551173}
      \field{issn}{0190-3918}
      \field{journaltitle}{2013 42nd International Conference on Parallel Processing}
      \field{month}{10}
      \field{title}{{A Flexible Approach to Staged Events}}
      \field{year}{2013}
      \field{pages}{661\bibrangedash 670}
      \range{pages}{10}
      \verb{doi}
      \verb 10.1109/ICPP.2013.80
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Salmito, Moura, Rodriguez - 2013 - A Flexible Approach to Staged Events.pdf:pdf
      \endverb
      \verb{url}
      \verb http://ieeexplore.ieee.org/articleDetails.jsp?arnumber=6687404%20http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6687404
      \endverb
      \keyw{-concurrency,event-driven,stages,threads}
    \endentry
    \entry{Salmito2014}{article}{}
      \name{author}{3}{}{%
        {{hash=50773ff6a19678842ba8000a2dadaf41}{Salmito}{S\bibinitperiod}{Tiago}{T\bibinitperiod}{}{}{}{}}%
        {{hash=d75e1c617676484384df4fbe83555424}{Moura}{M\bibinitperiod}{Ana\bibnamedelima Lúcia}{A\bibinitperiod\bibinitdelim L\bibinitperiod}{de}{d\bibinitperiod}{}{}}%
        {{hash=898f2b016480383e4d85c491e14290e2}{Rodriguez}{R\bibinitperiod}{Noemi}{N\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{07020fd570d8505657d11975074a2615}
      \strng{fullhash}{07020fd570d8505657d11975074a2615}
      \field{sortinit}{S}
      \field{sortinithash}{fd1e7c5ab79596b13dbbb67f8d70fb5a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{issn}{0920-8542}
      \field{journaltitle}{The Journal of Supercomputing}
      \field{month}{01}
      \field{title}{{A stepwise approach to developing staged applications}}
      \field{year}{2014}
      \verb{doi}
      \verb 10.1007/s11227-014-1110-4
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Salmito, de Moura, Rodriguez - 2014 - A stepwise approach to developing staged applications.pdf:pdf
      \endverb
      \verb{url}
      \verb http://link.springer.com/10.1007/s11227-014-1110-4
      \endverb
    \endentry
    \entry{Shivers1991}{thesis}{}
      \name{author}{1}{}{%
        {{hash=df5b908b45fbe707f59101471bf90c96}{Shivers}{S\bibinitperiod}{O.}{O\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{df5b908b45fbe707f59101471bf90c96}
      \strng{fullhash}{df5b908b45fbe707f59101471bf90c96}
      \field{sortinit}{S}
      \field{sortinithash}{fd1e7c5ab79596b13dbbb67f8d70fb5a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Programswritten in powerful, higher-order languages like Scheme,ML, and CommonLisp should run as fast as their FORTRAN and C counterparts. They should, but they don't. A major reason is the level of optimisation applied to these two classes of languages. Many FORTRAN and C compilers employ an arsenal of sophisticated global optimisations that depend upon data-flow analysis: common-subexpression elimination, loop-invariant detection, induction-variable elimination, and many, many more. Compilers for higher- order languages do not provide these optimisations. Without them, Scheme, LISP and ML compilers are doomed to produce code that runs slower than their FORTRAN and C counterparts. The problem is the lack of an explicit control-flow graph at compile time, somethingwhich traditional data-flow analysis techniques require. In this dissertation, I present a technique for recovering the control-flowgraph of aScheme programat compile time. I give examples of how this information can be used to perform several data-flow analysis optimisations, including copy propagation, induction-variable elimination, useless-variable elimination, and type recovery. The analysis is defined in termsof a non-standard semantic interpretation. The denotational semantics is carefully developed, and several theorems establishing the correctness of the semantics and the implementing algorithms are proven.}
      \field{booktitle}{Contract}
      \field{number}{May}
      \field{title}{{Control-flow analysis of higher-order languages}}
      \field{type}{phdthesis}
      \field{year}{1991}
      \field{pages}{1\bibrangedash 186}
      \range{pages}{186}
      \verb{url}
      \verb http://www.ccs.neu.edu/home/shivers/papers/diss.pdf%20http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.9.3971%7B%5C&%7Drep=rep1%7B%5C&%7Dtype=pdf
      \endverb
    \endentry
    \entry{Simon1962}{article}{}
      \name{author}{1}{}{%
        {{hash=eaa46a15c84d0362962daf998d3e285b}{Simon}{S\bibinitperiod}{Herbert\bibnamedelima A.}{H\bibinitperiod\bibinitdelim A\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{eaa46a15c84d0362962daf998d3e285b}
      \strng{fullhash}{eaa46a15c84d0362962daf998d3e285b}
      \field{sortinit}{S}
      \field{sortinithash}{fd1e7c5ab79596b13dbbb67f8d70fb5a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{The purpose of this article is to illustrate, through the example of human dynamics, that a thorough understanding of complex systems requires an understanding of network dynamics as well as network topology and architecture. After an overview of the topology of complex networks, such as the Internet and the WWW, data-driven models for human dynamics are given. These models motivate the study of network dynamics and suggest that complexity theory must incorporate the interactions between dynamics and structure. The article also advances the notion that an understanding of network dynamics is facilitated by the availability of large data sets and analysis tools gained from the study of network structure.}
      \field{eprintclass}{cond-mat}
      \field{eprinttype}{arXiv}
      \field{isbn}{1066-033X}
      \field{issn}{02721708}
      \field{journaltitle}{Proceedings of the American Philosophical Societyty}
      \field{number}{106}
      \field{title}{{The architecture of complexity}}
      \field{volume}{6}
      \field{year}{1962}
      \field{pages}{467\bibrangedash 482}
      \range{pages}{16}
      \verb{doi}
      \verb 10.1109/MCS.2007.384127
      \endverb
      \verb{eprint}
      \verb 0205649
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Simon - 1962 - The architecture of complexity.pdf:pdf
      \endverb
      \verb{url}
      \verb http://www.cs.brandeis.edu/%7B~%7Dcs146a/handouts/papers/simon-complexity.pdf
      \endverb
    \endentry
    \entry{Slaughter2015}{article}{}
      \name{author}{4}{}{%
        {{hash=bf56b91f48eefc569354c6e8628206c9}{Slaughter}{S\bibinitperiod}{Elliott}{E\bibinitperiod}{}{}{}{}}%
        {{hash=f92a008287748195e37c0c5f4af1d1f0}{Lee}{L\bibinitperiod}{Wonchan}{W\bibinitperiod}{}{}{}{}}%
        {{hash=63f01523432d1dc0b061f6fee6d7e9cb}{Treichler}{T\bibinitperiod}{Sean}{S\bibinitperiod}{}{}{}{}}%
        {{hash=e3aaf99037fdbf7a9ce99497cd543989}{Bauer}{B\bibinitperiod}{Michael}{M\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{74c3c9e956dabecaf9a63b6c5410ae9c}
      \strng{fullhash}{2be9a177e4f676da0842a18afffe7f03}
      \field{sortinit}{S}
      \field{sortinithash}{fd1e7c5ab79596b13dbbb67f8d70fb5a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{isbn}{9781450337236}
      \field{journaltitle}{SC}
      \field{title}{{Regent : A High-Productivity Programming Language for HPC with Logical Regions}}
      \field{year}{2015}
      \verb{doi}
      \verb 10.1145/2807591.2807629
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Slaughter et al. - 2015 - Regent A High-Productivity Programming Language for HPC with Logical Regions.pdf:pdf
      \endverb
      \verb{url}
      \verb http://legion.stanford.edu/pdfs/regent2015.pdf
      \endverb
      \keyw{legion,logical regions,regent,task-based runtimes}
    \endentry
    \entry{Smith2011}{article}{}
      \name{author}{1}{}{%
        {{hash=d11a82bdedcb4aa32fb632be969c943d}{Smith}{S\bibinitperiod}{GD}{G\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{d11a82bdedcb4aa32fb632be969c943d}
      \strng{fullhash}{d11a82bdedcb4aa32fb632be969c943d}
      \field{sortinit}{S}
      \field{sortinithash}{fd1e7c5ab79596b13dbbb67f8d70fb5a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{title}{{Local reasoning about web programs}}
      \field{year}{2011}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Smith - 2011 - Local reasoning about web programs.pdf:pdf
      \endverb
      \verb{url}
      \verb https://www.doc.ic.ac.uk/%7B~%7Dpg/papers/Gareth%7B%5C_%7DSmith%7B%5C_%7DThesis.pdf
      \endverb
    \endentry
    \entry{Sridharan2012}{inproceedings}{}
      \name{author}{3}{}{%
        {{hash=e436e015208fd2bea30687567561df44}{Sridharan}{S\bibinitperiod}{M}{M\bibinitperiod}{}{}{}{}}%
        {{hash=9a0ef26f895da64ddb251bc19463e921}{Dolby}{D\bibinitperiod}{J}{J\bibinitperiod}{}{}{}{}}%
        {{hash=61bf947a75b2f1172dc03c0549360d2c}{Chandra}{C\bibinitperiod}{S}{S\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{a56e94c92585b5dc84d5ab09e5563d93}
      \strng{fullhash}{a56e94c92585b5dc84d5ab09e5563d93}
      \field{sortinit}{S}
      \field{sortinithash}{fd1e7c5ab79596b13dbbb67f8d70fb5a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{ECOOP 2012–Object-Oriented Programming.}
      \field{title}{{Correlation tracking for points-to analysis of JavaScript}}
      \field{year}{2012}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Sridharan, Dolby, Chandra - 2012 - Correlation tracking for points-to analysis of JavaScript.pdf:pdf
      \endverb
      \verb{url}
      \verb http://link.springer.com/chapter/10.1007/978-3-642-31057-7%7B%5C_%7D20
      \endverb
    \endentry
    \entry{Stevens1974}{article}{}
      \name{author}{3}{}{%
        {{hash=f37150eb91611003ab74519cbcd20f8d}{Stevens}{S\bibinitperiod}{W.\bibnamedelimi P.}{W\bibinitperiod\bibinitdelim P\bibinitperiod}{}{}{}{}}%
        {{hash=11a8625a01da6f74a11b9655cfa3fffa}{Myers}{M\bibinitperiod}{G.\bibnamedelimi J.}{G\bibinitperiod\bibinitdelim J\bibinitperiod}{}{}{}{}}%
        {{hash=764e5419b527fdefabceb9302f8d897a}{Constantine}{C\bibinitperiod}{L.\bibnamedelimi L.}{L\bibinitperiod\bibinitdelim L\bibinitperiod}{}{}{}{}}%
      }
      \list{language}{1}{%
        {English}%
      }
      \list{publisher}{1}{%
        {IBM}%
      }
      \strng{namehash}{ac3e83f06f83f5affa9b818264597daf}
      \strng{fullhash}{ac3e83f06f83f5affa9b818264597daf}
      \field{sortinit}{S}
      \field{sortinithash}{fd1e7c5ab79596b13dbbb67f8d70fb5a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{issn}{0018-8670}
      \field{journaltitle}{IBM Systems Journal}
      \field{number}{2}
      \field{title}{{Structured design}}
      \field{volume}{13}
      \field{year}{1974}
      \field{pages}{115\bibrangedash 139}
      \range{pages}{25}
      \verb{doi}
      \verb 10.1147/sj.132.0115
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Stevens, Myers, Constantine - 1974 - Structured design.pdf:pdf
      \endverb
      \verb{url}
      \verb http://ieeexplore.ieee.org/articleDetails.jsp?arnumber=5388187
      \endverb
    \endentry
    \entry{Stone2010}{article}{}
      \name{author}{3}{}{%
        {{hash=32a71c01328d062d7e5701ee2146739e}{Stone}{S\bibinitperiod}{John\bibnamedelima E.}{J\bibinitperiod\bibinitdelim E\bibinitperiod}{}{}{}{}}%
        {{hash=30dac6b3d3cb5f8345e4ae675668be91}{Gohara}{G\bibinitperiod}{David}{D\bibinitperiod}{}{}{}{}}%
        {{hash=41f1999c62ce0876a4024c2e535c5cd4}{Shi}{S\bibinitperiod}{Guochun}{G\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {AIP Publishing}%
      }
      \strng{namehash}{72fc684919ac88f2afd4f4a5604c8dc2}
      \strng{fullhash}{72fc684919ac88f2afd4f4a5604c8dc2}
      \field{sortinit}{S}
      \field{sortinithash}{fd1e7c5ab79596b13dbbb67f8d70fb5a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{The OpenCL standard offers a common API for program execution on systems composed of different types of computational devices such as multicore CPUs, GPUs, or other accelerators.}
      \field{issn}{1521-9615}
      \field{journaltitle}{Computing in Science {\&} Engineering}
      \field{month}{05}
      \field{number}{3}
      \field{title}{{OpenCL: A Parallel Programming Standard for Heterogeneous Computing Systems}}
      \field{volume}{12}
      \field{year}{2010}
      \field{pages}{66\bibrangedash 73}
      \range{pages}{8}
      \verb{doi}
      \verb 10.1109/MCSE.2010.69
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Stone, Gohara, Shi - 2010 - OpenCL A Parallel Programming Standard for Heterogeneous Computing Systems.pdf:pdf
      \endverb
      \verb{url}
      \verb http://scitation.aip.org/content/aip/journal/cise/12/3/10.1109/MCSE.2010.69
      \endverb
    \endentry
    \entry{Stroustrup1986}{article}{}
      \name{author}{1}{}{%
        {{hash=d31e7ca8dce61b72c41c7dcf1766b06b}{Stroustrup}{S\bibinitperiod}{B}{B\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{d31e7ca8dce61b72c41c7dcf1766b06b}
      \strng{fullhash}{d31e7ca8dce61b72c41c7dcf1766b06b}
      \field{sortinit}{S}
      \field{sortinithash}{fd1e7c5ab79596b13dbbb67f8d70fb5a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{title}{{The C++ programming language}}
      \field{year}{1986}
      \verb{url}
      \verb https://scholar.google.com/scholar?q=C%7B%%7D2B%7B%%7D2B%7B%5C&%7DbtnG=Search%7B%5C&%7Das%7B%5C_%7Dsdt=800000000001%7B%5C&%7Das%7B%5C_%7Dsdtp=on%7B%5C#%7D0
      \endverb
    \endentry
    \entry{Sullivan2001}{article}{}
      \name{author}{4}{}{%
        {{hash=2ccc2925659e2d2db772f1608aff9667}{Sullivan}{S\bibinitperiod}{Kevin\bibnamedelima J.}{K\bibinitperiod\bibinitdelim J\bibinitperiod}{}{}{}{}}%
        {{hash=57ad54d7ab93edb17da63b42ba21952f}{Griswold}{G\bibinitperiod}{William\bibnamedelima G.}{W\bibinitperiod\bibinitdelim G\bibinitperiod}{}{}{}{}}%
        {{hash=9703875b48aca55a8b8132ab09725f1e}{Cai}{C\bibinitperiod}{Yuanfang}{Y\bibinitperiod}{}{}{}{}}%
        {{hash=7aa75718b5f7718942d6884a97fc6b07}{Hallen}{H\bibinitperiod}{Ben}{B\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {ACM}%
      }
      \strng{namehash}{20cfb0a7007c81a62314431af64b1808}
      \strng{fullhash}{a9da42743aa83f5528ba88fa5516ca01}
      \field{sortinit}{S}
      \field{sortinithash}{fd1e7c5ab79596b13dbbb67f8d70fb5a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{isbn}{1581133901}
      \field{issn}{01635948}
      \field{journaltitle}{ACM SIGSOFT Software Engineering Notes}
      \field{month}{09}
      \field{number}{5}
      \field{title}{{The structure and value of modularity in software design}}
      \field{volume}{26}
      \field{year}{2001}
      \field{pages}{99}
      \range{pages}{1}
      \verb{doi}
      \verb 10.1145/503271.503224
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Sullivan et al. - 2001 - The structure and value of modularity in software design.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=503271.503224
      \endverb
      \keyw{design structure matrix,modularity,real options,software}
    \endentry
    \entry{Sundell2003}{article}{}
      \name{author}{2}{}{%
        {{hash=86dad49aab7d06aac57f7514ab6f0093}{Sundell}{S\bibinitperiod}{H.}{H\bibinitperiod}{}{}{}{}}%
        {{hash=940f55f399af3a465cb2626c7e0ec2c4}{Tsigas}{T\bibinitperiod}{P.}{P\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{06164f1cb5689e9ecfc958a076b72e51}
      \strng{fullhash}{06164f1cb5689e9ecfc958a076b72e51}
      \field{sortinit}{S}
      \field{sortinithash}{fd1e7c5ab79596b13dbbb67f8d70fb5a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{We present an efficient and practical lock-free implementation of a concurrent priority queue that is suitable for both fully concurrent (large multi-processor) systems as well as pre-emptive (multi-process) systems. Many algorithms for concurrent priority queues are based on mutual exclusion. However, mutual exclusion causes blocking which has several drawbacks and degrades the system's overall performance. Non-blocking algorithms avoid blocking, and are either lock-free or wait-free. Previously known non-blocking algorithms of priority queues did not perform well in practice because of their complexity, and they are often based on non-available atomic synchronization primitives. Our algorithm is based on the randomized sequential list structure called Skiplist, and a real-time extension of our algorithm is also described. In our performance evaluation we compare our algorithm with some of the most efficient implementations of priority queues known. The experimental results clearly show that our lock-free implementation outperforms the other lock-based implementations in all cases for 3 threads and more, both on fully concurrent as well as on pre-emptive systems.}
      \field{isbn}{0769519261}
      \field{issn}{07437315}
      \field{journaltitle}{Proceedings International Parallel and Distributed Processing Symposium}
      \field{number}{C}
      \field{title}{{Fast and lock-free concurrent priority queues for multi-thread systems}}
      \field{volume}{00}
      \field{year}{2003}
      \field{pages}{11}
      \range{pages}{1}
      \verb{doi}
      \verb 10.1109/IPDPS.2003.1213189
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Sundell, Tsigas - 2003 - Fast and lock-free concurrent priority queues for multi-thread systems.pdf:pdf
      \endverb
      \verb{url}
      \verb http://www.non-blocking.com/download/SunT03%7B%5C_%7DPQueue%7B%5C_%7DTR.pdf%20http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=1213189
      \endverb
    \endentry
    \entry{Sussman1998}{article}{}
      \name{author}{2}{}{%
        {{hash=a8463e2c87d06cbf41e98effdba21945}{Sussman}{S\bibinitperiod}{Gerald\bibnamedelima Jay}{G\bibinitperiod\bibinitdelim J\bibinitperiod}{}{}{}{}}%
        {{hash=e4526284928089f41db99965b264d47f}{{Steele,\bibnamedelimb Guy\bibnamedelimb L}}{S\bibinitperiod}{Jr}{J\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{e608ea5fc97402ee441ccfeb06ee8cd3}
      \strng{fullhash}{e608ea5fc97402ee441ccfeb06ee8cd3}
      \field{sortinit}{S}
      \field{sortinithash}{fd1e7c5ab79596b13dbbb67f8d70fb5a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Inspired byACTORS[7, 17], we have implemented an interpreter for a LISP-like language, SCHEME, based on the lambda calculus [2], but extended for side effects, multiprocessing, and process synchronization. The purpose of this implementation is tutorial. We wish to: 1. alleviate the confusion caused by Micro-PLANNER, CONNIVER, etc., by clarifying the embedding of non-recursive control structures in a recursive host language like LISP. 2. explain how to use these control structures, independent of such issues as pattern matching and data base manipulation. 3. have a simple concrete experimental domain for certain issues of programming semantics and style. This paper is organized into sections. The first section is a short “reference manual” containing specifications for all the unusual features of SCHEME. Next, we present a sequence of programming examples which illustrate various programming styles, and how to use them. This will raise certain issues of semantics which we will try to clarify with lambda calculus in the third section. In the fourth section we will give a general discussion of the issues facing an implementor of an interpreter for a language based on lambda calculus. Finally, we will present a completely annotated interpreter for SCHEME, written in MacLISP [13], to acquaint programmers with the tricks of the trade of implementing non-recursive control structures in a recursive language like LISP. This report describes research done at the Artificial Intelligence Laboratory of the Massachusetts Institute of Technology. Support for the laboratory's artificial intelligence research is provided in part by the Advanced Research Projects Agency of the Department of Defense under Office of Naval Research contract N00014-75-C- 0643. 1.}
      \field{issn}{13883690}
      \field{journaltitle}{Higher-Order and Symbolic Computation}
      \field{title}{{Scheme: A interpreter for extended lambda calculus}}
      \field{volume}{11}
      \field{year}{1998}
      \field{pages}{405\bibrangedash 439}
      \range{pages}{35}
      \verb{doi}
      \verb 10.1023/A:1010035624696
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Sussman, Steele, Guy L - 1998 - Scheme A interpreter for extended lambda calculus.pdf:pdf
      \endverb
      \verb{url}
      \verb http://link.springer.com/article/10.1023/A:1010035624696
      \endverb
      \keyw{11,1998,405,439,boston,c 1998 kluwer academic,her-order and symbolic computation,manufactured in the netherlands,publishers}
    \endentry
    \entry{Sweet1985}{inproceedings}{}
      \name{author}{1}{}{%
        {{hash=d54d8ffcf284f4925bc29461c15c95cd}{Sweet}{S\bibinitperiod}{Richard\bibnamedelima E}{R\bibinitperiod\bibinitdelim E\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{d54d8ffcf284f4925bc29461c15c95cd}
      \strng{fullhash}{d54d8ffcf284f4925bc29461c15c95cd}
      \field{sortinit}{S}
      \field{sortinithash}{fd1e7c5ab79596b13dbbb67f8d70fb5a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{ACM SIGPLAN Notices}
      \field{isbn}{0897911652}
      \field{issn}{0362-1340}
      \field{number}{7}
      \field{title}{{The Mesa programming environment}}
      \field{volume}{20}
      \field{year}{1985}
      \field{pages}{216\bibrangedash 229}
      \range{pages}{14}
      \verb{doi}
      \verb 10.1145/17919.806843
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Sweet - 1985 - The Mesa programming environment.pdf:pdf
      \endverb
      \verb{url}
      \verb http://www.digibarn.com/friends/curbow/star/XDEPaper.pdf
      \endverb
    \endentry
    \entry{Tarditi2006}{article}{}
      \name{author}{3}{}{%
        {{hash=8ba58d49714de71737d418d7693dea3f}{Tarditi}{T\bibinitperiod}{David}{D\bibinitperiod}{}{}{}{}}%
        {{hash=32764ad5c20faab2d45c5c12d5aba2ef}{Puri}{P\bibinitperiod}{Sidd}{S\bibinitperiod}{}{}{}{}}%
        {{hash=6ca3c21e11986cc9b8670bee7285089d}{Oglesby}{O\bibinitperiod}{Jose}{J\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {ACM}%
      }
      \strng{namehash}{e5857c7fd2fddb6ec5a0ee9e3e9af202}
      \strng{fullhash}{e5857c7fd2fddb6ec5a0ee9e3e9af202}
      \field{sortinit}{T}
      \field{sortinithash}{423d138a005a533b47e6475e39378bf2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{GPUs are difficult to program for general-purpose uses. Programmers can either learn graphics APIs and convert their applications to use graphics pipeline operations or they can use stream programming abstractions of GPUs. We describe Accelerator, a system that uses data parallelism to program GPUs for general-purpose uses instead. Programmers use a conventional imperative programming language and a library that provides only high-level data-parallel operations. No aspects of GPUs are exposed to programmers. The library implementation compiles the data-parallel operations on the fly to optimized GPU pixel shader code and API calls.We describe the compilation techniques used to do this. We evaluate the effectiveness of using data parallelism to program GPUs by providing results for a set of compute-intensive benchmarks. We compare the performance of Accelerator versions of the benchmarks against hand-written pixel shaders. The speeds of the Accelerator versions are typically within 50{\%} of the speeds of hand-written pixel shader code. Some benchmarks significantly outperform C versions on a CPU: they are up to 18 times faster than C code running on a CPU.}
      \field{isbn}{1595934510}
      \field{issn}{03621340}
      \field{journaltitle}{Proceedings of the 12th international conference on Architectural support for programming languages and operating systems}
      \field{month}{10}
      \field{number}{5}
      \field{title}{{Accelerator: using data parallelism to program GPUs for general-purpose uses}}
      \field{volume}{34}
      \field{year}{2006}
      \field{pages}{325\bibrangedash 335}
      \range{pages}{11}
      \verb{doi}
      \verb 10.1145/1168918.1168898
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Tarditi, Puri, Oglesby - 2006 - Accelerator using data parallelism to program GPUs for general-purpose uses.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=1168918.1168898%20http://portal.acm.org/citation.cfm?id=1168898
      \endverb
      \keyw{data parallelism,graphics processing units,just-in-time compilation}
    \endentry
    \entry{Tarr1999}{article}{}
      \name{author}{4}{}{%
        {{hash=f67a5e52682e887ab3b8aecd7dbcdc33}{Tarr}{T\bibinitperiod}{P.}{P\bibinitperiod}{}{}{}{}}%
        {{hash=54efa8c960e3e8ad2b1c4507728e5b80}{Ossher}{O\bibinitperiod}{H.}{H\bibinitperiod}{}{}{}{}}%
        {{hash=9f5c7de67e8303a5fd06871f98d3141a}{Harrison}{H\bibinitperiod}{W.}{W\bibinitperiod}{}{}{}{}}%
        {{hash=c8a96873548e313de249a8ea37b79167}{{Sutton,\bibnamedelimb S.M.}}{S\bibinitperiod}{Jr.}{J\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{2aa669211b95b208ffffb469f259c6d1}
      \strng{fullhash}{2bc04383d0bab03eed338b5d82470b54}
      \field{sortinit}{T}
      \field{sortinithash}{423d138a005a533b47e6475e39378bf2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Done well, separation of concerns can provide many software engineering benefits, including reduced complexity, improved reusability, and simpler evolution. The choice of boundaries for separate concerns depends on both requirements on the system and on the kind(s) of decomposition and composition a given formalism supports. The predominant methodologies and formalisms available, however, support only orthogonal separations of concerns, along single dimensions of composition and decomposition. These characteristics lead to a number of well-known and difficult problems. The paper describes a new paradigm for modeling and implementing software artifacts, one that permits separation of overlapping concerns along multiple dimensions of composition and decomposition. This approach addresses numerous problems throughout the software lifecycle in achieving well-engineered, evolvable, flexible software artifacts and traceability across artifacts.}
      \field{isbn}{1581130740}
      \field{issn}{0270-5257}
      \field{journaltitle}{Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002)}
      \field{title}{{N degrees of separation: multi-dimensional separation of concerns}}
      \field{year}{1999}
      \field{pages}{107\bibrangedash 119}
      \range{pages}{13}
      \verb{doi}
      \verb 10.1145/302405.302457
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Tarr et al. - 1999 - N degrees of separation multi-dimensional separation of concerns.pdf:pdf
      \endverb
      \verb{url}
      \verb http://www.cs.bilkent.edu.tr/%7B~%7Dbedir/CS586-AOSD/Syllabus/NDegreesOfSeparation.pdf
      \endverb
    \endentry
    \entry{Thies2002}{article}{}
      \name{author}{3}{}{%
        {{hash=b9e84695b944cfebe699d94b3d3ece01}{Thies}{T\bibinitperiod}{William}{W\bibinitperiod}{}{}{}{}}%
        {{hash=d8540d14bbc7d699313b8e10403cbb55}{Karczmarek}{K\bibinitperiod}{Michal}{M\bibinitperiod}{}{}{}{}}%
        {{hash=dcb28881d25e46cc6308d0471f0df07c}{Amarasinghe}{A\bibinitperiod}{Saman}{S\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{a2488bd565b80fe5b56f7f3b1b4dc416}
      \strng{fullhash}{a2488bd565b80fe5b56f7f3b1b4dc416}
      \field{sortinit}{T}
      \field{sortinithash}{423d138a005a533b47e6475e39378bf2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{We characterize high-performance streaming applications as a new and distinct domain of programs that is becoming increasingly im- portant. The StreamIt language provides novel high-level representations to improve programmer productivity and program robustness within the streaming domain. At the same time, the StreamIt compiler aims to im- prove the performance of streaming applications via stream-specific anal- yses and optimizations. In this paper, we motivate, describe and justify the language features of StreamIt, which include: a structured model of streams, a messaging system for control, a re-initialization mechanism, and a natural textual syntax.}
      \field{isbn}{3540433694}
      \field{issn}{0302-9743}
      \field{journaltitle}{Compiler Construction}
      \field{title}{{StreamIt: A language for streaming applications}}
      \field{volume}{LNCS 2304}
      \field{year}{2002}
      \field{pages}{179\bibrangedash 196}
      \range{pages}{18}
      \verb{doi}
      \verb 10.1007/3-540-45937-5
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Thies, Karczmarek, Amarasinghe - 2002 - StreamIt A language for streaming applications.ps:ps
      \endverb
      \verb{url}
      \verb http://link.springer.com/chapter/10.1007/3-540-45937-5%7B%5C_%7D14%20http://rtsys.informatik.uni-kiel.de/svn/teaching/sem/11ss-conc/dkr/11ss-conc-dkr-talk.pdf%20http://www.springerlink.com/index/LC5B77HWR8J2UBHK.pdf$%5Cbackslash$nhttp://groups.csail.mit.edu/commit/papers/02/stream
      \endverb
    \endentry
    \entry{Thusoo2009}{article}{}
      \name{author}{9}{}{%
        {{hash=4a0c74dbbcd72d37dae7156fafee5df1}{Thusoo}{T\bibinitperiod}{Ashish}{A\bibinitperiod}{}{}{}{}}%
        {{hash=2a120a7ac63e747c20e75b871bf1eaaa}{Sarma}{S\bibinitperiod}{Joydeep\bibnamedelima Sen}{J\bibinitperiod\bibinitdelim S\bibinitperiod}{}{}{}{}}%
        {{hash=dd08305058f406f030ae95aeafe49004}{Jain}{J\bibinitperiod}{Namit}{N\bibinitperiod}{}{}{}{}}%
        {{hash=94f1fb773a662ac217771cef4d895961}{Shao}{S\bibinitperiod}{Zheng}{Z\bibinitperiod}{}{}{}{}}%
        {{hash=782056105be2179cdb6bfc94333821c5}{Chakka}{C\bibinitperiod}{Prasad}{P\bibinitperiod}{}{}{}{}}%
        {{hash=698fd8f9ebc58f3b0a08845f1782152e}{Anthony}{A\bibinitperiod}{Suresh}{S\bibinitperiod}{}{}{}{}}%
        {{hash=33104fd0f457a2964af323817a9d2016}{Liu}{L\bibinitperiod}{Hao}{H\bibinitperiod}{}{}{}{}}%
        {{hash=be3ba6de30ee6c390d96bbbc84d3fe22}{Wyckoff}{W\bibinitperiod}{Pete}{P\bibinitperiod}{}{}{}{}}%
        {{hash=f17734bc656d4669ac3abc24701d4edf}{Murthy}{M\bibinitperiod}{Raghotham}{R\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {VLDB Endowment}%
      }
      \strng{namehash}{c1533c46ce01b5ddc13ec0358ac15a38}
      \strng{fullhash}{5d72d35463a2a69ea29e15beeb400b7e}
      \field{sortinit}{T}
      \field{sortinithash}{423d138a005a533b47e6475e39378bf2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{issn}{21508097}
      \field{journaltitle}{Proceedings of the VLDB Endowment}
      \field{month}{08}
      \field{number}{2}
      \field{title}{{Hive}}
      \field{volume}{2}
      \field{year}{2009}
      \field{pages}{1626\bibrangedash 1629}
      \range{pages}{4}
      \verb{doi}
      \verb 10.14778/1687553.1687609
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=1687553.1687609
      \endverb
    \endentry
    \entry{Timnat2012}{inproceedings}{}
      \name{author}{4}{}{%
        {{hash=84f9c0b264838c1908e9cc43b1710c9c}{Timnat}{T\bibinitperiod}{Shahar}{S\bibinitperiod}{}{}{}{}}%
        {{hash=d5d1ba04f2887d493e474ec0242321cc}{Braginsky}{B\bibinitperiod}{Anastasia}{A\bibinitperiod}{}{}{}{}}%
        {{hash=fdcad8e75af2ff8226f3804288eeebb7}{Kogan}{K\bibinitperiod}{Alex}{A\bibinitperiod}{}{}{}{}}%
        {{hash=468fe0329ffeea43782aa0c27eaf16fe}{Petrank}{P\bibinitperiod}{Erez}{E\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{77c5a848a23d29e33e749471a7bcc5be}
      \strng{fullhash}{668e5efb962848f8f7c5b8b8d79f99f6}
      \field{sortinit}{T}
      \field{sortinithash}{423d138a005a533b47e6475e39378bf2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{The linked-list data structure is fundamental and ubiquitous. Lock-free versions of the linked-list are well known. However, the existence of a practical wait-free linked-list has been open. In this work we designed such a linked-list. To achieve better performance, we have also extended this design using the fast-path-slow-path methodology. The resulting implementation achieves performance which is competitive with that of Harris's lock-free list, while still guaranteeing non-starvation via wait-freedom.We have also developed a proof for the correctness and the wait-freedom of our design.}
      \field{booktitle}{Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)}
      \field{isbn}{9783642354755}
      \field{issn}{03029743}
      \field{title}{{Wait-free linked-lists}}
      \field{volume}{7702 LNCS}
      \field{year}{2012}
      \field{pages}{330\bibrangedash 344}
      \range{pages}{15}
      \verb{doi}
      \verb 10.1007/978-3-642-35476-2_23
      \endverb
      \verb{url}
      \verb http://www.cs.technion.ac.il/%7B~%7Derez/Papers/wfll-short.pdf
      \endverb
    \endentry
    \entry{Toshniwal2014}{inproceedings}{}
      \name{author}{13}{}{%
        {{hash=b2383764c1e972a0bcd451ad207dbd38}{Toshniwal}{T\bibinitperiod}{Ankit}{A\bibinitperiod}{}{}{}{}}%
        {{hash=b3660ee043f7f31285223b7bc45496c9}{Donham}{D\bibinitperiod}{Jake}{J\bibinitperiod}{}{}{}{}}%
        {{hash=7d36a24ca85ea033dc7f1b80620f63e0}{Bhagat}{B\bibinitperiod}{Nikunj}{N\bibinitperiod}{}{}{}{}}%
        {{hash=1995ac157d2f75af47a0318563ff5266}{Mittal}{M\bibinitperiod}{Sailesh}{S\bibinitperiod}{}{}{}{}}%
        {{hash=6eef696785ac7957dadc8f9e509995b2}{Ryaboy}{R\bibinitperiod}{Dmitriy}{D\bibinitperiod}{}{}{}{}}%
        {{hash=4c2449c895df42abef15695d1ca940ba}{Taneja}{T\bibinitperiod}{Siddarth}{S\bibinitperiod}{}{}{}{}}%
        {{hash=34abb53ef1fe1e895b1843485b44cea9}{Shukla}{S\bibinitperiod}{Amit}{A\bibinitperiod}{}{}{}{}}%
        {{hash=5c040cae7838a714d155b12f0e7aca7d}{Ramasamy}{R\bibinitperiod}{Karthik}{K\bibinitperiod}{}{}{}{}}%
        {{hash=a431797c74faa8ef3b9e970330ee49ef}{Patel}{P\bibinitperiod}{Jignesh\bibnamedelima M.}{J\bibinitperiod\bibinitdelim M\bibinitperiod}{}{}{}{}}%
        {{hash=4c13b2d12705990cfa226f3dd222e9d8}{Kulkarni}{K\bibinitperiod}{Sanjeev}{S\bibinitperiod}{}{}{}{}}%
        {{hash=b43a511f7068e16432acb7a99365cf9e}{Jackson}{J\bibinitperiod}{Jason}{J\bibinitperiod}{}{}{}{}}%
        {{hash=c14f8fbc9cb6e5e779a99f61e8f72cd6}{Gade}{G\bibinitperiod}{Krishna}{K\bibinitperiod}{}{}{}{}}%
        {{hash=ab92d45334272394ee8ee831109bcc5a}{Fu}{F\bibinitperiod}{Maosong}{M\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {New York, New York, USA}%
      }
      \list{publisher}{1}{%
        {ACM Press}%
      }
      \strng{namehash}{85a71311d28b976001fedfeadaf5289c}
      \strng{fullhash}{aea74b5bf732b33a5f9493ea40339618}
      \field{sortinit}{T}
      \field{sortinithash}{423d138a005a533b47e6475e39378bf2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{Proceedings of the 2014 ACM SIGMOD international conference on Management of data - SIGMOD '14}
      \field{isbn}{9781450323765}
      \field{month}{06}
      \field{title}{{Storm@ twitter}}
      \field{year}{2014}
      \field{pages}{147\bibrangedash 156}
      \range{pages}{10}
      \verb{doi}
      \verb 10.1145/2588555.2595641
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Toshniwal et al. - 2014 - Storm@ twitter.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=2595641%20http://dl.acm.org/citation.cfm?id=2588555.2595641
      \endverb
      \keyw{real-time query processing,stream data management}
    \endentry
    \entry{Trifunovic2010}{misc}{}
      \name{author}{10}{}{%
        {{hash=9cd65ddfaec524191364a7912235e9c7}{Trifunovic}{T\bibinitperiod}{Konrad}{K\bibinitperiod}{}{}{}{}}%
        {{hash=172a9e8d07a17bf85f8736265ac88aae}{Cohen}{C\bibinitperiod}{Albert}{A\bibinitperiod}{}{}{}{}}%
        {{hash=818a83da3e98eb48b20eb107bb9bd232}{Edelsohn}{E\bibinitperiod}{David}{D\bibinitperiod}{}{}{}{}}%
        {{hash=89b23cce0bb40099f7b69f6577f665fe}{Li}{L\bibinitperiod}{Feng}{F\bibinitperiod}{}{}{}{}}%
        {{hash=8d5b5e98a55e4f5262f328dd602a741d}{Grosser}{G\bibinitperiod}{Tobias}{T\bibinitperiod}{}{}{}{}}%
        {{hash=27b23eb504c5952885a57149a05d65ad}{Jagasia}{J\bibinitperiod}{Harsha}{H\bibinitperiod}{}{}{}{}}%
        {{hash=54548ed36afa27126277a97ffbfc9b84}{Ladelsky}{L\bibinitperiod}{Razya}{R\bibinitperiod}{}{}{}{}}%
        {{hash=164e46a8b4856ba1cb9c08e32c46e95d}{Pop}{P\bibinitperiod}{Sebastian}{S\bibinitperiod}{}{}{}{}}%
        {{hash=2c72bcaece72d338820bf3d3f0bf78a9}{Sjödin}{S\bibinitperiod}{Jan}{J\bibinitperiod}{}{}{}{}}%
        {{hash=5478e5eff0c09f7b8d63a0a117eeb307}{Upadrasta}{U\bibinitperiod}{Ramakrishna}{R\bibinitperiod}{}{}{}{}}%
      }
      \list{language}{1}{%
        {en}%
      }
      \strng{namehash}{58e29583f8b2ae27722e59fcaa6d9ffe}
      \strng{fullhash}{04f5e4700bb578fac05fa5227482fa4c}
      \field{sortinit}{T}
      \field{sortinithash}{423d138a005a533b47e6475e39378bf2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Modern compilers are responsible for adapting the semantics of source programs into a form that makes efficient use of a highly complex, heterogeneous machine. This adaptation amounts to solve an optimization problem in a huge and unstructured search space, while predicting the performance outcome of complex sequences of program transformations. The polyhedral model of compilation is aimed at these challenges. Its geometrical, non-inductive semantics enables the construction of better-structured optimization problems and precise analytical models. Recent work demonstrated the scalability of the main polyhedral algorithms to real-world programs. Its integration into production compilers is under way, pioneered by the Graphite branch of the GNU Compiler Collection (GCC). Two years after the effective beginning of the project, this paper reports on original questions and innovative solutions that arose during the design and implementation of Graphite.}
      \field{booktitle}{GCC Research Opportunities Workshop (GROW'10)}
      \field{month}{01}
      \field{title}{{GRAPHITE Two Years After: First Lessons Learned From Real-World Polyhedral Compilation}}
      \field{year}{2010}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Trifunovic et al. - 2010 - GRAPHITE Two Years After First Lessons Learned From Real-World Polyhedral Compilation.pdf:pdf
      \endverb
      \verb{url}
      \verb https://hal.inria.fr/inria-00551516/
      \endverb
    \endentry
    \entry{Turner1986}{article}{}
      \name{author}{1}{}{%
        {{hash=aafa3e6ce47253db2e83fc7a2c3ae828}{Turner}{T\bibinitperiod}{D}{D\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {ACM}%
      }
      \strng{namehash}{aafa3e6ce47253db2e83fc7a2c3ae828}
      \strng{fullhash}{aafa3e6ce47253db2e83fc7a2c3ae828}
      \field{sortinit}{T}
      \field{sortinithash}{423d138a005a533b47e6475e39378bf2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{issn}{03621340}
      \field{journaltitle}{ACM SIGPLAN Notices}
      \field{month}{12}
      \field{number}{12}
      \field{title}{{An overview of Miranda}}
      \field{volume}{21}
      \field{year}{1986}
      \field{pages}{158\bibrangedash 166}
      \range{pages}{9}
      \verb{doi}
      \verb 10.1145/15042.15053
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Turner - 1986 - An overview of Miranda.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=15042.15053
      \endverb
    \endentry
    \entry{Turner1981}{inproceedings}{}
      \name{author}{1}{}{%
        {{hash=c1f396c118d0bd4818b940a48d3b4325}{Turner}{T\bibinitperiod}{D.\bibnamedelimi A.}{D\bibinitperiod\bibinitdelim A\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {New York, New York, USA}%
      }
      \list{publisher}{1}{%
        {ACM Press}%
      }
      \strng{namehash}{c1f396c118d0bd4818b940a48d3b4325}
      \strng{fullhash}{c1f396c118d0bd4818b940a48d3b4325}
      \field{sortinit}{T}
      \field{sortinithash}{423d138a005a533b47e6475e39378bf2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{Proceedings of the 1981 conference on Functional programming languages and computer architecture - FPCA '81}
      \field{isbn}{0897910605}
      \field{month}{10}
      \field{title}{{The semantic elegance of applicative languages}}
      \field{year}{1981}
      \field{pages}{85\bibrangedash 92}
      \range{pages}{8}
      \verb{doi}
      \verb 10.1145/800223.806766
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Turner - 1981 - The semantic elegance of applicative languages.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=800223.806766
      \endverb
    \endentry
    \entry{Upadhyaya2007}{article}{}
      \name{author}{3}{}{%
        {{hash=2f6eb7d46492a40f615d0e85f4e5b7f2}{Upadhyaya}{U\bibinitperiod}{Gautam}{G\bibinitperiod}{}{}{}{}}%
        {{hash=1556d127d9dd50ca94f4b1bad8805de4}{Pai}{P\bibinitperiod}{Vijay\bibnamedelima S.}{V\bibinitperiod\bibinitdelim S\bibinitperiod}{}{}{}{}}%
        {{hash=3ab905865731864c7ab51c5e5353e507}{Midkiff}{M\bibinitperiod}{Samuel\bibnamedelima P.}{S\bibinitperiod\bibinitdelim P\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {New York, New York, USA}%
      }
      \list{publisher}{1}{%
        {ACM Press}%
      }
      \strng{namehash}{2262efc010de86e18031685fcf83e83b}
      \strng{fullhash}{2262efc010de86e18031685fcf83e83b}
      \field{sortinit}{U}
      \field{sortinithash}{8145509bd2718876fc77d31fd2cde117}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{This paper presents Aspen, a high-level programming language thattargets both high-productivity programming and runtime support formanaging resources needed by a computation. Programs in Aspen arerepresented as directed graphs, where the edges are well-definedunidirectional ...}
      \field{isbn}{9781595936028}
      \field{journaltitle}{Proceedings of the 12th ACM SIGPLAN symposium on Principles and practice of parallel programming - PPoPP '07}
      \field{month}{03}
      \field{title}{{Expressing and exploiting concurrency in networked applications with aspen}}
      \field{year}{2007}
      \field{pages}{13}
      \range{pages}{1}
      \verb{doi}
      \verb 10.1145/1229428.1229433
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Upadhyaya, Pai, Midkiff - 2007 - Expressing and exploiting concurrency in networked applications with aspen.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=1229428.1229433%20http://portal.acm.org/citation.cfm?doid=1229428.1229433
      \endverb
      \keyw{net-,parallel programming,programming languages,resource management,work servers}
    \endentry
    \entry{Valois1995}{inproceedings}{}
      \name{author}{1}{}{%
        {{hash=ac5c39aafa93cf4d6cc9e21fe8ecbe96}{Valois}{V\bibinitperiod}{John\bibnamedelima D.}{J\bibinitperiod\bibinitdelim D\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {New York, New York, USA}%
      }
      \list{publisher}{1}{%
        {ACM Press}%
      }
      \strng{namehash}{ac5c39aafa93cf4d6cc9e21fe8ecbe96}
      \strng{fullhash}{ac5c39aafa93cf4d6cc9e21fe8ecbe96}
      \field{sortinit}{V}
      \field{sortinithash}{d18f5ce25ce0b5ca7f924e3f6c04870e}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{Proceedings of the fourteenth annual ACM symposium on Principles of distributed computing - PODC '95}
      \field{isbn}{0897917103}
      \field{month}{08}
      \field{title}{{Lock-free linked lists using compare-and-swap}}
      \field{year}{1995}
      \field{pages}{214\bibrangedash 222}
      \range{pages}{9}
      \verb{doi}
      \verb 10.1145/224964.224988
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=224964.224988
      \endverb
    \endentry
    \entry{Vandierendonck2010a}{inproceedings}{}
      \name{author}{3}{}{%
        {{hash=6cfdc5f40cec44378769c956157b3a9c}{Vandierendonck}{V\bibinitperiod}{Hans}{H\bibinitperiod}{}{}{}{}}%
        {{hash=7b27970c3d46d2514e4f1d6e6fa2c23e}{Rul}{R\bibinitperiod}{Sean}{S\bibinitperiod}{}{}{}{}}%
        {{hash=02d1d4edc4cfca610b0dae558f949f4a}{{De\bibnamedelimb Bosschere}}{D\bibinitperiod}{Koen}{K\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {New York, New York, USA}%
      }
      \list{publisher}{1}{%
        {ACM Press}%
      }
      \strng{namehash}{5882e3a3ccefb33f1a1acfdaeccfa2d4}
      \strng{fullhash}{5882e3a3ccefb33f1a1acfdaeccfa2d4}
      \field{sortinit}{V}
      \field{sortinithash}{d18f5ce25ce0b5ca7f924e3f6c04870e}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Speeding up sequential programs on multicores is a challenging problem that is in urgent need of a solution. Automatic paral- lelization of irregular pointer-intensive codes, exemplified by the SPECint codes, is a very hard problem. This paper shows that, with a helping hand, such auto-parallelization is possible and fruitful. This paper makes the following contributions: (i) A compiler- framework for extracting pipeline-like parallelism from outer pro- gram loops is presented. (ii) Using a light-weight programming model based on annotations, the programmer helps the compiler to find thread-level parallelism. Each of the annotations specifies only a small piece of semantic information that compiler analy- sis misses, e.g. stating that a variable is dead at a certain program point. The annotations are designed such that correctness is eas- ily verified. Furthermore, we present a tool for suggesting annota- tions to the programmer. (iii) The methodology is applied to auto- parallelize several SPECint benchmarks. For the benchmark with most parallelism (hmmer), we obtain a scalable 7-fold speedup on an AMD quad-core dual processor. The annotations constitute a parallel programming model that relies extensively on a sequential program representation. Hereby, the complexity of debugging is not increased and it does not ob- scure the source code. These properties could prove valuable to increase the efficiency of parallel programming.}
      \field{booktitle}{Proceedings of the 19th international conference on Parallel architectures and compilation techniques}
      \field{isbn}{9781450301787}
      \field{month}{09}
      \field{title}{{The Paralax infrastructure: automatic parallelization with a helping hand}}
      \field{year}{2010}
      \field{pages}{389\bibrangedash 399}
      \range{pages}{11}
      \verb{doi}
      \verb 10.1145/1854273.1854322
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Vandierendonck, Rul, De Bosschere - 2010 - The Paralax infrastructure.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=1854273.1854322%20http://portal.acm.org/citation.cfm?id=1854322
      \endverb
      \keyw{Semi-automatic parallelization,semantic annotations}
    \endentry
    \entry{Wadler1992}{inproceedings}{}
      \name{author}{1}{}{%
        {{hash=b4d861345944ddeeaf658a11c2f0f6a7}{Wadler}{W\bibinitperiod}{Philip}{P\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {New York, New York, USA}%
      }
      \list{publisher}{1}{%
        {ACM Press}%
      }
      \strng{namehash}{b4d861345944ddeeaf658a11c2f0f6a7}
      \strng{fullhash}{b4d861345944ddeeaf658a11c2f0f6a7}
      \field{sortinit}{W}
      \field{sortinithash}{99e3ba1b3f78bb6f073e7fa7ac11636b}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{Proceedings of the 19th ACM SIGPLAN-SIGACT symposium on Principles of programming languages - POPL '92}
      \field{isbn}{0897914538}
      \field{month}{02}
      \field{title}{{The essence of functional programming}}
      \field{year}{1992}
      \field{pages}{1\bibrangedash 14}
      \range{pages}{14}
      \verb{doi}
      \verb 10.1145/143165.143169
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Wadler - 1992 - The essence of functional programming.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=143165.143169
      \endverb
    \endentry
    \entry{Wand1980}{article}{}
      \name{author}{1}{}{%
        {{hash=ff4beedb814e2a2edd70d0e6c7e74db6}{Wand}{W\bibinitperiod}{M}{M\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{ff4beedb814e2a2edd70d0e6c7e74db6}
      \strng{fullhash}{ff4beedb814e2a2edd70d0e6c7e74db6}
      \field{sortinit}{W}
      \field{sortinithash}{99e3ba1b3f78bb6f073e7fa7ac11636b}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{Proceedings of the 1980 ACM conference on LISP and functional programming}
      \field{title}{{Continuation-based multiprocessing}}
      \field{year}{1980}
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=802786
      \endverb
    \endentry
    \entry{Wei2014}{article}{}
      \name{author}{2}{}{%
        {{hash=0bc7b488656886f59a0b4fb019932408}{Wei}{W\bibinitperiod}{S}{S\bibinitperiod}{}{}{}{}}%
        {{hash=b1096726e44460b5dfc8f2c68eedb20f}{Ryder}{R\bibinitperiod}{BG}{B\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{2257887a8e21db014380af0b5e3bb14b}
      \strng{fullhash}{2257887a8e21db014380af0b5e3bb14b}
      \field{sortinit}{W}
      \field{sortinithash}{99e3ba1b3f78bb6f073e7fa7ac11636b}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{ECOOP 2014–Object-Oriented Programming}
      \field{title}{{State-sensitive points-to analysis for the dynamic behavior of JavaScript objects}}
      \field{year}{2014}
      \verb{url}
      \verb http://link.springer.com/chapter/10.1007/978-3-662-44202-9%7B%5C_%7D1
      \endverb
    \endentry
    \entry{Welsh2001}{article}{}
      \name{author}{3}{}{%
        {{hash=0830d0f04071ebda60005863ee632994}{Welsh}{W\bibinitperiod}{M}{M\bibinitperiod}{}{}{}{}}%
        {{hash=c9a0bb7bb5c6ebcaf96c0d420b430a28}{Culler}{C\bibinitperiod}{D}{D\bibinitperiod}{}{}{}{}}%
        {{hash=280d221db337c3558edebb32419e25e7}{Brewer}{B\bibinitperiod}{E}{E\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{a8316e56278cba42c24f58e4aaf09f73}
      \strng{fullhash}{a8316e56278cba42c24f58e4aaf09f73}
      \field{sortinit}{W}
      \field{sortinithash}{99e3ba1b3f78bb6f073e7fa7ac11636b}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{ACM SIGOPS Operating Systems Review}
      \field{title}{{SEDA: an architecture for well-conditioned, scalable internet services}}
      \field{year}{2001}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Welsh, Culler, Brewer - 2001 - SEDA an architecture for well-conditioned, scalable internet services.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=502057
      \endverb
    \endentry
    \entry{Wimmer2015}{inproceedings}{}
      \name{author}{4}{}{%
        {{hash=718ff84cd86b805a6fad21481d5e6b78}{Wimmer}{W\bibinitperiod}{Martin}{M\bibinitperiod}{}{}{}{}}%
        {{hash=58c2c0cee1023df0b182fafb7bce37dc}{Gruber}{G\bibinitperiod}{Jakob}{J\bibinitperiod}{}{}{}{}}%
        {{hash=c45598cde43007a6bcf080642329719c}{Träff}{T\bibinitperiod}{Jesper\bibnamedelima Larsson}{J\bibinitperiod\bibinitdelim L\bibinitperiod}{}{}{}{}}%
        {{hash=599bc6ccb18ecae93613962500177c35}{Tsigas}{T\bibinitperiod}{Philippas}{P\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {New York, New York, USA}%
      }
      \list{publisher}{1}{%
        {ACM Press}%
      }
      \strng{namehash}{e189e33a4a8a2e4acc904a683051f6da}
      \strng{fullhash}{163faa97b2281a007c99cc0bc3691d69}
      \field{sortinit}{W}
      \field{sortinithash}{99e3ba1b3f78bb6f073e7fa7ac11636b}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{Proceedings of the 20th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming - PPoPP 2015}
      \field{isbn}{9781450332057}
      \field{month}{01}
      \field{title}{{The lock-free k-LSM relaxed priority queue}}
      \field{year}{2015}
      \field{pages}{277\bibrangedash 278}
      \range{pages}{2}
      \verb{doi}
      \verb 10.1145/2688500.2688547
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=2688500.2688547
      \endverb
      \keyw{Task-parallel programming,concurrent data structure relaxation,priority-queue,shared memory}
    \endentry
    \entry{Wong2009}{inproceedings}{}
      \name{author}{5}{}{%
        {{hash=da8ee77a7458ffdb9bcfe99207faad65}{Wong}{W\bibinitperiod}{Sunny}{S\bibinitperiod}{}{}{}{}}%
        {{hash=9703875b48aca55a8b8132ab09725f1e}{Cai}{C\bibinitperiod}{Yuanfang}{Y\bibinitperiod}{}{}{}{}}%
        {{hash=f1c5f30c57ec93c2c604dd786876f719}{Valetto}{V\bibinitperiod}{Giuseppe}{G\bibinitperiod}{}{}{}{}}%
        {{hash=eed6f14e7953aa15bab488f3b3581121}{Simeonov}{S\bibinitperiod}{Georgi}{G\bibinitperiod}{}{}{}{}}%
        {{hash=4b8adb20609ee0b770eacdeccea10269}{Sethi}{S\bibinitperiod}{Kanwarpreet}{K\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {IEEE}%
      }
      \strng{namehash}{083237452403d83a1cd1b627738c3528}
      \strng{fullhash}{feada6d870511b3ce277106ee4dc7e43}
      \field{sortinit}{W}
      \field{sortinithash}{99e3ba1b3f78bb6f073e7fa7ac11636b}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{2009 IEEE/ACM International Conference on Automated Software Engineering}
      \field{isbn}{9781424452590}
      \field{month}{11}
      \field{title}{{Design Rule Hierarchies and Parallelism in Software Development Tasks}}
      \field{year}{2009}
      \field{pages}{197\bibrangedash 208}
      \range{pages}{12}
      \verb{doi}
      \verb 10.1109/ASE.2009.53
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Wong et al. - 2009 - Design Rule Hierarchies and Parallelism in Software Development Tasks.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=1747491.1747520
      \endverb
      \keyw{collaboration,project management,software architecture}
    \endentry
    \entry{Xin2013}{inproceedings}{}
      \name{author}{6}{}{%
        {{hash=fa12ff7c63d246671ad0d5036cccb4cd}{Xin}{X\bibinitperiod}{Reynold\bibnamedelima S.}{R\bibinitperiod\bibinitdelim S\bibinitperiod}{}{}{}{}}%
        {{hash=365d3ec4a85f5051e18fc7c1e63b210b}{Rosen}{R\bibinitperiod}{Josh}{J\bibinitperiod}{}{}{}{}}%
        {{hash=00dc518b94dfa6349c86e70661a1a5ef}{Zaharia}{Z\bibinitperiod}{Matei}{M\bibinitperiod}{}{}{}{}}%
        {{hash=9fc5630d12e8b22a1d2351a530caa51b}{Franklin}{F\bibinitperiod}{Michael\bibnamedelima J.}{M\bibinitperiod\bibinitdelim J\bibinitperiod}{}{}{}{}}%
        {{hash=8d2fd528d2484047352789c731e250a5}{Shenker}{S\bibinitperiod}{Scott}{S\bibinitperiod}{}{}{}{}}%
        {{hash=51d9ef26181e2e8a9dc546b401e0bb26}{Stoica}{S\bibinitperiod}{Ion}{I\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {New York, New York, USA}%
      }
      \list{publisher}{1}{%
        {ACM Press}%
      }
      \strng{namehash}{fef977da1327483b0d524e60ce3b478a}
      \strng{fullhash}{69f6944172b9b75805049f50f2672774}
      \field{sortinit}{X}
      \field{sortinithash}{2999ebab86052e6d71b434385f8b4ed2}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{Proceedings of the 2013 international conference on Management of data - SIGMOD '13}
      \field{isbn}{9781450320375}
      \field{month}{06}
      \field{title}{{Shark}}
      \field{year}{2013}
      \field{pages}{13}
      \range{pages}{1}
      \verb{doi}
      \verb 10.1145/2463676.2465288
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Xin et al. - 2013 - Shark.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=2463676.2465288
      \endverb
      \keyw{data warehouse,databases,hadoop,machine learning,shark,spark}
    \endentry
    \entry{Yoo2011}{inproceedings}{}
      \name{author}{4}{}{%
        {{hash=56e9cfdfd6770d3eb5f0207c92ab6966}{Yoo}{Y\bibinitperiod}{Sunghwan}{S\bibinitperiod}{}{}{}{}}%
        {{hash=a7b00406f009b97efac0986812387816}{Lee}{L\bibinitperiod}{Hyojeong}{H\bibinitperiod}{}{}{}{}}%
        {{hash=0ac0f379b83cb858ebc1c439d451fdaf}{Killian}{K\bibinitperiod}{Charles}{C\bibinitperiod}{}{}{}{}}%
        {{hash=6451bbf3003ca6e87b4e648102f20132}{Kulkarni}{K\bibinitperiod}{Milind}{M\bibinitperiod}{}{}{}{}}%
      }
      \list{location}{1}{%
        {New York, New York, USA}%
      }
      \list{publisher}{1}{%
        {ACM Press}%
      }
      \strng{namehash}{31c6323906f9ffb8fb1b82c0a572955c}
      \strng{fullhash}{d0419a42c238fc4dcdffe241b02f3f2e}
      \field{sortinit}{Y}
      \field{sortinithash}{3cbc1e3d286284cedb5e5218a3248f94}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{As networking services, such as DHTs, provide increasingly complex functionality, providing acceptable performance will require parallelizing their operations on individual nodes. Unfortunately, the event-driven style in which these appli- cations have traditionally been written makes it dicult to reason about parallelism, and providing safe, ecient paral- lel implementations of distributed systems remains a chal- lenge. In this paper, we introduce a declarative program- ming model based on contexts, which allows programmers to specify the sharing behavior of event handlers. Programs that adhere to the programming model can be safely paral- lelized according to an abstract execution model, with paral- lel behavior that is well-de ned with respect to the expected sequential behavior. The declarative nature of the program- ming model allows conformance to be captured as a safety property that can be veri ed using a model checker. We develop a prototype implementation of our abstract execution model and show that distributed applications writ- ten in our programming model can be automatically and eciently parallelized. To recover additional parallelism, we present an optimization to the implementation based on state snapshots that permits more events to proceed in paral- lel. We evaluate our prototype implementation through sev- eral case studies and demonstrate signi cant speedup over optimized sequential implementations.}
      \field{booktitle}{HPDC}
      \field{isbn}{9781450305525}
      \field{month}{06}
      \field{title}{{InContext : Simple Parallelism for Distributed Applications Categories and Subject Descriptors}}
      \field{year}{2011}
      \field{pages}{97}
      \range{pages}{1}
      \verb{doi}
      \verb 10.1145/1996130.1996144
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Yoo et al. - 2011 - InContext Simple Parallelism for Distributed Applications Categories and Subject Descriptors.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=1996130.1996144
      \endverb
      \keyw{all or part of,distributed programming,is granted without fee,mace,or hard copies of,permission to make digital,personal or classroom use,provided that copies are,this work for}
    \endentry
    \entry{Yu2007}{article}{}
      \name{author}{4}{}{%
        {{hash=fedcedec0f4c3a906efce023fbd96214}{Yu}{Y\bibinitperiod}{D}{D\bibinitperiod}{}{}{}{}}%
        {{hash=5cb077bd753047ce8bf41eaa7a79ce0b}{Chander}{C\bibinitperiod}{A}{A\bibinitperiod}{}{}{}{}}%
        {{hash=4913a1a52f15eeec3709f606011e8527}{Islam}{I\bibinitperiod}{N}{N\bibinitperiod}{}{}{}{}}%
        {{hash=05cfeea880ef33f0df0dcc1b85f97b52}{Serikov}{S\bibinitperiod}{I}{I\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{4171d93414abdf1cc934b2e21603800a}
      \strng{fullhash}{79b523936f73ec819b0c6f356488ace3}
      \field{sortinit}{Y}
      \field{sortinithash}{3cbc1e3d286284cedb5e5218a3248f94}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{ACM SIGPLAN Notices}
      \field{title}{{JavaScript instrumentation for browser security}}
      \field{year}{2007}
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Yu et al. - 2007 - JavaScript instrumentation for browser security.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=1190252
      \endverb
    \endentry
    \entry{Yu2009}{article}{}
      \name{author}{10}{}{%
        {{hash=b8e2e9f67019f464cefe5db1c822ffd9}{Yu}{Y\bibinitperiod}{Yuan}{Y\bibinitperiod}{}{}{}{}}%
        {{hash=3b62e7eedeec9f7a7f7f3c3ec88637f1}{Isard}{I\bibinitperiod}{Michael}{M\bibinitperiod}{}{}{}{}}%
        {{hash=d8a311200408fb252b9cb023defcd08e}{Fetterly}{F\bibinitperiod}{Dennis}{D\bibinitperiod}{}{}{}{}}%
        {{hash=8836a39dd4362973525947badc96d6d0}{Budiu}{B\bibinitperiod}{Mihai}{M\bibinitperiod}{}{}{}{}}%
        {{hash=2d29333108d79bea087b2d9fa6885220}{Erlingsson}{E\bibinitperiod}{Ulfar}{U\bibinitperiod}{}{}{}{}}%
        {{hash=14f808bb1f86a4dcc4303627a8affd5c}{Gunda}{G\bibinitperiod}{Pradeep\bibnamedelima Kumar}{P\bibinitperiod\bibinitdelim K\bibinitperiod}{}{}{}{}}%
        {{hash=5da236a7cc32077a1d99736792ffd432}{Currey}{C\bibinitperiod}{Jon}{J\bibinitperiod}{}{}{}{}}%
        {{hash=a0e6c99aabdc2587f248892c8bb23f70}{McSherry}{M\bibinitperiod}{Frank}{F\bibinitperiod}{}{}{}{}}%
        {{hash=79ba2bd6ba1876984c6393007ffaf596}{Achan}{A\bibinitperiod}{Kannan}{K\bibinitperiod}{}{}{}{}}%
        {{hash=bc221bc5d40f098428e0bbbbc5439ec4}{Poulain}{P\bibinitperiod}{Christophe}{C\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{8c0433657b324b3d24162a946f8bb989}
      \strng{fullhash}{690c4546e80948ac900f3a4690c91acb}
      \field{sortinit}{Y}
      \field{sortinithash}{3cbc1e3d286284cedb5e5218a3248f94}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{journaltitle}{Microsoft Research}
      \field{title}{{Some sample programs written in DryadLINQ}}
      \field{year}{2009}
      \verb{url}
      \verb http://research.microsoft.com/jump/66811
      \endverb
    \endentry
    \entry{Yuki2013}{article}{}
      \name{author}{5}{}{%
        {{hash=debd3529b9f1fe6f67b75ad1405ff0b9}{Yuki}{Y\bibinitperiod}{Tomofumi}{T\bibinitperiod}{}{}{}{}}%
        {{hash=1861b5d118a9c60b61f991f1c03df17f}{Gupta}{G\bibinitperiod}{Gautam}{G\bibinitperiod}{}{}{}{}}%
        {{hash=9bfa885072bbf625b2c906ca5660c015}{Kim}{K\bibinitperiod}{Daegon}{D\bibinitperiod}{}{}{}{}}%
        {{hash=d2b59d6641b083534e83dce244dbbf93}{Pathan}{P\bibinitperiod}{Tanveer}{T\bibinitperiod}{}{}{}{}}%
        {{hash=bff300ee8439a8eee1ae2d323757c67d}{Rajopadhye}{R\bibinitperiod}{Sanjay}{S\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{8873bac0ea2eaec79bbed5a9a6d5200e}
      \strng{fullhash}{fd65e7d346e61f9bce436348022a8740}
      \field{sortinit}{Y}
      \field{sortinithash}{3cbc1e3d286284cedb5e5218a3248f94}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{isbn}{9783642376573}
      \field{issn}{03029743}
      \field{journaltitle}{Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)}
      \field{title}{{AlphaZ: A system for design space exploration in the polyhedral model}}
      \field{volume}{7760 LNCS}
      \field{year}{2013}
      \field{pages}{17\bibrangedash 31}
      \range{pages}{15}
      \verb{doi}
      \verb 10.1007/978-3-642-37658-0_2
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Yuki, Gupta, Kim - 2013 - Alphaz A system for design space exploration in the polyhedral model.pdf:pdf
      \endverb
      \verb{url}
      \verb http://link.springer.com/chapter/10.1007/978-3-642-37658-0%7B%5C_%7D2
      \endverb
    \endentry
    \entry{Zaharia2012a}{article}{}
      \name{author}{4}{}{%
        {{hash=00dc518b94dfa6349c86e70661a1a5ef}{Zaharia}{Z\bibinitperiod}{Matei}{M\bibinitperiod}{}{}{}{}}%
        {{hash=c5a8ae0d5f065be17aae440a9eb11c79}{Chowdhury}{C\bibinitperiod}{Mosharaf}{M\bibinitperiod}{}{}{}{}}%
        {{hash=f8b27ed8b503bc3e7b32fc53bace3697}{Das}{D\bibinitperiod}{Tathagata}{T\bibinitperiod}{}{}{}{}}%
        {{hash=aec50de877bd49b0c55f7067c573cd4f}{Dave}{D\bibinitperiod}{Ankur}{A\bibinitperiod}{}{}{}{}}%
      }
      \list{publisher}{1}{%
        {USENIX Association}%
      }
      \strng{namehash}{43b7683e391995e2f59755c9e939df3c}
      \strng{fullhash}{30d28090654ae4e42f0a5a091acbdc4d}
      \field{sortinit}{Z}
      \field{sortinithash}{fdda4caaa6b5fa63e0c081dcb159543a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{We present Resilient Distributed Datasets (RDDs), a distributed memory abstraction that lets programmers perform in-memory computations on large clusters in a fault-tolerant manner. RDDs are motivated by two types of applications that current computing frameworks handle inefficiently: iterative algorithms and interactive data mining tools. In both cases, keeping data in memory can improve performance by an order of magnitude. To achieve fault tolerance efficiently, RDDs provide a restricted form of shared memory, based on coarse-grained transformations rather than fine-grained updates to shared state. However, we show that RDDs are expressive enough to capture a wide class of computations, including recent specialized programming models for iterative jobs, such as Pregel, and new applications that these models do not capture. We have implemented RDDs in a system called Spark, which we evaluate through a variety of user applications and benchmarks.}
      \field{eprinttype}{arXiv}
      \field{isbn}{978-931971-92-8}
      \field{issn}{00221112}
      \field{journaltitle}{NSDI'12 Proceedings of the 9th USENIX conference on Networked Systems Design and Implementation}
      \field{month}{04}
      \field{title}{{Resilient distributed datasets: A fault-tolerant abstraction for in-memory cluster computing}}
      \field{year}{2012}
      \field{pages}{2\bibrangedash 2}
      \range{pages}{1}
      \verb{doi}
      \verb 10.1111/j.1095-8649.2005.00662.x
      \endverb
      \verb{eprint}
      \verb EECS-2011-82
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Zaharia et al. - 2012 - Resilient distributed datasets a fault-tolerant abstraction for in-memory cluster computing.pdf:pdf
      \endverb
      \verb{url}
      \verb http://dl.acm.org/citation.cfm?id=2228298.2228301%20https://www.usenix.org/system/files/conference/nsdi12/nsdi12-final138.pdf
      \endverb
    \endentry
    \entry{Zheng2014}{inproceedings}{}
      \name{author}{5}{}{%
        {{hash=dceadc16cf98d6df8b5991b422ed54f4}{Zheng}{Z\bibinitperiod}{Yili}{Y\bibinitperiod}{}{}{}{}}%
        {{hash=d88cb2581065bcee29a9fc344807451b}{Kamil}{K\bibinitperiod}{Amir}{A\bibinitperiod}{}{}{}{}}%
        {{hash=97526869f5186ea4220963da6151c2c1}{Driscoll}{D\bibinitperiod}{Michael\bibnamedelima B.}{M\bibinitperiod\bibinitdelim B\bibinitperiod}{}{}{}{}}%
        {{hash=3d2868bd8ba5e11c5f56bb9331dcbbf2}{Shan}{S\bibinitperiod}{Hongzhang}{H\bibinitperiod}{}{}{}{}}%
        {{hash=25640d959d1bf65555c260fb1f07c09c}{Yelick}{Y\bibinitperiod}{Katherine}{K\bibinitperiod}{}{}{}{}}%
      }
      \strng{namehash}{46359bd52b9598ac45a564352dd06a6a}
      \strng{fullhash}{f67062a61ed2c8d6b1c55e647c5bfdc6}
      \field{sortinit}{Z}
      \field{sortinithash}{fdda4caaa6b5fa63e0c081dcb159543a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Partitioned Global Address Space (PGAS) languages are convenient for expressing algorithms with large, random-access data, and they have proven to provide high performance and scalability through lightweight one-sided communication and locality control. While very convenient for moving data around the system, PGAS languages have taken different views on the model of computation, with the static Single Program Multiple Data (SPMD) model providing the best scalability. In this paper we present UPC++, a PGAS extension for C++ that has three main objectives: 1) to provide an object-oriented PGAS programming model in the context of the popular C++ language, 2) to add useful parallel programming idioms unavailable in UPC, such as asynchronous remote function invocation and multidimensional arrays, to support complex scientific applications, 3) to offer an easy on-ramp to PGAS programming through interoperability with other existing parallel programming systems (e.g., MPI, OpenMP, CUDA). We implement UPC++ with a "compiler-free" approach using C++ templates and runtime libraries. We borrow heavily from previous PGAS languages and describe the design decisions that led to this particular set of language features, providing significantly more expressiveness than UPC with very similar performance characteristics. We evaluate the programmability and performance of UPC++ using five benchmarks on two representative supercomputers, demonstrating that UPC++ can deliver excellent performance at large scale up to 32K cores while offering PGAS productivity features to C++ applications.}
      \field{booktitle}{2014 IEEE 28th International Parallel and Distributed Processing Symposium}
      \field{isbn}{9781479938001}
      \field{issn}{1530-2075}
      \field{title}{{UPC++: A PGAS Extension for C++}}
      \field{year}{2014}
      \field{pages}{1105\bibrangedash 1114}
      \range{pages}{10}
      \verb{doi}
      \verb 10.1109/IPDPS.2014.115
      \endverb
      \verb{file}
      \verb :home/etn/Documents/PhD/Biblio/Zheng et al. - 2014 - UPC A PGAS Extension for C.pdf:pdf
      \endverb
      \verb{url}
      \verb http://web.eecs.umich.edu/%7B~%7Dakamil/papers/ipdps14.pdf%20http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6877339
      \endverb
      \keyw{Arrays,C++ language,C++ templates,Electronics packaging,Instruction sets,Libraries,PGAS,PGAS language extension,Parallel Computing,Parallel Programming,Programming,Programming System,SPMD model,Syntactics,Titanium,UPC++,asynchronous remote function invocation,compiler-free approach,complex scientific applications,data models,large random-access data,lightweight one-sided communication,locality control,multidimensional arrays,object-oriented PGAS programming model,object-oriented programming,parallel programming,parallel programming systems,partitioned global address space languages,representative supercomputers,runtime libraries,static single program multiple data model}
    \endentry
  \endsortlist
\endrefsection
\endinput

