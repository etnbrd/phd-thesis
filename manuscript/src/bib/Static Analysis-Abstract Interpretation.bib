Automatically generated by Mendeley Desktop 1.16-dev4
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Options -> BibTeX in Mendeley Desktop

@article{Abramsky1987,
author = {Abramsky, S and Hankin, C},
file = {:home/etn/Documents/PhD/Biblio/Abramsky, Hankin - 1987 - An introduction to abstract interpretation.pdf:pdf},
journal = {Abstract Interpretation of declarative {\ldots}},
title = {{An introduction to abstract interpretation}},
url = {https://www.ursuletz.com/{~}weimer/2006-615/reading/AbramskiAI.pdf},
year = {1987}
}
@article{Cousot1979,
author = {Cousot, P and Cousot, R},
file = {:home/etn/Documents/PhD/Biblio/Cousot, Cousot - 1979 - Systematic design of program analysis frameworks.pdf:pdf},
journal = {Proceedings of the 6th ACM SIGACT-SIGPLAN  {\ldots}},
title = {{Systematic design of program analysis frameworks}},
url = {http://dl.acm.org/citation.cfm?id=567778},
year = {1979}
}
@article{Cousot1977,
author = {Cousot, P and Cousot, R},
file = {:home/etn/Documents/PhD/Biblio/Cousot, Cousot - 1977 - Abstract interpretation a unified lattice model for static analysis of programs by construction or approximation.pdf:pdf},
journal = {Proceedings of the 4th ACM SIGACT-SIGPLAN {\ldots}},
title = {{Abstract interpretation: a unified lattice model for static analysis of programs by construction or approximation of fixpoints}},
url = {http://dl.acm.org/citation.cfm?id=512973},
year = {1977}
}
@article{Andersen1994,
author = {Andersen, LO},
file = {:home/etn/Documents/PhD/Biblio/Andersen - 1994 - Program analysis and specialization for the C programming language.pdf:pdf},
title = {{Program analysis and specialization for the C programming language}},
url = {http://www-ti.informatik.uni-tuebingen.de/{~}behrend/PaperSeminar/Program Analysis and SpecializationPhD.pdf},
year = {1994}
}
@article{Gardner2012,
author = {Gardner, PA and Maffeis, S and Smith, GD},
file = {:home/etn/Documents/PhD/Biblio/Gardner, Maffeis, Smith - 2012 - Towards a program logic for JavaScript.pdf:pdf},
journal = {ACM SIGPLAN Notices},
title = {{Towards a program logic for JavaScript}},
url = {http://dl.acm.org/citation.cfm?id=2103663},
year = {2012}
}
@article{Maffeis2008,
author = {Maffeis, S and Mitchell, JC and Taly, A},
file = {:home/etn/Documents/PhD/Biblio/Maffeis, Mitchell, Taly - 2008 - An operational semantics for JavaScript.pdf:pdf},
journal = {Programming languages and systems},
title = {{An operational semantics for JavaScript}},
url = {http://link.springer.com/chapter/10.1007/978-3-540-89330-1{\_}22},
year = {2008}
}
@article{Sridharan2009,
author = {Sridharan, M and Fink, SJ},
file = {:home/etn/Documents/PhD/Biblio/Sridharan, Fink - 2009 - The complexity of Andersen's analysis in practice.pdf:pdf},
journal = {Static Analysis},
title = {{The complexity of Andersen's analysis in practice}},
url = {http://link.springer.com/chapter/10.1007/978-3-642-03237-0{\_}15},
year = {2009}
}
@article{Jensen2012,
author = {Jensen, SH and Jonsson, PA and M{\o}ller, A},
file = {:home/etn/Documents/PhD/Biblio/Jensen, Jonsson, M{\o}ller - 2012 - Remedying the eval that men do.pdf:pdf},
journal = {Proceedings of the 2012  {\ldots}},
title = {{Remedying the eval that men do}},
url = {http://dl.acm.org/citation.cfm?id=2336758},
year = {2012}
}
@article{Richards2011,
author = {Richards, G and Hammer, C and Burg, B and Vitek, J},
file = {:home/etn/Documents/PhD/Biblio/Richards et al. - 2011 - The eval that men do.pdf:pdf},
journal = {ECOOP 2011–Object-Oriented  {\ldots}},
title = {{The eval that men do}},
url = {http://link.springer.com/chapter/10.1007/978-3-642-22655-7{\_}4},
year = {2011}
}
@article{Kam1977,
author = {Kam, JB and Ullman, JD},
file = {:home/etn/Documents/PhD/Biblio/Kam, Ullman - 1977 - Monotone data flow analysis frameworks.pdf:pdf},
journal = {Acta Informatica},
title = {{Monotone data flow analysis frameworks}},
url = {http://link.springer.com/article/10.1007/BF00290339},
year = {1977}
}
@article{Jang2009,
abstract = {JavaScript is widely used by web developers and the complexity of JavaScript programs has increased over the last year. Therefore, the need for program analysis for JavaScript is evident. Points-to analysis for JavaScript is to determine the set of objects to which a reference variable or an object property may point. Points-to analysis for JavaScript is a basis for further program analyses for JavaScript. It has a wide range of applications in code optimization and software engineering tools. However, points-to analysis for JavaScript has not yet been developed. JavaScript has dynamic features such as the runtime modification of objects through addition of properties or updating of methods. We propose a points-to analysis for JavaScript which precisely handles the dynamic features of JavaScript. Our work is the first attempt to analyze the points-to behavior of JavaScript. We evaluate the analysis on a set of JavaScript programs. We also apply the analysis to a code optimization technique to show that the analysis can be practically useful. Copyright 2009 ACM.},
author = {Jang, Dongseok and Choe, Kwang-Moo},
doi = {10.1145/1529282.1529711},
file = {:home/etn/Documents/PhD/Biblio/Jang, Choe - 2009 - Points-to analysis for JavaScript.pdf:pdf},
isbn = {9781605581668},
journal = {Proceedings of the 2009 ACM symposium on Applied Computing SAC 09},
keywords = {cen,education,engineering research,javascript,korea ministry,pointer analysis,points analysis,program anal,ter excellence program,work supported},
pages = {1930},
title = {{Points-to analysis for JavaScript}},
url = {http://dl.acm.org/citation.cfm?id=1529711 http://portal.acm.org/citation.cfm?doid=1529282.1529711},
year = {2009}
}
@inproceedings{Sridharan2012,
author = {Sridharan, M and Dolby, J and Chandra, S},
booktitle = {ECOOP 2012–Object-Oriented Programming.},
file = {:home/etn/Documents/PhD/Biblio/Sridharan, Dolby, Chandra - 2012 - Correlation tracking for points-to analysis of JavaScript.pdf:pdf},
title = {{Correlation tracking for points-to analysis of JavaScript}},
url = {http://link.springer.com/chapter/10.1007/978-3-642-31057-7{\_}20},
year = {2012}
}
@article{Wei2014,
author = {Wei, S and Ryder, BG},
journal = {ECOOP 2014–Object-Oriented Programming},
title = {{State-sensitive points-to analysis for the dynamic behavior of JavaScript objects}},
url = {http://link.springer.com/chapter/10.1007/978-3-662-44202-9{\_}1},
year = {2014}
}
@article{Plotkin1981,
author = {Plotkin, GD},
file = {:home/etn/Documents/PhD/Biblio/Plotkin - 1981 - A structural approach to operational semantics.pdf:pdf},
title = {{A structural approach to operational semantics}},
url = {https://www.alice.virginia.edu/{~}weimer/2006-655/reading/plotkin81structural.pdf},
year = {1981}
}
@article{OHearn2001,
author = {O'Hearn, P and Reynolds, J and Yang, H},
file = {:home/etn/Documents/PhD/Biblio/O'Hearn, Reynolds, Yang - 2001 - Local reasoning about programs that alter data structures.pdf:pdf},
journal = {Computer science logic},
title = {{Local reasoning about programs that alter data structures}},
url = {http://link.springer.com/chapter/10.1007/3-540-44802-0{\_}1},
year = {2001}
}
@article{Raychev2013,
abstract = {Like shared-memory multi-threaded programs, event-driven programs such as client-side web applications are susceptible to data races that are hard to reproduce and debug. Race detection for such programs is hampered by their pervasive use of ad hoc synchronization, which can lead to a prohibitive number of false positives. Race detection also faces a scalability challenge, as a large number of short-running event handlers can quickly overwhelm standard vector-clock-based techniques. This paper presents several novel contributions that address both of these challenges. First, we introduce race coverage, a systematic method for exposing ad hoc synchronization and other (potentially harmful) races to the user, significantly reducing false positives. Second, we present an efficient connectivity algorithm for computing race coverage. The algorithm is based on chain decomposition and leverages the structure of event-driven programs to dramatically decrease the overhead of vector clocks. We implemented our techniques in a tool called EventRacer and evaluated it on a number of public web sites. The results indicate substantial performance and precision improvements of our approach over the state-of-the-art. Using EventRacer, we found many harmful races, most of which are beyond the reach of current techniques.},
author = {Raychev, Veselin and Vechev, Martin and Sridharan, Manu},
doi = {10.1145/2544173.2509538},
file = {:home/etn/Documents/PhD/Biblio/Raychev, Vechev, Sridharan - 2013 - Effective Race Detection for Event-driven Programs.pdf:pdf},
isbn = {978-1-4503-2374-1},
issn = {0362-1340},
journal = {SIGPLAN Not.},
keywords = {asynchrony,concurrency,nondeterminism,race detection,web},
month = {nov},
number = {10},
pages = {151--166},
publisher = {ACM},
title = {{Effective Race Detection for Event-driven Programs}},
url = {http://dl.acm.org/citation.cfm?id=2544173.2509538 http://doi.acm.org/10.1145/2544173.2509538},
volume = {48},
year = {2013}
}
