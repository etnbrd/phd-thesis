Automatically generated by Mendeley Desktop 1.16-dev1
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Options -> BibTeX in Mendeley Desktop

@inproceedings{Charles2005,
address = {New York, New York, USA},
author = {Charles, Philippe and Grothoff, Christian and Saraswat, Vijay and Donawa, Christopher and Kielstra, Allan and Ebcioglu, Kemal and von Praun, Christoph and Sarkar, Vivek},
booktitle = {Proceedings of the 20th annual ACM SIGPLAN conference on Object oriented programming systems languages and applications - OOPSLA '05},
doi = {10.1145/1094811.1094852},
file = {:home/etn/Documents/PhD/Biblio/Charles et al. - 2005 - X10.pdf:pdf},
isbn = {1595930310},
issn = {0362-1340},
keywords = {Java,X10,atomic blocks,clocks,data distribution,multithreading,non-uniform cluster computing (NUCC),partitioned global address space (PGAS),places,productivity,scalability},
month = {oct},
number = {10},
pages = {519},
publisher = {ACM Press},
title = {{X10}},
url = {http://dl.acm.org/citation.cfm?id=1094811.1094852},
volume = {40},
year = {2005}
}
@article{Chamberlain2007,
abstract = {In this paper we consider productivity challenges for parallel programmers and explore ways that parallel language design might help improve end-user productivity. We offer a candidate list of desirable qualities for a parallel programming language, and describe how these qualities are addressed in the design of the Chapel language. In doing so, we provide an overview of Chapel's features and how they help address parallel productivity. We also survey current techniques for parallel programming and describe ways in which we consider them to fall short of our idealized productive programming model.},
author = {Chamberlain, B.L. and Callahan, D. and Zima, H.P.},
doi = {10.1177/1094342007078442},
file = {:home/etn/Documents/PhD/Biblio/Chamberlain, Callahan, Zima - 2007 - Parallel Programmability and the Chapel Language.pdf:pdf},
issn = {1094-3420},
journal = {International Journal of High Performance Computing Applications},
month = {aug},
number = {3},
pages = {291--312},
title = {{Parallel Programmability and the Chapel Language}},
url = {http://hpc.sagepub.com/content/21/3/291.short},
volume = {21},
year = {2007}
}
@inproceedings{Chapman2010,
address = {New York, New York, USA},
author = {Chapman, Barbara and Curtis, Tony and Pophale, Swaroop and Poole, Stephen and Kuehn, Jeff and Koelbel, Chuck and Smith, Lauren},
booktitle = {Proceedings of the Fourth Conference on Partitioned Global Address Space Programming Model - PGAS '10},
doi = {10.1145/2020373.2020375},
file = {:home/etn/Documents/PhD/Biblio/Chapman et al. - 2010 - Introducing OpenSHMEM.pdf:pdf},
isbn = {9781450304610},
keywords = {ACM proceedings,OpenSHMEM,PGAS,SHMEM},
month = {oct},
pages = {1--3},
publisher = {ACM Press},
title = {{Introducing OpenSHMEM}},
url = {http://dl.acm.org/citation.cfm?id=2020373.2020375},
year = {2010}
}
@inproceedings{El-Ghazawi2006,
address = {New York, New York, USA},
author = {El-Ghazawi, Tarek and Smith, Lauren},
booktitle = {Proceedings of the 2006 ACM/IEEE conference on Supercomputing - SC '06},
doi = {10.1145/1188455.1188483},
isbn = {0769527000},
month = {nov},
pages = {27},
publisher = {ACM Press},
title = {{UPC: unified parallel C}},
url = {http://dl.acm.org/ft{\_}gateway.cfm?id=1188483{\&}type=html},
year = {2006}
}
@article{Numrich1998,
author = {Numrich, Robert W. and Reid, John},
doi = {10.1145/289918.289920},
file = {:home/etn/Documents/PhD/Biblio/Numrich, Reid - 1998 - Co-array Fortran for parallel programming.pdf:pdf},
issn = {10617264},
journal = {ACM SIGPLAN Fortran Forum},
month = {aug},
number = {2},
pages = {1--31},
publisher = {ACM},
title = {{Co-array Fortran for parallel programming}},
url = {http://dl.acm.org/citation.cfm?id=289918.289920},
volume = {17},
year = {1998}
}
@inproceedings{Zheng2014,
abstract = {Partitioned Global Address Space (PGAS) languages are convenient for expressing algorithms with large, random-access data, and they have proven to provide high performance and scalability through lightweight one-sided communication and locality control. While very convenient for moving data around the system, PGAS languages have taken different views on the model of computation, with the static Single Program Multiple Data (SPMD) model providing the best scalability. In this paper we present UPC++, a PGAS extension for C++ that has three main objectives: 1) to provide an object-oriented PGAS programming model in the context of the popular C++ language, 2) to add useful parallel programming idioms unavailable in UPC, such as asynchronous remote function invocation and multidimensional arrays, to support complex scientific applications, 3) to offer an easy on-ramp to PGAS programming through interoperability with other existing parallel programming systems (e.g., MPI, OpenMP, CUDA). We implement UPC++ with a "compiler-free" approach using C++ templates and runtime libraries. We borrow heavily from previous PGAS languages and describe the design decisions that led to this particular set of language features, providing significantly more expressiveness than UPC with very similar performance characteristics. We evaluate the programmability and performance of UPC++ using five benchmarks on two representative supercomputers, demonstrating that UPC++ can deliver excellent performance at large scale up to 32K cores while offering PGAS productivity features to C++ applications.},
author = {Zheng, Yili and Kamil, Amir and Driscoll, Michael B. and Shan, Hongzhang and Yelick, Katherine},
booktitle = {2014 IEEE 28th International Parallel and Distributed Processing Symposium},
doi = {10.1109/IPDPS.2014.115},
file = {:home/etn/Documents/PhD/Biblio/Zheng et al. - 2014 - UPC A PGAS Extension for C.pdf:pdf},
isbn = {978-1-4799-3800-1},
issn = {1530-2075},
keywords = {Arrays,C++ language,C++ templates,Electronics packaging,Instruction sets,Libraries,PGAS,PGAS language extension,Parallel Computing,Parallel Programming,Programming,Programming System,SPMD model,Syntactics,Titanium,UPC++,asynchronous remote function invocation,compiler-free approach,complex scientific applications,data models,large random-access data,lightweight one-sided communication,locality control,multidimensional arrays,object-oriented PGAS programming model,object-oriented programming,parallel programming,parallel programming systems,partitioned global address space languages,representative supercomputers,runtime libraries,static single program multiple data model},
pages = {1105--1114},
title = {{UPC++: A PGAS Extension for C++}},
url = {http://web.eecs.umich.edu/{~}akamil/papers/ipdps14.pdf http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6877339},
year = {2014}
}
@inproceedings{Edwards2012,
address = {New York, New York, USA},
author = {Edwards, H. Carter and Sunderland, Daniel},
booktitle = {Proceedings of the 2012 International Workshop on Programming Models and Applications for Multicores and Manycores - PMAM '12},
doi = {10.1145/2141702.2141703},
isbn = {9781450312110},
keywords = {GPU,manycore,mini-application,multicore,multidimensional array},
month = {feb},
pages = {1--10},
publisher = {ACM Press},
title = {{Kokkos Array performance-portable manycore programming model}},
url = {http://dl.acm.org/citation.cfm?id=2141702.2141703},
year = {2012}
}
@article{Hornung2014,
author = {Hornung, R D and Keasler, J A},
file = {:home/etn/Documents/PhD/Biblio/Hornung, Keasler - 2014 - The RAJA Portability Layer Overview and Status.pdf:pdf},
title = {{The RAJA Portability Layer : Overview and Status}},
url = {https://e-reports-ext.llnl.gov/pdf/782261.pdf},
year = {2014}
}
@inproceedings{Ajima2015,
address = {New York, New York, USA},
author = {Ajima, Yuichiro and Nose, Takafumi and Saga, Kazushige and Shida, Naoyuki and Sumimoto, Shinji},
booktitle = {Proceedings of the First International Workshop on Extreme Scale Programming Models and Middleware - ESPM '15},
doi = {10.1145/2832241.2832242},
file = {:home/etn/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Ajima et al. - 2015 - ACPdl.pdf:pdf},
isbn = {9781450339964},
keywords = {PGAS,communication library,data structure,global memory allocator},
month = {nov},
pages = {11--18},
publisher = {ACM Press},
title = {{ACPdl}},
url = {http://dl.acm.org/citation.cfm?id=2832241.2832242},
year = {2015}
}
