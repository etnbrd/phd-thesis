Automatically generated by Mendeley Desktop 1.14.1-dev5
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Options -> BibTeX in Mendeley Desktop

@article{Dijkstra1968,
author = {Dijkstra, Edsger W.},
doi = {10.1145/363095.363143},
file = {:home/etn/Documents/PhD/Biblio/Dijkstra - 1968 - The structure of the “THE”-multiprogramming system.pdf:pdf},
issn = {00010782},
journal = {Communications of the ACM},
keywords = {cooperating sequential processes,input-output buffering,multiprocessing,multiprogramming,multiprogramming system,operating system,processor sharing,program verification,real-time debugging,synchronizing primitives,system hierarchy,system levels,system structure},
month = {may},
number = {5},
pages = {341--346},
publisher = {ACM},
title = {{The structure of the “THE”-multiprogramming system}},
url = {http://dl.acm.org/citation.cfm?id=363095.363143},
volume = {11},
year = {1968}
}
@article{Parnas2002,
author = {Parnas, DL},
journal = {Software pioneers},
title = {{The secret history of information hiding}},
url = {http://link.springer.com/chapter/10.1007/978-3-642-59412-0_26},
year = {2002}
}
@inproceedings{Stroggylos2007,
author = {Stroggylos, Konstantinos and Spinellis, Diomidis},
booktitle = {Fifth International Workshop on Software Quality (WoSQ'07: ICSE Workshops 2007)},
doi = {10.1109/WOSQ.2007.11},
file = {:home/etn/Documents/PhD/Biblio/Stroggylos, Spinellis - 2007 - Refactoring--Does It Improve Software Quality.pdf:pdf},
isbn = {0-7695-2959-3},
month = {may},
pages = {10--10},
publisher = {IEEE},
title = {{Refactoring--Does It Improve Software Quality?}},
url = {http://dl.acm.org/citation.cfm?id=1270241.1270369},
year = {2007}
}
@article{Parnas1972,
author = {Parnas, DL},
file = {:home/etn/Documents/PhD/Biblio/Parnas - 1972 - On the criteria to be used in decomposing systems into modules.pdf:pdf},
journal = {Communications of the ACM},
title = {{On the criteria to be used in decomposing systems into modules}},
url = {http://dl.acm.org/citation.cfm?id=361623},
year = {1972}
}
@article{Stevens1974,
author = {Stevens, W. P. and Myers, G. J. and Constantine, L. L.},
doi = {10.1147/sj.132.0115},
file = {:home/etn/Documents/PhD/Biblio/Stevens, Myers, Constantine - 1974 - Structured design.pdf:pdf},
issn = {0018-8670},
journal = {IBM Systems Journal},
language = {English},
number = {2},
pages = {115--139},
publisher = {IBM},
title = {{Structured design}},
url = {http://ieeexplore.ieee.org/articleDetails.jsp?arnumber=5388187},
volume = {13},
year = {1974}
}
@article{Welker2001,
author = {Welker, KD},
file = {:home/etn/Documents/PhD/Biblio/Welker - 2001 - The software maintainability index revisited.pdf:pdf},
journal = {CrossTalk},
title = {{The software maintainability index revisited}},
url = {http://staff.unak.is/andy/MScMaintenance0809/Lectures/Add/MIRevisited2001.pdf},
year = {2001}
}
@article{Parnas1979,
author = {Parnas, D.L.},
doi = {10.1109/TSE.1979.234169},
file = {:home/etn/Documents/PhD/Biblio/Parnas - 1979 - Designing Software for Ease of Extension and Contraction.pdf:pdf},
issn = {0098-5589},
journal = {IEEE Transactions on Software Engineering},
keywords = {Computer industry,Computer science,Contractibility,Data structures,Information systems,Job shop scheduling,Processor scheduling,Programming profession,Software design,Software engineering,Software systems,extensibility,modularity,software engineering,subsets,supersets},
language = {English},
month = {mar},
number = {2},
pages = {128--138},
publisher = {IEEE},
title = {{Designing Software for Ease of Extension and Contraction}},
url = {http://ieeexplore.ieee.org/articleDetails.jsp?arnumber=1702607},
volume = {SE-5},
year = {1979}
}
@inproceedings{Wong2009,
author = {Wong, Sunny and Cai, Yuanfang and Valetto, Giuseppe and Simeonov, Georgi and Sethi, Kanwarpreet},
booktitle = {2009 IEEE/ACM International Conference on Automated Software Engineering},
doi = {10.1109/ASE.2009.53},
file = {:home/etn/Documents/PhD/Biblio/Wong et al. - 2009 - Design Rule Hierarchies and Parallelism in Software Development Tasks.pdf:pdf},
isbn = {978-1-4244-5259-0},
keywords = {collaboration,project management,software architecture},
month = {nov},
pages = {197--208},
publisher = {IEEE},
title = {{Design Rule Hierarchies and Parallelism in Software Development Tasks}},
url = {http://dl.acm.org/citation.cfm?id=1747491.1747520},
year = {2009}
}
@inproceedings{Riaz2009,
author = {Riaz, Mehwish and Mendes, Emilia and Tempero, Ewan},
booktitle = {2009 3rd International Symposium on Empirical Software Engineering and Measurement},
doi = {10.1109/ESEM.2009.5314233},
file = {:home/etn/Documents/PhD/Biblio/Riaz, Mendes, Tempero - 2009 - A systematic review of software maintainability prediction and metrics.pdf:pdf},
isbn = {978-1-4244-4842-5},
month = {oct},
pages = {367--377},
publisher = {IEEE},
title = {{A systematic review of software maintainability prediction and metrics}},
url = {http://dl.acm.org/citation.cfm?id=1671248.1671283},
year = {2009}
}
@article{Chen2009,
abstract = {Many problem factors in the software development phase affect the maintainability of the delivered software systems. Therefore, understanding software development problem factors can help in not only reducing the incidence of project failure but can also ensure software maintainability. This study focuses on those software development problem factors which may possibly affect software maintainability. Twenty-five problem factors were classified into five dimensions; a questionnaire was designed and 137 software projects were surveyed. A K-means cluster analysis was performed to classify the projects into three groups of low, medium and high maintainability projects. For projects which had a higher level of severity of problem factors, the influence on software maintainability becomes more obvious. The influence of software process improvement (SPI) on project problems and the associated software maintainability was also examined in this study. Results suggest that SPI can help reduce the level of severity of the documentation quality and process management problems, and is only likely to enhance software maintainability to a medium level. Finally, the top 10 list of higher-severity software development problem factors was identified, and implications were discussed.},
author = {Chen, Jie-Cherng and Huang, Sun-Jen},
doi = {10.1016/j.jss.2008.12.036},
file = {:home/etn/Documents/PhD/Biblio/Chen, Huang - 2009 - An empirical analysis of the impact of software development problem factors on software maintainability.pdf:pdf},
issn = {01641212},
journal = {Journal of Systems and Software},
keywords = {Software development problem factors,Software maintainability,Software process improvement},
month = {jun},
number = {6},
pages = {981--992},
title = {{An empirical analysis of the impact of software development problem factors on software maintainability}},
url = {http://www.sciencedirect.com/science/article/pii/S0164121208002793},
volume = {82},
year = {2009}
}
@article{Dijkstra1968a,
author = {Dijkstra, Edsger W.},
doi = {10.1145/362929.362947},
file = {:home/etn/Documents/PhD/Biblio/Dijkstra - 1968 - Letters to the editor go to statement considered harmful.pdf:pdf},
issn = {00010782},
journal = {Communications of the ACM},
keywords = {alternative clause,branch instruction,conditional clause,go to statement,jump instruction,program intelligibility,program sequencing,repetitive clause},
month = {mar},
number = {3},
pages = {147--148},
publisher = {ACM},
title = {{Letters to the editor: go to statement considered harmful}},
url = {http://dl.acm.org/citation.cfm?id=362929.362947},
volume = {11},
year = {1968}
}
