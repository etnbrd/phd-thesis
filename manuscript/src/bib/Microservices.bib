Automatically generated by Mendeley Desktop 1.16-dev4
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Options -> BibTeX in Mendeley Desktop

@misc{Fowler2014,
author = {Fowler, M and Lewis, J},
title = {{Microservices}},
url = {http://martinfowler.com/articles/microservices.html},
urldate = {2015-11-19},
year = {2014}
}
@article{Fernandez-Villamor2010,
author = {Fern{\'{a}}ndez-Villamor, JI},
file = {:home/etn/Documents/PhD/Biblio/Fern{\'{a}}ndez-Villamor - 2010 - Microservices-Lightweight Service Descriptions for REST Architectural Style.pdf:pdf},
journal = {Proceedings of the 2nd International Conference on Agents and Artificial Intelligence, ICAART 2010},
title = {{Microservices-Lightweight Service Descriptions for REST Architectural Style.}},
url = {http://www.researchgate.net/publication/221539905{\_}Microservices{\_}-{\_}Lightweight{\_}Service{\_}Descriptions{\_}for{\_}REST{\_}Architectural{\_}Style},
year = {2010}
}
@article{Davies2008,
author = {Davies, M and Gil, G},
file = {:home/etn/Documents/PhD/Biblio/Davies, Gil - 2008 - m Ciudad an infrastructure for creation and sharing of end user generated microservices.pdf:pdf},
journal = {{\ldots} of the Poster and {\ldots}},
title = {{m: Ciudad: an infrastructure for creation and sharing of end user generated microservices}},
url = {http://ftp.informatik.rwth-aachen.de/Publications/CEUR-WS/Vol-399/paper08.pdf},
year = {2008}
}
@article{Sheth2007,
abstract = {Services based on the representational state transfer (REST) paradigm, a lightweight implementation of a service-oriented architecture, have found even greater success than their heavyweight siblings, which are based on the Web Services Description Language (WSDL) and SOAP. By using XML-based messaging, RESTful services can bring together discrete data from different services to create meaningful data sets; mashups such as these are extremely popular today.},
author = {Sheth, Amit P. and Gomadam, Karthik and Lathem, Jon},
doi = {10.1109/MIC.2007.133},
file = {:home/etn/Documents/PhD/Biblio/Sheth, Gomadam, Lathem - 2007 - SA-REST Semantically Interoperable and Easier-to-Use Services and Mashups.pdf:pdf},
issn = {1089-7801},
journal = {IEEE Internet Computing},
keywords = {Web services,mashups,semantics and services},
language = {English},
month = {nov},
number = {6},
pages = {91--94},
publisher = {IEEE Computer Society},
title = {{SA-REST: Semantically Interoperable and Easier-to-Use Services and Mashups}},
url = {http://www.computer.org/csdl/mags/ic/2007/06/mic2007060091.html},
volume = {11},
year = {2007}
}
@article{Worthen2007,
author = {Worthen, B},
journal = {The Wall Street J},
title = {{Mashups Sew Data Together: Software Tools Can Cut Costs, Time for Linking Information Sources}},
url = {https://scholar.google.com/scholar?q=Mashups Sew Data Together: Software Tools Can Cut Costs, Time for Linking Information Source{\&}btnG=Search{\&}as{\_}sdt=800000000001{\&}as{\_}sdtp=on{\#}0 http://www.wsj.com/articles/SB118584045835882843},
year = {2007}
}
@article{Nicolaescu2015,
author = {Nicolaescu, P and Klamma, R},
journal = {Engineering the Web in the Big Data Era},
title = {{A Methodology and Tool Support for Widget-Based Web Application Development}},
url = {http://link.springer.com/chapter/10.1007/978-3-319-19890-3{\_}33},
year = {2015}
}
@inproceedings{Adam2008,
abstract = {Business Process Management (BPM) and Service Oriented Architectures (SOA) are considered as a powerful combination for supporting enterprise's success. While BPM addresses the (goal-driven) design, deployment, and continuous evaluation of business processes, SOA promises a supporting IT paradigm to make process applications and thus enterprises more agile and flexible. Nevertheless, there is still a gap between business and IT, as the services provided by an SOA cannot - until now - support the business processes immediately. In this paper, we focus on the transition between the design and the deployment of business processes and present our ideas on how this transition could be streamlined by a better alignment of BPM and SOA. Based on systems engineering and product line experience, we identify solution principles and discuss related questions.},
author = {Adam, Sebastian and Doerr, Joerg},
booktitle = {CEUR Workshop Proceedings},
file = {:home/etn/Documents/PhD/Biblio/Adam, Doerr - 2008 - How to better align BPM {\&} SOA - Ideas on improving the transition between process design and deployment.pdf:pdf},
issn = {16130073},
keywords = {Business IT alignment,Business Process Management,Product line engineering,Service-oriented architecture},
pages = {49--55},
title = {{How to better align BPM {\&} SOA - Ideas on improving the transition between process design and deployment}},
url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.143.870{\&}rep=rep1{\&}type=pdf},
volume = {335},
year = {2008}
}
@inproceedings{Elmeleegy2008,
author = {Elmeleegy, Hazem and Ivan, Anca and Akkiraju, Rama and Goodwin, Richard},
booktitle = {2008 IEEE International Conference on Web Services},
doi = {10.1109/ICWS.2008.128},
isbn = {978-0-7695-3310-0},
keywords = {Artificial intelligence,Companies,Computer science,Informatics,Information filtering,Information filters,Joining processes,MashupAdvisor,Mashups,State estimation,Web services,advisor,information resources,information services,information sources,mashup development,mashups,recommendation tool,semantic matching algorithm,web services},
language = {English},
month = {sep},
pages = {337--344},
publisher = {IEEE},
title = {{Mashup Advisor: A Recommendation Tool for Mashup Development}},
url = {http://ieeexplore.ieee.org/articleDetails.jsp?arnumber=4670193},
year = {2008}
}
@inproceedings{Arnold2008,
abstract = {Deployment patterns have been proposed as a mechanism to support the provisioning of SOA-based services. Deployment patterns represent the structure and constraints of composite solutions, including non-functional properties, such as performance, availability, and security, without binding to specific resource instances. In previous work [1], we have presented a formal mechanism for capturing such service deployment patterns using models. Our pattern models define abstract connectivity and configuration requirements which are then realized by an existing or planned infrastructure. Realization mapping is used to enforce policies, and is materialized at deployment time. In this paper we extend that work to address the problem of automatic pattern realization over a given infrastructure. We first formalize the problem and present three variations of increasing power and complexity. We then present a variation of a search-based graph isomorphism algorithm with extensions for our pattern model semantics. Next, we show that our worst-case exponential complexity algorithm performs well in practice, over a number of pattern and infrastructure combinations. We speculate that this is because deployment topologies represent heavily labeled and sparse graphs. We present a number of heuristics which we have compared experimentally, and have identified one which performs best across most scenarios. Our algorithm has been incorporated into a large deployment modeling platform, now part of the IBM Rational Software Architect (RSA) tool [2].},
author = {Arnold, William and Eilam, Tamar and Kalantar, Michael and Konstantinou, Alexander V. and Totok, Alexander A.},
booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
doi = {10.1007/978-3-540-89652-4-15},
file = {:home/etn/Documents/PhD/Biblio/Arnold et al. - 2008 - Automatic realization of SOA deployment patterns in distributed environments.pdf:pdf},
isbn = {3540896473},
issn = {03029743},
pages = {162--179},
title = {{Automatic realization of SOA deployment patterns in distributed environments}},
url = {http://link.springer.com/chapter/10.1007/978-3-540-89652-4{\_}15},
volume = {5364 LNCS},
year = {2008}
}
@misc{Namiot2014,
abstract = {This paper provides an overview of micro-services architecture and implementation patterns. It continues our series of publications about M2M systems, existing and upcoming system software platforms for M2M applications. A micro-service is a lightweight and independent service that performs single functions and collaborates with other similar services using a well-defined interface. We would like to discuss the common principles behind this approach, its advantages and disadvantages as well as its possible usage in M2M applications.},
author = {Namiot, Dmitry and Sneps-Sneppe, Manfred},
booktitle = {International Journal of Open Information Technologies},
file = {:home/etn/Documents/PhD/Biblio/Namiot, Sneps-Sneppe - 2014 - On Micro-services Architecture.pdf:pdf},
issn = {2307-8162},
language = {en},
month = {aug},
number = {9},
pages = {24--27},
title = {{On Micro-services Architecture}},
url = {http://injoit.org/index.php/j1/article/view/139},
volume = {2},
year = {2014}
}
