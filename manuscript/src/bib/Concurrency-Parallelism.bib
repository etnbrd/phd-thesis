Automatically generated by Mendeley Desktop 1.14.1-dev5
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Options -> BibTeX in Mendeley Desktop

@article{Moore1965,
author = {Moore, G},
file = {:home/etn/Documents/PhD/Biblio/Moore - 1965 - Cramming More Components Onto Integrated Circuits.pdf:pdf},
journal = {Electronics},
number = {38},
pages = {8},
title = {{Cramming More Components Onto Integrated Circuits}},
url = {https://scholar.google.com/scholar?q=cramming+more+components+1965&btnG=&hl=en&as_sdt=0%2C39#5},
year = {1965}
}
@article{Karp1969,
abstract = {This paper introduces a model called the parallel program schema for the representation and study of programs containing parallel sequencing. The model is related to Ianov's program schema, but extends it, both by modelling memory structure in more detail and by admitting parallel computation. The emphasis is on decision procedures, both for traditional properties, such as equivalence, and for new properties particular to parallel computation, such as determinacy and boundedness.},
author = {Karp, Richard M. and Miller, Raymond E.},
doi = {10.1016/S0022-0000(69)80011-5},
file = {:home/etn/Documents/PhD/Biblio/Karp, Miller - 1969 - Parallel program schemata.pdf:pdf},
issn = {00220000},
journal = {Journal of Computer and System Sciences},
month = {may},
number = {2},
pages = {147--195},
title = {{Parallel program schemata}},
url = {http://www.sciencedirect.com/science/article/pii/S0022000069800115},
volume = {3},
year = {1969}
}
@article{Wirth1977,
author = {Wirth, N.},
doi = {10.1002/spe.4380070102},
file = {:home/etn/Documents/PhD/Biblio/Wirth - 1977 - Modula A language for modular multiprogramming.pdf:pdf},
issn = {00380644},
journal = {Software: Practice and Experience},
month = {jan},
number = {1},
pages = {1--35},
title = {{Modula: A language for modular multiprogramming}},
url = {http://doi.wiley.com/10.1002/spe.4380070102},
volume = {7},
year = {1977}
}
@incollection{Hoare2002,
abstract = {The objectives in the construction of a theory of parallel programming as a basis for a high-level programming language feature are: Security from error. In many of the applications of parallel programming the cost of programming error is very high, often inhibiting the use of computers in environments for which they would otherwise be highly suitable. Parallel programs are particularly prone to time-dependent errors, which either cannot be detected by program testing nor by run-time checks. It is therefore very important that a high-level language designed for this purpose should provide complete security against time-dependent errors by means of a compile-time check. Efficiency. The spread of real-time computer applications is severely limited by computing costs; and in particular by the cost of main store. If a feature to assist in parallel programming is to be added to a language used for this purpose, it must not entail any noticeable extra run-time overhead in space or speed, neither on programs which use the feature heavily, nor on programs which do not; efficient implementation should be possible on a variety of hardware designs, both simple and complex; and there should be no need for bulky or slow compilers. Conceptual simplicity.},
author = {Hoare, C. a. R.},
booktitle = {The origin of concurrent programming},
isbn = {978-1-4419-2986-0, 978-1-4757-3472-0},
issn = {<null>},
pages = {231--244},
title = {{Towards a Theory of Parallel Programming}},
url = {http://link.springer.com/chapter/10.1007/978-1-4757-3472-0_6 http://link.springer.com/chapter/10.1007/978-1-4757-3472-0_6\nhttp://link.springer.com/chapter/10.1007/978-1-4757-3472-0_6#page-1},
year = {2002}
}
@article{Dijkstra1975,
author = {Dijkstra, Edsger W.},
doi = {10.1145/360933.360975},
file = {:home/etn/Documents/PhD/Biblio/Dijkstra - 1975 - Guarded commands, nondeterminacy and formal derivation of programs.pdf:pdf},
issn = {00010782},
journal = {Communications of the ACM},
keywords = {case-construction,correctness proof,derivation of programs,nondeterminancy,program semantics,programming language semantics,programming languages,programming methodology,repetition,sequencing primitives,termination},
month = {aug},
number = {8},
pages = {453--457},
publisher = {ACM},
title = {{Guarded commands, nondeterminacy and formal derivation of programs}},
url = {http://dl.acm.org/citation.cfm?id=360933.360975},
volume = {18},
year = {1975}
}
