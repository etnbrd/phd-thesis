Automatically generated by Mendeley Desktop 1.14.1-dev7
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Options -> BibTeX in Mendeley Desktop

@article{Odersky2004,
abstract = {Scala fuses object-oriented and functional programmin gin a statically typed programming language. It is aimed at teh construction of componetns and component systems. This paper gives an overview of teh Scala language for readers who are familiar with programming methods and programming language design.},
author = {Odersky, Martin and Altherr, Philippe and Cremet, Vincent and Emir, Burak and Maneth, Sebastian and Micheloud, St\'{e}phane and Mihaylov, Nikolay and Schinz, Michel and Stenman, Erik and Zenger, Matthias},
file = {:home/etn/Documents/PhD/Biblio/Odersky et al. - 2004 - An Overview of the Scala Programming Language.pdf:pdf},
isbn = {0849331358},
journal = {System},
number = {Section 2},
pages = {1--130},
title = {{An Overview of the Scala Programming Language}},
url = {http://infoscience.epfl.ch/record/52656/files/ScalaOverview.pdf http://infoscience.epfl.ch/record/52656/files/ScalaOverview.pdf?version=1},
year = {2004}
}
@article{Welsh2001,
author = {Welsh, M and Culler, D and Brewer, E},
file = {:home/etn/Documents/PhD/Biblio/Welsh, Culler, Brewer - 2001 - SEDA an architecture for well-conditioned, scalable internet services.pdf:pdf},
journal = {ACM SIGOPS Operating Systems Review},
title = {{SEDA: an architecture for well-conditioned, scalable internet services}},
url = {http://dl.acm.org/citation.cfm?id=502057},
year = {2001}
}
@article{VanCutsem2009,
abstract = {In modern programming languages, concurrency control can be traced back to one of two different schools: actor-based message passing concurrency and thread-based shared-state concurrency. This paper describes a linguistic symbiosis between two programming languages with such different concurrency models. More specifically, we describe a novel symbiosis between actors represented as event loops on the one hand and threads on the other. This symbiosis ensures that the invariants of the actor-based concurrency model are not violated by engaging in symbiosis with multithreaded programs. The proposed mapping is validated by means of a concrete symbiosis between AmbientTalk, a flexible, domain-specific language for writing distributed programs and Java, a conventional object-oriented language. This symbiosis allows the domain-specific language to reuse existing software components written in a multithreaded language without sacrificing the beneficial event-driven properties of the actor concurrency model.},
author = {{Van Cutsem}, Tom and Mostinckx, Stijn and {De Meuter}, Wolfgang},
doi = {10.1016/j.cl.2008.06.005},
file = {:home/etn/Documents/PhD/Biblio/Van Cutsem, Mostinckx, De Meuter - 2009 - Linguistic symbiosis between event loop actors and threads.pdf:pdf},
issn = {14778424},
journal = {Computer Languages, Systems & Structures},
keywords = {Actors,AmbientTalk,Events,Futures,Linguistic symbiosis,Threads},
month = {apr},
number = {1},
pages = {80--98},
title = {{Linguistic symbiosis between event loop actors and threads}},
url = {http://www.sciencedirect.com/science/article/pii/S1477842408000249},
volume = {35},
year = {2009}
}
@book{Liskov1988,
author = {Liskov, B and Shrira, L},
title = {{Promises: linguistic support for efficient asynchronous procedure calls in distributed systems}},
url = {http://dl.acm.org/citation.cfm?id=54016},
year = {1988}
}
@book{Welsh2000,
author = {Welsh, M and Gribble, SD and Brewer, EA and Culler, D},
file = {:home/etn/Documents/PhD/Biblio/Welsh et al. - 2000 - A design framework for highly concurrent systems.pdf:pdf},
keywords = {Event,SEDA},
mendeley-tags = {Event,SEDA},
title = {{A design framework for highly concurrent systems}},
url = {http://www.cs.berkeley.edu/$\sim$culler/papers/events.pdf},
year = {2000}
}
@inproceedings{Toshniwal2014a,
address = {New York, New York, USA},
author = {Toshniwal, Ankit and Donham, Jake and Bhagat, Nikunj and Mittal, Sailesh and Ryaboy, Dmitriy and Taneja, Siddarth and Shukla, Amit and Ramasamy, Karthik and Patel, Jignesh M. and Kulkarni, Sanjeev and Jackson, Jason and Gade, Krishna and Fu, Maosong},
booktitle = {Proceedings of the 2014 ACM SIGMOD international conference on Management of data - SIGMOD '14},
doi = {10.1145/2588555.2595641},
isbn = {9781450323765},
keywords = {real-time query processing,stream data management},
month = {jun},
pages = {147--156},
publisher = {ACM Press},
title = {{Storm@twitter}},
url = {http://dl.acm.org/citation.cfm?id=2588555.2595641},
year = {2014}
}
@article{DeCandia2007,
author = {DeCandia, G and Hastorun, D},
file = {:home/etn/Documents/PhD/Biblio/DeCandia, Hastorun - 2007 - Dynamo amazon's highly available key-value store.pdf:pdf},
journal = {ACM SIGOPS  \ldots},
title = {{Dynamo: amazon's highly available key-value store}},
url = {http://dl.acm.org/citation.cfm?id=1294281},
year = {2007}
}
@article{Power2010,
author = {Power, R and Li, J},
file = {:home/etn/Documents/PhD/Biblio/Power, Li - 2010 - Piccolo Building Fast, Distributed Programs with Partitioned Tables.pdf:pdf},
journal = {OSDI},
title = {{Piccolo: Building Fast, Distributed Programs with Partitioned Tables.}},
url = {http://static.usenix.org/event/osdi10/tech/full_papers/Power.pdf},
year = {2010}
}
@article{Lakshman2010,
author = {Lakshman, A and Malik, P},
journal = {ACM SIGOPS Operating Systems Review},
title = {{Cassandra: a decentralized structured storage system}},
url = {http://dl.acm.org/citation.cfm?id=1773922},
year = {2010}
}
@article{Fu2001,
author = {Fu, X and Shi, W and Akkerman, A and Karamcheti, V},
file = {:home/etn/Documents/PhD/Biblio/Fu et al. - 2001 - CANS Composable, Adaptive Network Services Infrastructure.pdf:pdf},
journal = {USITS},
title = {{CANS: Composable, Adaptive Network Services Infrastructure.}},
url = {http://static.usenix.org/event/usits01/full_papers/fu/fu.pdf},
year = {2001}
}
@article{Dean2008,
archivePrefix = {arXiv},
arxivId = {10.1.1.163.5292},
author = {Dean, Jeffrey and Ghemawat, Sanjay},
doi = {10.1145/1327452.1327492},
eprint = {10.1.1.163.5292},
isbn = {9781595936868},
issn = {00010782},
journal = {Communications of the ACM - 50th anniversary issue: 1958 - 2008},
number = {1},
pages = {107--113},
pmid = {11687618},
title = {{MapReduce: Simplified Data Processing on Large Clusters}},
url = {http://dl.acm.org/citation.cfm?id=1327492 http://doi.acm.org/10.1145/1327452.1327492},
volume = {51},
year = {2008}
}
@article{Mitchell2012,
author = {Mitchell, C and Power, R and Li, J},
file = {:home/etn/Documents/PhD/Biblio/Mitchell, Power, Li - 2012 - Oolong asynchronous distributed applications made easy.pdf:pdf},
journal = {Proceedings of the Asia-Pacific Workshop on Systems},
title = {{Oolong: asynchronous distributed applications made easy}},
url = {http://dl.acm.org/citation.cfm?id=2349907},
year = {2012}
}
@inproceedings{Salmito2013,
author = {Salmito, Tiago and de Moura, Ana Lucia and Rodriguez, Noemi},
booktitle = {2013 42nd International Conference on Parallel Processing},
doi = {10.1109/ICPP.2013.80},
file = {:home/etn/Documents/PhD/Biblio/Salmito, Moura, Rodriguez - 2013 - A Flexible Approach to Staged Events.pdf:pdf},
isbn = {978-0-7695-5117-3},
issn = {0190-3918},
keywords = {Concurrent computing,Connectors,Instruction sets,Kernel,Leda,Parallel processing,Runtime,SEDA,Servers,application logic,asynchronous communication channels,concurrency,concurrency control,directed graph,directed graphs,event-driven,hybrid concurrent model classification,multi-threading,parallel architectures,staged event driven architecture,stages,threads},
language = {English},
month = {oct},
pages = {661--670},
publisher = {IEEE},
title = {{A Flexible Approach to Staged Events}},
url = {http://ieeexplore.ieee.org/articleDetails.jsp?arnumber=6687404},
year = {2013}
}
@article{Rotem-Gal-Oz2006,
author = {Rotem-Gal-Oz, A},
journal = {\ldots http://www. rgoarchitects. com/Files/fallacies. \ldots},
title = {{Fallacies of distributed computing explained}},
url = {http://www.rgoarchitects.com/Files/fallacies.pdf},
year = {2006}
}
@article{Fouquet2012,
author = {Fouquet, F and Morin, B and Fleurey, F},
journal = {\ldots  on Component Based  \ldots},
title = {{A dynamic component model for cyber physical systems}},
url = {http://dl.acm.org/citation.cfm?id=2304759},
year = {2012}
}
@article{Salmito2014,
author = {Salmito, Tiago and de Moura, Ana L\'{u}cia and Rodriguez, Noemi},
doi = {10.1007/s11227-014-1110-4},
file = {:home/etn/Documents/PhD/Biblio/Salmito, de Moura, Rodriguez - 2014 - A stepwise approach to developing staged applications.pdf:pdf},
issn = {0920-8542},
journal = {The Journal of Supercomputing},
month = {jan},
title = {{A stepwise approach to developing staged applications}},
url = {http://link.springer.com/10.1007/s11227-014-1110-4},
year = {2014}
}
@inproceedings{Clements2013a,
address = {New York, New York, USA},
author = {Clements, Austin T. and Kaashoek, M. Frans and Zeldovich, Nickolai and Morris, Robert T. and Kohler, Eddie},
booktitle = {Proceedings of the Twenty-Fourth ACM Symposium on Operating Systems Principles - SOSP '13},
doi = {10.1145/2517349.2522712},
file = {:home/etn/Documents/PhD/Biblio/Clements et al. - 2013 - The scalable commutativity rule.pdf:pdf},
isbn = {9781450323888},
month = {nov},
pages = {1--17},
publisher = {ACM Press},
title = {{The scalable commutativity rule}},
url = {http://dl.acm.org/citation.cfm?id=2517349.2522712},
year = {2013}
}
@article{Gribble2001,
author = {Gribble, SD and Welsh, M and Behren, R Von},
file = {:home/etn/Documents/PhD/Biblio/Gribble, Welsh, Behren - 2001 - The Ninja architecture for robust Internet-scale systems and services.pdf:pdf},
journal = {Computer Networks},
title = {{The Ninja architecture for robust Internet-scale systems and services}},
url = {http://www.sciencedirect.com/science/article/pii/S1389128600001791},
year = {2001}
}
@article{Lamport1982,
author = {Lamport, Leslie and Shostak, Robert and Pease, Marshall},
doi = {10.1145/357172.357176},
file = {:home/etn/Documents/PhD/Biblio/Lamport, Shostak, Pease - 1982 - The Byzantine Generals Problem.pdf:pdf},
issn = {01640925},
journal = {ACM Transactions on Programming Languages and Systems},
month = {jul},
number = {3},
pages = {382--401},
publisher = {ACM},
title = {{The Byzantine Generals Problem}},
url = {http://dl.acm.org/citation.cfm?id=357172.357176},
volume = {4},
year = {1982}
}
@article{Conway1963,
author = {Conway, Melvin E.},
doi = {10.1145/366663.366704},
file = {:home/etn/Documents/PhD/Biblio/Conway - 1963 - Design of a separable transition-diagram compiler.pdf:pdf},
issn = {00010782},
journal = {Communications of the ACM},
month = {jul},
number = {7},
pages = {396--408},
publisher = {ACM},
title = {{Design of a separable transition-diagram compiler}},
url = {http://dl.acm.org/citation.cfm?id=366663.366704},
volume = {6},
year = {1963}
}
@article{Lamport1978,
author = {Lamport, L},
file = {:home/etn/Documents/PhD/Biblio/Lamport - 1978 - Time, clocks, and the ordering of events in a distributed system.pdf:pdf},
journal = {Communications of the ACM},
title = {{Time, clocks, and the ordering of events in a distributed system}},
url = {http://dl.acm.org/citation.cfm?id=359563},
year = {1978}
}
@inproceedings{Jr1990,
abstract = {We need a programming model that com- bines the advantages of the synchronous and asyn- chronous parallel styles. Synchronous programs are de- terminate (thus easier to reason about) and avoid syn- chronization overheads. Asynchronous programs are more flexible and handle conditionals more efficiently. Here we propose a programming model with the ben- efits of both styles. We allow asynchronous threads of control but restrict shared-memory accesses and other side effects so as to prevent the behavior of the program from depending on any accidents of execution order that can arise from the indeterminacy of the asynchronous process model. These restrictions may be enforced either dynam- ically (at run time) or statically (at compile time). In this paper we concentrate on dynamic enforcement, and exhibit an implementation of a parallel dialect of Scheme based on these ideas. A single successful exe- cution of a parallel program in this model constitutes a proof that the program is free of race conditions (for that particular set of input data). We also speculate on a design for a programming lan- guage using static enforcement. The notion of distinct- ness is important to proofs of noninterference. An ap- propriately designed programming language must sup port such concepts as “all the elements of this array are distinct,” perhaps through its type system. This parallel programming model does not support all styles of parallel programming, but we argue that it can support a large class of interesting algorithms with considerably greater efficiency (in some cases) than a strict SIMD approach and considerably greater safety (in all cases) than a full-blown MIMD approach.},
author = {Guy, L and Steele, Jr},
booktitle = {Proceedings of the 17th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
doi = {10.1145/96709.96731},
isbn = {0-89791-343-4},
issn = {07308566},
pages = {218--231},
title = {{Making asynchronous parallelism safe for the world}},
url = {http://dl.acm.org/citation.cfm?id=96731},
year = {1990}
}
@article{Ongaro2014,
author = {Ongaro, D and Ousterhout, J},
file = {:home/etn/Documents/PhD/Biblio/Ongaro, Ousterhout - 2014 - In search of an understandable consensus algorithm.pdf:pdf},
journal = {Proc. USENIX Annual Technical Conference},
keywords = {raft},
mendeley-tags = {raft},
title = {{In search of an understandable consensus algorithm}},
url = {https://www.usenix.org/system/files/conference/atc14/atc14-paper-ongaro.pdf},
year = {2014}
}
@article{Cardelli1999,
author = {Cardelli, L and Ghelli, G and Gordon, AD},
journal = {Automata, Languages and Programming},
title = {{Mobility types for mobile ambients}},
url = {http://link.springer.com/chapter/10.1007/3-540-48523-6_20},
year = {1999}
}
@article{Reed2012,
author = {Reed, DP},
file = {:home/etn/Documents/PhD/Biblio/Reed - 2012 - Simultaneous Considered Harmful Modular Parallelism.pdf:pdf},
journal = {HotPar},
title = {{" Simultaneous" Considered Harmful: Modular Parallelism.}},
url = {https://scholar.google.com/scholar?q=%E2%80%9CSimultaneous%E2%80%9D+Considered+Harmful%3A+Modular+Parallelism&btnG=&hl=en&as_sdt=0%2C39#0},
year = {2012}
}
@article{Mullender1990,
author = {Mullender, SJ and Rossum, G Van},
journal = {Computer},
title = {{Amoeba: A distributed operating system for the 1990s}},
url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=53354},
year = {1990}
}
@article{Hansen1978,
author = {Hansen, Per Brinch},
doi = {10.1145/359642.359651},
file = {:home/etn/Documents/PhD/Biblio/Hansen - 1978 - Distributed processes a concurrent programming concept.pdf:pdf},
issn = {00010782},
journal = {Communications of the ACM},
keywords = {buffers,classes,concurrent programming,coroutines,distributed processes,guarded regions,input/output,microprocessor networks,monitors,nondeterminism,path expressions,process communication and scheduling,processes,programming languages,semaphores,sorting arrays},
month = {nov},
number = {11},
pages = {934--941},
publisher = {ACM},
title = {{Distributed processes: a concurrent programming concept}},
url = {http://dl.acm.org/citation.cfm?id=359642.359651},
volume = {21},
year = {1978}
}
@article{Gilbert2002,
author = {Gilbert, S and Lynch, N},
file = {:home/etn/Documents/PhD/Biblio/Gilbert, Lynch - 2002 - Brewer's conjecture and the feasibility of consistent, available, partition-tolerant web services(2).pdf:pdf},
journal = {ACM SIGACT News},
title = {{Brewer's conjecture and the feasibility of consistent, available, partition-tolerant web services}},
url = {http://dl.acm.org/citation.cfm?id=564601},
year = {2002}
}
@article{Steen2007,
author = {Steen, Marteen Van and Tanenbaum, Andrew S},
journal = {Network},
title = {{Distributed Systems: principles and paradigms}},
url = {http://u.cs.biu.ac.il/$\sim$ariel/download/ds590/pdfs/notes.01.pdf},
year = {2007}
}
@article{Gilbert2012,
author = {Gilbert, S and Lynch, NA},
file = {:home/etn/Documents/PhD/Biblio/Gilbert, Lynch - 2012 - Perspectives on the CAP Theorem.pdf:pdf},
title = {{Perspectives on the CAP Theorem}},
url = {http://dspace.mit.edu/handle/1721.1/79112},
year = {2012}
}
@article{Gupta2004,
author = {Gupta, Rohit and Somani, AK},
journal = {\ldots on the Economics of Peer-to-Peer systems},
pages = {1--6},
title = {{Compup2p: An architecture for sharing of computing resources in peer-to-peer networks with selfish nodes}},
url = {http://www.eecs.harvard.edu/p2pecon/confman/papers/s1p3.pdf},
year = {2004}
}
@techreport{Kahn1976,
abstract = {Les concepts de coroutine et de processus interviennent dans une grande vari\'{e}t\'{e} d'applications, o\`{u} il est en g\'{e}n\'{e}ral n\'{e}cessaire de produire ou de transformer des donn\'{e}es de fa\c{c}on progressive. Nous pr\'{e}sentons un langage, fond\'{e} sur une vue s\'{e}mantique pr\'{e}cises de l'interaction entre processus, qui facilite la programmation de r\'{e}seaux de processus qui \'{e}voluent dynamiquement. Ces r\'{e}seaux ont un comportement externe unique, qu'ils soient ex\'{e}cut\'{e}s de mani\`{e}re s\'{e}quentielle ou parall\`{e}le. Les avantages d'une s\'{e}mantique d\'{e}notationelle simple sont illustr\'{e}s par des preuves de programmes. Ce langage de programmation permet aussi de clarifier les relations entre plusieurs concepts : coroutines, appel par n\'{e}cessit\'{e}, structures de donn\'{e}es dynamiques et calcul parall\`{e}le.},
author = {Kahn, Gilles and Macqueen, David},
file = {:home/etn/Documents/PhD/Biblio/Kahn, Macqueen - 1976 - Coroutines and Networks of Parallel Processes.pdf:pdf},
language = {en},
pages = {20},
title = {{Coroutines and Networks of Parallel Processes}},
url = {https://hal.inria.fr/inria-00306565/},
year = {1976}
}
@book{Fox1997,
author = {Fox, A and Gribble, SD and Chawathe, Y and Brewer, EA and Gauthier, P},
file = {:home/etn/Documents/PhD/Biblio/Fox et al. - 1997 - Cluster-based scalable network services.pdf:pdf},
title = {{Cluster-based scalable network services}},
url = {http://dl.acm.org/citation.cfm?id=266662},
year = {1997}
}
@article{Maggiolo-Schettini1979,
author = {Maggiolo-Schettini, A},
file = {:home/etn/Documents/PhD/Biblio/Maggiolo-Schettini - 1979 - Modeling a solution for a control problem in distributed systems by restrictions.pdf:pdf},
journal = {Semantics of Concurrent  \ldots},
title = {{Modeling a solution for a control problem in distributed systems by restrictions}},
url = {http://link.springer.com/chapter/10.1007/BFb0022472},
year = {1979}
}
@article{Karger1997,
author = {Karger, D and Lehman, E and Leighton, T},
journal = {Proceedings of the  \ldots},
title = {{Consistent hashing and random trees: Distributed caching protocols for relieving hot spots on the World Wide Web}},
url = {http://dl.acm.org/citation.cfm?id=258660},
year = {1997}
}
