Automatically generated by Mendeley Desktop 1.16-dev4
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Options -> BibTeX in Mendeley Desktop

@inproceedings{Sridharan2012,
author = {Sridharan, M and Dolby, J and Chandra, S},
booktitle = {ECOOP 2012–Object-Oriented Programming.},
file = {:home/etn/Documents/PhD/Biblio/Sridharan, Dolby, Chandra - 2012 - Correlation tracking for points-to analysis of JavaScript.pdf:pdf},
title = {{Correlation tracking for points-to analysis of JavaScript}},
url = {http://link.springer.com/chapter/10.1007/978-3-642-31057-7{\_}20},
year = {2012}
}
@article{Andersen1994,
author = {Andersen, LO},
file = {:home/etn/Documents/PhD/Biblio/Andersen - 1994 - Program analysis and specialization for the C programming language.pdf:pdf},
title = {{Program analysis and specialization for the C programming language}},
url = {http://www-ti.informatik.uni-tuebingen.de/{~}behrend/PaperSeminar/Program Analysis and SpecializationPhD.pdf},
year = {1994}
}
@article{Jang2009,
abstract = {JavaScript is widely used by web developers and the complexity of JavaScript programs has increased over the last year. Therefore, the need for program analysis for JavaScript is evident. Points-to analysis for JavaScript is to determine the set of objects to which a reference variable or an object property may point. Points-to analysis for JavaScript is a basis for further program analyses for JavaScript. It has a wide range of applications in code optimization and software engineering tools. However, points-to analysis for JavaScript has not yet been developed. JavaScript has dynamic features such as the runtime modification of objects through addition of properties or updating of methods. We propose a points-to analysis for JavaScript which precisely handles the dynamic features of JavaScript. Our work is the first attempt to analyze the points-to behavior of JavaScript. We evaluate the analysis on a set of JavaScript programs. We also apply the analysis to a code optimization technique to show that the analysis can be practically useful. Copyright 2009 ACM.},
author = {Jang, Dongseok and Choe, Kwang-Moo},
doi = {10.1145/1529282.1529711},
file = {:home/etn/Documents/PhD/Biblio/Jang, Choe - 2009 - Points-to analysis for JavaScript.pdf:pdf},
isbn = {9781605581668},
journal = {Proceedings of the 2009 ACM symposium on Applied Computing SAC 09},
keywords = {cen,education,engineering research,javascript,korea ministry,pointer analysis,points analysis,program anal,ter excellence program,work supported},
pages = {1930},
title = {{Points-to analysis for JavaScript}},
url = {http://dl.acm.org/citation.cfm?id=1529711 http://portal.acm.org/citation.cfm?doid=1529282.1529711},
year = {2009}
}
@article{Wei2014,
author = {Wei, S and Ryder, BG},
journal = {ECOOP 2014–Object-Oriented Programming},
title = {{State-sensitive points-to analysis for the dynamic behavior of JavaScript objects}},
url = {http://link.springer.com/chapter/10.1007/978-3-662-44202-9{\_}1},
year = {2014}
}
