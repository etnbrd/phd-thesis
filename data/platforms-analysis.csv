Group      | Model                              | Composition | Encapsulation | Maintainability | Synchronization | Message | Performance | Community | Industry | Adoption | Implementations                               
Modular    | Imperative Programming             | 3           | 4             | 3               | 0               | 0       | 0           | 3         | 4        | 3        | Fortran, Algol, Cobol, Pascal and C
Modular    | Object-Oriented Programming        | 5           | 5             | 5               | 0               | 0       | 0           | 4         | 4        | 4        | C++ \cite{Stroustrup1986} and Java \cite{Gosling2000}
Modular    | Functional Programming             | 5           | 5             | 5               | 0               | 0       | 0           | 0         | 0        | 0        | Scheme \cite{Rees1986}, Miranda \cite{Turner1986}, Haskell \cite{Hudak1992} and Standard ML \cite{Milner1997}
Modular    | Multi Paradigm                     | 5           | 5             | 5               | 0               | 0       | 0           | 5         | 4        | 4        | Javacript, Python and Ruby
Concurrent | Event-driven programming           | 3           | 3             | 3               | 5               | 0       | 2           | 5         | 5        | 5        | TAME \cite{Krohn2007}, Node.js\ftnt{https://nodejs.org/en/} and Vert.X\ftnt{http://vertx.io/}
Concurrent | Lock-free Data-Structures          | 1           | 1             | 1               | 5               | 0       | 2           | 0         | 0        | 0        | linked list \cite{Valois1995,Timnat2012}, queue \cite{Sundell2003,Wimmer2015}, tree \cite{Ramachandran2015} and stack \cite{Hendler2004}
Concurrent | Multi-threading programming        | 2           | 2             | 2               | 4               | 0       | 1           | 0         | 0        | 0        | semaphores \cite{Dijkstra}, guarded commands \cite{Dijkstra1975}, guarded region \cite{Hansen1978a} and monitors \cite{Hoare1974}
Concurrent | Cooperative Threads                | 2           | 2             | 2               | 4               | 0       | 1           | 0         | 0        | 0        | Fibers \cite{Adya2002}
Parallel   | Actor Model                        | 1           | 1             | 1               | 5               | 5       | 5           | 1         | 5        | 1        | Erlang \cite{JoeArmstrong}, Scala \cite{Odersky2004}, Akka\ftnt{http://akka.io/} and Play\ftnt{https://www.playframework.com/}
Parallel   | Communicating Sequential Processes | 1           | 1             | 1               | 5               | 5       | 5           | 1         | 5        | 1        | Go\ftnt{https://golang.org/}
Parallel   | Skeleton                           | 2           | 2             | 2               | 4               | 4       | 4           | 2         | 5        | 2        | MapReduce                                      
Parallel   | Service Oriented Architecture      | 3           | 3             | 3               | 4               | 4       | 4           | 3         | 4        | 3        | OSGi\ftnt{https://www.osgi.org/developer/specifications/}, EJB\ftnt{http://www.oracle.com/technetwork/java/javaee/ejb/index.html} and Spring\ftnt{http://projects.spring.io/spring-framework/}
Parallel   | Microservices                      | 3           | 3             | 3               | 4               | 4       | 4           | 3         | 3        | 3        | Seneca\ftnt{http://senecajs.org/}
Stream     | Data Stream System Management      | 2           | 2             | 2               | 3               | 3       | 3           | 0         | 4        | 4        | DryadLINQ \cite{Isard2007,Yu2009}, Apache Hive \cite{Thusoo2009}, Timestream \cite{Qian2013}, Shark \cite{Xin2013}
Stream     | Pipeline Stream Processing         | 4           | 4             | 4               | 5               | 5       | 5           | 2         | 5        | 2        | SEDA \cite{Welsh2001}, StreaMIT \cite{Thies2002}, Spidle \cite{Consel2003}, Pig Latin \cite{Olston2008}, CBP \cite{Logothetis2010} and S4 \cite{Neumeyer2010} designed at Yahoo, Piccolo \cite{Power2010}, Comet \cite{He2010}, Nectar \cite{Gunda2010}, SEEP \cite{Migliavacca2010}, Legion \cite{Bauer2012}, Spark Streaming \cite{Zaharia2012a}, Naiad \cite{Murray2013} designed at Microsoft, Millwheel \cite{Akidau2013} designed at Google, Halide \cite{Ragan-Kelley2013}, Storm \cite{Toshniwal2014} by Twitter, SDG \cite{Fernandez2014a} and Regent \cite{Slaughter2015}
Runtime    | Partitionned Global Address Space  | 0           | 0             | 0               | 0               | 0       | 0           | 0         | 0        | 0        | CoArray Fortran \cite{Numrich1998}, X10 \cite{Charles2005}, Unified Parallel C \cite{El-Ghazawi2006}, Chapel\cite{Chamberlain2007}, OpenSHMEM \cite{Chapman2010}, Kokko \cite{Edwards2012}, UPC++ \cite{Zheng2014}, RAJA \cite{Hornung2014}, ACPdl \cite{Ajima2015}, HPX \cite{Kaiser2014,Kaiser2015}
Runtime    | Dynamic Distribution               | 0           | 0             | 0               | 0               | 0       | 0           | 0         | 0        | 0        | Leda \cite{Salmito2013,Salmito2014}
Compiler   | Polyhedral Compiler                | 0           | 0             | 0               | 0               | 0       | 0           | 0         | 0        | 0        | -
Compiler   | Annotation Compiler                | 0           | 0             | 0               | 0               | 0       | 0           | 0         | 0        | 0        | OpenMP \cite{Dagum1998}, OpenCL \cite{Stone2010}, CUDA \cite{Nvidia2007}, Cg \cite{Mark2003}, Brook \cite{Buck2004}, Liquid Metal \cite{Huang2008}